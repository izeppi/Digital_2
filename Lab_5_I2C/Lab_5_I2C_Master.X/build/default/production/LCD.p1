Version 4.0 HI-TECH Software Intermediate Code
"228 D:\Xc8\pic\include\pic16f887.h
[; ;D:\Xc8\pic\include\pic16f887.h: 228: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"358
[; ;D:\Xc8\pic\include\pic16f887.h: 358:     struct {
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"357
[; ;D:\Xc8\pic\include\pic16f887.h: 357: typedef union {
[u S11 `S12 1 ]
[n S11 . . ]
"369
[; ;D:\Xc8\pic\include\pic16f887.h: 369: extern volatile PORTDbits_t PORTDbits __attribute__((address(0x008)));
[v _PORTDbits `VS11 ~T0 @X0 0 e@8 ]
[v F1341 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\Xc8\pic\include\pic.h
[v __delay `JF1341 ~T0 @X0 0 e ]
[p i __delay ]
"194 D:\Xc8\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"54 D:\Xc8\pic\include\pic16f887.h
[; ;D:\Xc8\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\Xc8\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\Xc8\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\Xc8\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\Xc8\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\Xc8\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;D:\Xc8\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;D:\Xc8\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;D:\Xc8\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;D:\Xc8\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;D:\Xc8\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;D:\Xc8\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;D:\Xc8\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;D:\Xc8\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;D:\Xc8\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;D:\Xc8\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;D:\Xc8\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;D:\Xc8\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;D:\Xc8\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;D:\Xc8\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;D:\Xc8\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;D:\Xc8\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;D:\Xc8\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;D:\Xc8\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;D:\Xc8\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;D:\Xc8\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;D:\Xc8\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;D:\Xc8\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;D:\Xc8\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;D:\Xc8\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;D:\Xc8\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;D:\Xc8\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;D:\Xc8\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;D:\Xc8\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;D:\Xc8\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;D:\Xc8\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;D:\Xc8\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;D:\Xc8\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;D:\Xc8\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;D:\Xc8\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;D:\Xc8\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;D:\Xc8\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;D:\Xc8\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;D:\Xc8\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;D:\Xc8\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;D:\Xc8\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;D:\Xc8\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;D:\Xc8\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;D:\Xc8\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;D:\Xc8\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;D:\Xc8\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;D:\Xc8\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;D:\Xc8\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;D:\Xc8\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;D:\Xc8\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;D:\Xc8\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;D:\Xc8\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;D:\Xc8\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;D:\Xc8\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;D:\Xc8\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;D:\Xc8\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;D:\Xc8\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;D:\Xc8\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;D:\Xc8\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;D:\Xc8\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;D:\Xc8\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;D:\Xc8\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;D:\Xc8\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;D:\Xc8\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;D:\Xc8\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;D:\Xc8\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;D:\Xc8\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;D:\Xc8\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;D:\Xc8\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;D:\Xc8\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;D:\Xc8\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;D:\Xc8\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;D:\Xc8\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"15 LCD.c
[p x FOSC = INTRC_NOCLKOUT ]
"16
[p x WDTE = OFF ]
"17
[p x PWRTE = OFF ]
"18
[p x MCLRE = OFF ]
"19
[p x CP = OFF ]
"20
[p x CPD = OFF ]
"21
[p x BOREN = OFF ]
"22
[p x IESO = OFF ]
"23
[p x FCMEN = OFF ]
"24
[p x LVP = OFF ]
"27
[p x BOR4V = BOR40V ]
"28
[p x WRT = OFF ]
"36
[; ;LCD.c: 36: void LCD_CmdWrite(unsigned char cmd)
[v _LCD_CmdWrite `(v ~T0 @X0 1 ef1`uc ]
"37
[; ;LCD.c: 37: {
{
[e :U _LCD_CmdWrite ]
"36
[; ;LCD.c: 36: void LCD_CmdWrite(unsigned char cmd)
[v _cmd `uc ~T0 @X0 1 r1 ]
"37
[; ;LCD.c: 37: {
[f ]
"38
[; ;LCD.c: 38:     PORTB = 0xFF;
[e = _PORTB -> -> 255 `i `uc ]
"39
[; ;LCD.c: 39:     PORTB &= 0x80;
[e =& _PORTB -> -> 128 `i `Vuc ]
"40
[; ;LCD.c: 40:     PORTDbits.RD5 = 0;
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
"41
[; ;LCD.c: 41:     PORTDbits.RD6 = 1;
[e = . . _PORTDbits 0 6 -> -> 1 `i `uc ]
"42
[; ;LCD.c: 42:     PORTDbits.RD7 = 0;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"43
[; ;LCD.c: 43:     _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"44
[; ;LCD.c: 44:     PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"45
[; ;LCD.c: 45:     if(PORTB == 0x80)
[e $ ! == -> _PORTB `i -> 128 `i 140  ]
"46
[; ;LCD.c: 46:     {
{
"47
[; ;LCD.c: 47:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000000/4000.0))); PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"48
[; ;LCD.c: 48:     }
}
[e :U 140 ]
"50
[; ;LCD.c: 50:     PORTB = cmd;
[e = _PORTB _cmd ]
"51
[; ;LCD.c: 51:     PORTDbits.RD5 = 0;
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
"52
[; ;LCD.c: 52:     PORTDbits.RD6 = 0;
[e = . . _PORTDbits 0 6 -> -> 0 `i `uc ]
"54
[; ;LCD.c: 54:     PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"55
[; ;LCD.c: 55:     _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"56
[; ;LCD.c: 56:     PORTDbits.RD7 = 0;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"57
[; ;LCD.c: 57: }
[e :UE 139 ]
}
"59
[; ;LCD.c: 59: void DWR_LCD(unsigned char dat)
[v _DWR_LCD `(v ~T0 @X0 1 ef1`uc ]
"60
[; ;LCD.c: 60: {
{
[e :U _DWR_LCD ]
"59
[; ;LCD.c: 59: void DWR_LCD(unsigned char dat)
[v _dat `uc ~T0 @X0 1 r1 ]
"60
[; ;LCD.c: 60: {
[f ]
"61
[; ;LCD.c: 61:     PORTB = 0xFF;
[e = _PORTB -> -> 255 `i `uc ]
"62
[; ;LCD.c: 62:     PORTB &= 0x80;
[e =& _PORTB -> -> 128 `i `Vuc ]
"63
[; ;LCD.c: 63:     PORTDbits.RD5 = 0;
[e = . . _PORTDbits 0 5 -> -> 0 `i `uc ]
"64
[; ;LCD.c: 64:     PORTDbits.RD6 = 1;
[e = . . _PORTDbits 0 6 -> -> 1 `i `uc ]
"65
[; ;LCD.c: 65:     PORTDbits.RD7 = 0;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"66
[; ;LCD.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"67
[; ;LCD.c: 67:     PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"68
[; ;LCD.c: 68:     if(PORTB == 0x80)
[e $ ! == -> _PORTB `i -> 128 `i 142  ]
"69
[; ;LCD.c: 69:     {
{
"70
[; ;LCD.c: 70:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000000/4000.0))); PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"71
[; ;LCD.c: 71:     }
}
[e :U 142 ]
"73
[; ;LCD.c: 73:     PORTB = dat;
[e = _PORTB _dat ]
"74
[; ;LCD.c: 74:     PORTDbits.RD5 = 1;
[e = . . _PORTDbits 0 5 -> -> 1 `i `uc ]
"75
[; ;LCD.c: 75:     PORTDbits.RD6 = 0;
[e = . . _PORTDbits 0 6 -> -> 0 `i `uc ]
"77
[; ;LCD.c: 77:     PORTDbits.RD7 = 1;
[e = . . _PORTDbits 0 7 -> -> 1 `i `uc ]
"78
[; ;LCD.c: 78:     _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"79
[; ;LCD.c: 79:     PORTDbits.RD7 = 0;
[e = . . _PORTDbits 0 7 -> -> 0 `i `uc ]
"80
[; ;LCD.c: 80: }
[e :UE 141 ]
}
"82
[; ;LCD.c: 82: void LCD_DataWrite(unsigned char *dato)
[v _LCD_DataWrite `(v ~T0 @X0 1 ef1`*uc ]
"83
[; ;LCD.c: 83: {
{
[e :U _LCD_DataWrite ]
"82
[; ;LCD.c: 82: void LCD_DataWrite(unsigned char *dato)
[v _dato `*uc ~T0 @X0 1 r1 ]
"83
[; ;LCD.c: 83: {
[f ]
"84
[; ;LCD.c: 84:     while(*dato != 0)
[e $U 144  ]
[e :U 145 ]
"85
[; ;LCD.c: 85:         DWR_LCD(*dato++);
[e ( _DWR_LCD (1 *U ++ _dato * -> -> 1 `i `x -> -> # *U _dato `i `x ]
[e :U 144 ]
"84
[; ;LCD.c: 84:     while(*dato != 0)
[e $ != -> *U _dato `i -> 0 `i 145  ]
[e :U 146 ]
"86
[; ;LCD.c: 86: }
[e :UE 143 ]
}
"88
[; ;LCD.c: 88: void WriteInt_LCD(unsigned char dato){
[v _WriteInt_LCD `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _WriteInt_LCD ]
[v _dato `uc ~T0 @X0 1 r1 ]
[f ]
"90
[; ;LCD.c: 90:     char output1[3];
[v _output1 `uc ~T0 @X0 -> 3 `i a ]
"91
[; ;LCD.c: 91:     sprintf (output1,"%d",dato);
[e ( _sprintf (1 , (. , &U _output1 :s 1C -> _dato `i ]
"92
[; ;LCD.c: 92:     LCD_DataWrite(output1);
[e ( _LCD_DataWrite (1 -> &U _output1 `*uc ]
"93
[; ;LCD.c: 93: }
[e :UE 147 ]
}
"95
[; ;LCD.c: 95: void init_LCD (void)
[v _init_LCD `(v ~T0 @X0 1 ef ]
"96
[; ;LCD.c: 96: {
{
[e :U _init_LCD ]
[f ]
"97
[; ;LCD.c: 97:     LCD_CmdWrite(0x38);
[e ( _LCD_CmdWrite (1 -> -> 56 `i `uc ]
"98
[; ;LCD.c: 98:     LCD_CmdWrite(0x0E);
[e ( _LCD_CmdWrite (1 -> -> 14 `i `uc ]
"99
[; ;LCD.c: 99:     LCD_CmdWrite(0x01);
[e ( _LCD_CmdWrite (1 -> -> 1 `i `uc ]
"100
[; ;LCD.c: 100:     LCD_CmdWrite(0x06);
[e ( _LCD_CmdWrite (1 -> -> 6 `i `uc ]
"101
[; ;LCD.c: 101:     LCD_CmdWrite(0x80);
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
"102
[; ;LCD.c: 102: }
[e :UE 148 ]
}
[p f _sprintf 8388736 ]
[a 1C 37 100 0 ]
