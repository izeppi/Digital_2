

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 21:09:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0003                     __pstrings:	
   381  0003                     stringtab:	
   382  0003                     __stringtab:	
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385  0003  1BFF               	btfsc	btemp+1,7
   386  0004  280D               	ljmp	stringcode
   387  0005  1383               	bcf	3,7
   388  0006  187F               	btfsc	btemp+1,0
   389  0007  1783               	bsf	3,7
   390  0008  0800               	movf	0,w
   391  0009  0A84               	incf	4,f
   392  000A  1903               	skipnz
   393  000B  0AFF               	incf	btemp+1,f
   394  000C  0008               	return
   395  000D                     stringcode:	
   396  000D                     stringdir:	
   397  000D  3000               	movlw	high stringdir
   398  000E  008A               	movwf	10
   399  000F  0804               	movf	4,w
   400  0010  0A84               	incf	4,f
   401  0011  0782               	addwf	2,f
   402  0012                     __stringbase:	
   403  0012  3400               	retlw	0
   404  0013                     __end_of__stringtab:	
   405  0013                     _dpowers:	
   406  0013  3401               	retlw	1
   407  0014  3400               	retlw	0
   408  0015  340A               	retlw	10
   409  0016  3400               	retlw	0
   410  0017  3464               	retlw	100
   411  0018  3400               	retlw	0
   412  0019  34E8               	retlw	232
   413  001A  3403               	retlw	3
   414  001B  3410               	retlw	16
   415  001C  3427               	retlw	39
   416  001D                     __end_of_dpowers:	
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  0008                     _PORTDbits	set	8
   420  0006                     _PORTB	set	6
   421  0063                     _SSPIF	set	99
   422  005E                     _PEIE	set	94
   423  005F                     _GIE	set	95
   424  0088                     _TRISD	set	136
   425  0086                     _TRISB	set	134
   426  0091                     _SSPCON2bits	set	145
   427  0087                     _TRISCbits	set	135
   428  0094                     _SSPSTAT	set	148
   429  0093                     _SSPADD	set	147
   430  0091                     _SSPCON2	set	145
   431  0463                     _SSPIE	set	1123
   432  043C                     _TRISC4	set	1084
   433  043B                     _TRISC3	set	1083
   434  001D                     STR_2:	
   435  001D  3420               	retlw	32	;' '
   436  001E  3453               	retlw	83	;'S'
   437  001F  3431               	retlw	49	;'1'
   438  0020  3420               	retlw	32	;' '
   439  0021  3420               	retlw	32	;' '
   440  0022  3420               	retlw	32	;' '
   441  0023  3420               	retlw	32	;' '
   442  0024  3453               	retlw	83	;'S'
   443  0025  3432               	retlw	50	;'2'
   444  0026  3420               	retlw	32	;' '
   445  0027  3420               	retlw	32	;' '
   446  0028  3420               	retlw	32	;' '
   447  0029  3420               	retlw	32	;' '
   448  002A  3453               	retlw	83	;'S'
   449  002B  3433               	retlw	51	;'3'
   450  002C  3420               	retlw	32	;' '
   451  002D  3400               	retlw	0
   452  002E                     STR_3:	
   453  002E  3425               	retlw	37	;'%'
   454  002F  342E               	retlw	46	;'.'
   455  0030  3433               	retlw	51	;'3'
   456  0031  3464               	retlw	100	;'d'
   457  0032  3420               	retlw	32	;' '
   458  0033  3420               	retlw	32	;' '
   459  0034  3420               	retlw	32	;' '
   460  0035  3425               	retlw	37	;'%'
   461  0036  342E               	retlw	46	;'.'
   462  0037  3433               	retlw	51	;'3'
   463  0038  3464               	retlw	100	;'d'
   464  0039  3425               	retlw	37	;'%'
   465  003A  3425               	retlw	37	;'%'
   466  003B  3420               	retlw	32	;' '
   467  003C  3420               	retlw	32	;' '
   468  003D  3400               	retlw	0
   469  003E                     STR_1:	
   470  003E  3425               	retlw	37	;'%'
   471  003F  3464               	retlw	100	;'d'
   472  0040  3400               	retlw	0
   473                           
   474                           ; #config settings
   475  0000                     
   476                           	psect	cinit
   477  07F3                     start_initialization:	
   478  07F3                     __initialization:	
   479                           
   480                           ; Clear objects allocated to BANK0
   481  07F3  1383               	bcf	3,7	;select IRP bank0
   482  07F4  3037               	movlw	low __pbssBANK0
   483  07F5  0084               	movwf	4
   484  07F6  304A               	movlw	low (__pbssBANK0+19)
   485  07F7  120A  118A  2293  120A  118A  	fcall	clear_ram0
   486  07FC                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  07FC                     __end_of__initialization:	
   490  07FC  0183               	clrf	3
   491  07FD  120A  118A  2D8F   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssBANK0
   494  0037                     __pbssBANK0:	
   495  0037                     _S_1:	
   496  0037                     	ds	1
   497  0038                     _Sensor:	
   498  0038                     	ds	1
   499  0039                     _Pot_1:	
   500  0039                     	ds	1
   501  003A                     _valor:	
   502  003A                     	ds	16
   503                           
   504                           	psect	clrtext
   505  0293                     clear_ram0:	
   506                           ;	Called with FSR containing the base address, and
   507                           ;	W with the last address+1
   508                           
   509  0293  0064               	clrwdt	;clear the watchdog before getting into this loop
   510  0294                     clrloop0:	
   511  0294  0180               	clrf	0	;clear RAM location pointed to by FSR
   512  0295  0A84               	incf	4,f	;increment pointer
   513  0296  0604               	xorwf	4,w	;XOR with final address
   514  0297  1903               	btfsc	3,2	;have we reached the end yet?
   515  0298  3400               	retlw	0	;all done for this memory range, return
   516  0299  0604               	xorwf	4,w	;XOR again to restore value
   517  029A  2A94               	goto	clrloop0	;do the next byte
   518                           
   519                           	psect	cstackCOMMON
   520  0070                     __pcstackCOMMON:	
   521  0070                     ?_isdigit:	
   522  0070                     ?_Configuracion:	
   523                           ; 1 bit 
   524                           
   525  0070                     ??_isdigit:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_LCD_CmdWrite:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_LCD_CmdWrite:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_DWR_LCD:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ??_DWR_LCD:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_init_LCD:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_I2C_Master_Wait:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_I2C_Master_Wait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_I2C_Master_Start:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_I2C_Master_Start:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_I2C_Master_Stop:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_I2C_Master_Stop:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_I2C_Master_Write:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_main:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?___bmul:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_I2C_Master_Read:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?___wmul:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     ?___lwdiv:	
   577                           ; 2 bytes @ 0x0
   578                           
   579  0070                     ?___lldiv:	
   580                           ; 2 bytes @ 0x0
   581                           
   582  0070                     ___bmul@multiplicand:	
   583                           ; 4 bytes @ 0x0
   584                           
   585  0070                     _isdigit$665:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     I2C_Master_Write@d:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     I2C_Master_Read@a:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0070                     ___wmul@multiplier:	
   595                           ; 2 bytes @ 0x0
   596                           
   597  0070                     ___lwdiv@divisor:	
   598                           ; 2 bytes @ 0x0
   599                           
   600  0070                     ___lldiv@divisor:	
   601                           ; 2 bytes @ 0x0
   602                           
   603                           
   604                           ; 4 bytes @ 0x0
   605  0070                     	ds	1
   606  0071                     ??___bmul:	
   607  0071                     LCD_CmdWrite@cmd:	
   608                           ; 1 bytes @ 0x1
   609                           
   610  0071                     DWR_LCD@dat:	
   611                           ; 1 bytes @ 0x1
   612                           
   613  0071                     isdigit@c:	
   614                           ; 1 bytes @ 0x1
   615                           
   616                           
   617                           ; 1 bytes @ 0x1
   618  0071                     	ds	1
   619  0072                     ?_LCD_DataWrite:	
   620  0072                     ??_init_LCD:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ??_I2C_Master_Write:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ??_I2C_Master_Read:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ___bmul@product:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     LCD_DataWrite@dato:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     ___wmul@multiplicand:	
   636                           ; 2 bytes @ 0x2
   637                           
   638  0072                     ___lwdiv@dividend:	
   639                           ; 2 bytes @ 0x2
   640                           
   641                           
   642                           ; 2 bytes @ 0x2
   643  0072                     	ds	1
   644  0073                     ___bmul@multiplier:	
   645                           
   646                           ; 1 bytes @ 0x3
   647  0073                     	ds	1
   648  0074                     ??_LCD_DataWrite:	
   649  0074                     ??___wmul:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ??___lwdiv:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0074                     I2C_Master_Read@temp:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0074                     ___wmul@product:	
   659                           ; 2 bytes @ 0x4
   660                           
   661  0074                     ___lldiv@dividend:	
   662                           ; 2 bytes @ 0x4
   663                           
   664                           
   665                           ; 4 bytes @ 0x4
   666  0074                     	ds	1
   667  0075                     ___lwdiv@quotient:	
   668                           
   669                           ; 2 bytes @ 0x5
   670  0075                     	ds	1
   671  0076                     ?___awdiv:	
   672  0076                     ___awdiv@divisor:	
   673                           ; 2 bytes @ 0x6
   674                           
   675                           
   676                           ; 2 bytes @ 0x6
   677  0076                     	ds	1
   678  0077                     ___lwdiv@counter:	
   679                           
   680                           ; 1 bytes @ 0x7
   681  0077                     	ds	1
   682  0078                     ??___lldiv:	
   683  0078                     ?___lwmod:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0078                     ___awdiv@dividend:	
   687                           ; 2 bytes @ 0x8
   688                           
   689  0078                     ___lwmod@divisor:	
   690                           ; 2 bytes @ 0x8
   691                           
   692                           
   693                           ; 2 bytes @ 0x8
   694  0078                     	ds	1
   695  0079                     ___lldiv@quotient:	
   696                           
   697                           ; 4 bytes @ 0x9
   698  0079                     	ds	1
   699  007A                     ??___awdiv:	
   700  007A                     ___lwmod@dividend:	
   701                           ; 1 bytes @ 0xA
   702                           
   703                           
   704                           ; 2 bytes @ 0xA
   705  007A                     	ds	2
   706  007C                     ??___lwmod:	
   707                           
   708                           ; 1 bytes @ 0xC
   709  007C                     	ds	1
   710  007D                     ___lldiv@counter:	
   711  007D                     ___lwmod@counter:	
   712                           ; 1 bytes @ 0xD
   713                           
   714                           
   715                           ; 1 bytes @ 0xD
   716  007D                     	ds	1
   717  007E                     ??_Configuracion:	
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721                           ; 1 bytes @ 0xE
   722                           
   723  0020                     ?_I2C_Master_Init:	
   724  0020                     ?_sprintf:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     sprintf@f:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0020                     ___awdiv@counter:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     I2C_Master_Init@c:	
   734                           ; 1 bytes @ 0x0
   735                           
   736                           
   737                           ; 4 bytes @ 0x0
   738  0020                     	ds	1
   739  0021                     ___awdiv@sign:	
   740                           
   741                           ; 1 bytes @ 0x1
   742  0021                     	ds	1
   743  0022                     ___awdiv@quotient:	
   744                           
   745                           ; 2 bytes @ 0x2
   746  0022                     	ds	2
   747  0024                     ??_I2C_Master_Init:	
   748                           
   749                           ; 1 bytes @ 0x4
   750  0024                     	ds	1
   751  0025                     ??_sprintf:	
   752                           
   753                           ; 1 bytes @ 0x5
   754  0025                     	ds	3
   755  0028                     sprintf@ap:	
   756                           
   757                           ; 1 bytes @ 0x8
   758  0028                     	ds	1
   759  0029                     sprintf@flag:	
   760                           
   761                           ; 1 bytes @ 0x9
   762  0029                     	ds	1
   763  002A                     sprintf@cp:	
   764                           
   765                           ; 1 bytes @ 0xA
   766  002A                     	ds	1
   767  002B                     sprintf@len:	
   768                           
   769                           ; 2 bytes @ 0xB
   770  002B                     	ds	2
   771  002D                     sprintf@val:	
   772                           
   773                           ; 2 bytes @ 0xD
   774  002D                     	ds	2
   775  002F                     sprintf@sp:	
   776                           
   777                           ; 1 bytes @ 0xF
   778  002F                     	ds	1
   779  0030                     sprintf@prec:	
   780                           
   781                           ; 1 bytes @ 0x10
   782  0030                     	ds	1
   783  0031                     sprintf@c:	
   784                           
   785                           ; 1 bytes @ 0x11
   786  0031                     	ds	1
   787  0032                     ??_main:	
   788                           
   789                           ; 1 bytes @ 0x12
   790  0032                     	ds	5
   791                           
   792                           	psect	maintext
   793  058F                     __pmaintext:	
   794 ;;
   795 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   796 ;;
   797 ;; *************** function _main *****************
   798 ;; Defined at:
   799 ;;		line 37 in file "I2C_Master.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : B00/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       5       0       0       0
   816 ;;      Totals:         0       5       0       0       0
   817 ;;Total ram usage:        5 bytes
   818 ;; Hardware stack levels required when called:    3
   819 ;; This function calls:
   820 ;;		_Configuracion
   821 ;;		_I2C_Master_Read
   822 ;;		_I2C_Master_Start
   823 ;;		_I2C_Master_Stop
   824 ;;		_I2C_Master_Write
   825 ;;		_LCD_CmdWrite
   826 ;;		_LCD_DataWrite
   827 ;;		___awdiv
   828 ;;		___wmul
   829 ;;		_sprintf
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _main
   837  058F                     _main:	
   838  058F                     l1613:	
   839                           ;incstack = 0
   840                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   841                           
   842                           
   843                           ;I2C_Master.c: 38:     Configuracion();
   844  058F  120A  118A  22EB  120A  118A  	fcall	_Configuracion
   845                           
   846                           ;I2C_Master.c: 39:     LCD_CmdWrite(0xC0);
   847  0594  30C0               	movlw	192
   848  0595  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
   849  059A                     l1615:	
   850                           
   851                           ;I2C_Master.c: 40:     LCD_DataWrite(" S1    S2    S3 ");
   852  059A  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   853  059B  00F2               	movwf	LCD_DataWrite@dato
   854  059C  3080               	movlw	128
   855  059D  00F3               	movwf	LCD_DataWrite@dato+1
   856  059E  120A  118A  2348  120A  118A  	fcall	_LCD_DataWrite
   857  05A3                     l1617:	
   858                           
   859                           ;I2C_Master.c: 42:         I2C_Master_Start();
   860  05A3  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Start
   861  05A8                     l1619:	
   862                           
   863                           ;I2C_Master.c: 43:         I2C_Master_Write(0x51);
   864  05A8  3051               	movlw	81
   865  05A9  00F0               	movwf	I2C_Master_Write@d
   866  05AA  3000               	movlw	0
   867  05AB  00F1               	movwf	I2C_Master_Write@d+1
   868  05AC  120A  118A  22AD  120A  118A  	fcall	_I2C_Master_Write
   869  05B1                     l1621:	
   870                           
   871                           ;I2C_Master.c: 44:         Pot_1 = I2C_Master_Read(0);
   872  05B1  3000               	movlw	0
   873  05B2  00F0               	movwf	I2C_Master_Read@a
   874  05B3  00F1               	movwf	I2C_Master_Read@a+1
   875  05B4  120A  118A  236E  120A  118A  	fcall	_I2C_Master_Read
   876  05B9  0870               	movf	?_I2C_Master_Read,w
   877  05BA  1283               	bcf	3,5	;RP0=0, select bank0
   878  05BB  1303               	bcf	3,6	;RP1=0, select bank0
   879  05BC  00B2               	movwf	??_main
   880  05BD  0832               	movf	??_main,w
   881  05BE  00B9               	movwf	_Pot_1
   882  05BF                     l1623:	
   883                           
   884                           ;I2C_Master.c: 45:         I2C_Master_Stop();
   885  05BF  120A  118A  22A4  120A  118A  	fcall	_I2C_Master_Stop
   886  05C4                     l1625:	
   887                           
   888                           ;I2C_Master.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
   889  05C4  300D               	movlw	13
   890  05C5  1283               	bcf	3,5	;RP0=0, select bank0
   891  05C6  1303               	bcf	3,6	;RP1=0, select bank0
   892  05C7  00B3               	movwf	??_main+1
   893  05C8  30FB               	movlw	251
   894  05C9  00B2               	movwf	??_main
   895  05CA                     u1257:	
   896  05CA  0BB2               	decfsz	??_main,f
   897  05CB  2DCA               	goto	u1257
   898  05CC  0BB3               	decfsz	??_main+1,f
   899  05CD  2DCA               	goto	u1257
   900  05CE                     l1627:	
   901                           
   902                           ;I2C_Master.c: 48:         I2C_Master_Start();
   903  05CE  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Start
   904  05D3                     l1629:	
   905                           
   906                           ;I2C_Master.c: 49:         I2C_Master_Write(0x61);
   907  05D3  3061               	movlw	97
   908  05D4  00F0               	movwf	I2C_Master_Write@d
   909  05D5  3000               	movlw	0
   910  05D6  00F1               	movwf	I2C_Master_Write@d+1
   911  05D7  120A  118A  22AD  120A  118A  	fcall	_I2C_Master_Write
   912  05DC                     l1631:	
   913                           
   914                           ;I2C_Master.c: 50:         Sensor = I2C_Master_Read(0);
   915  05DC  3000               	movlw	0
   916  05DD  00F0               	movwf	I2C_Master_Read@a
   917  05DE  00F1               	movwf	I2C_Master_Read@a+1
   918  05DF  120A  118A  236E  120A  118A  	fcall	_I2C_Master_Read
   919  05E4  0870               	movf	?_I2C_Master_Read,w
   920  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   921  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   922  05E7  00B2               	movwf	??_main
   923  05E8  0832               	movf	??_main,w
   924  05E9  00B8               	movwf	_Sensor
   925  05EA                     l1633:	
   926                           
   927                           ;I2C_Master.c: 51:         I2C_Master_Stop();
   928  05EA  120A  118A  22A4  120A  118A  	fcall	_I2C_Master_Stop
   929  05EF                     l1635:	
   930                           
   931                           ;I2C_Master.c: 52:         _delay((unsigned long)((10)*(4000000/4000.0)));
   932  05EF  300D               	movlw	13
   933  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   934  05F1  1303               	bcf	3,6	;RP1=0, select bank0
   935  05F2  00B3               	movwf	??_main+1
   936  05F3  30FB               	movlw	251
   937  05F4  00B2               	movwf	??_main
   938  05F5                     u1267:	
   939  05F5  0BB2               	decfsz	??_main,f
   940  05F6  2DF5               	goto	u1267
   941  05F7  0BB3               	decfsz	??_main+1,f
   942  05F8  2DF5               	goto	u1267
   943  05F9                     l1637:	
   944                           
   945                           ;I2C_Master.c: 54:         S_1 = (Sensor*100)/220;
   946  05F9  30DC               	movlw	220
   947  05FA  00F6               	movwf	___awdiv@divisor
   948  05FB  3000               	movlw	0
   949  05FC  00F7               	movwf	___awdiv@divisor+1
   950  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   951  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   952  05FF  0838               	movf	_Sensor,w
   953  0600  00B2               	movwf	??_main
   954  0601  01B3               	clrf	??_main+1
   955  0602  0832               	movf	??_main,w
   956  0603  00F0               	movwf	___wmul@multiplier
   957  0604  0833               	movf	??_main+1,w
   958  0605  00F1               	movwf	___wmul@multiplier+1
   959  0606  3064               	movlw	100
   960  0607  00F2               	movwf	___wmul@multiplicand
   961  0608  3000               	movlw	0
   962  0609  00F3               	movwf	___wmul@multiplicand+1
   963  060A  120A  118A  2323  120A  118A  	fcall	___wmul
   964  060F  0871               	movf	?___wmul+1,w
   965  0610  00F9               	movwf	___awdiv@dividend+1
   966  0611  0870               	movf	?___wmul,w
   967  0612  00F8               	movwf	___awdiv@dividend
   968  0613  120A  118A  2526  120A  118A  	fcall	___awdiv
   969  0618  0876               	movf	?___awdiv,w
   970  0619  1283               	bcf	3,5	;RP0=0, select bank0
   971  061A  1303               	bcf	3,6	;RP1=0, select bank0
   972  061B  00B4               	movwf	??_main+2
   973  061C  0834               	movf	??_main+2,w
   974  061D  00B7               	movwf	_S_1
   975  061E                     l1639:	
   976                           
   977                           ;I2C_Master.c: 56:         LCD_CmdWrite(0x80);
   978  061E  3080               	movlw	128
   979  061F  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
   980  0624                     l1641:	
   981                           
   982                           ;I2C_Master.c: 57:         sprintf(valor, "%.3d   %.3d%%  ", Pot_1,S_1);
   983  0624  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   984  0625  1283               	bcf	3,5	;RP0=0, select bank0
   985  0626  1303               	bcf	3,6	;RP1=0, select bank0
   986  0627  00B2               	movwf	??_main
   987  0628  0832               	movf	??_main,w
   988  0629  00A0               	movwf	sprintf@f
   989  062A  0839               	movf	_Pot_1,w
   990  062B  00B3               	movwf	??_main+1
   991  062C  01B4               	clrf	??_main+2
   992  062D  0833               	movf	??_main+1,w
   993  062E  00A1               	movwf	?_sprintf+1
   994  062F  0834               	movf	??_main+2,w
   995  0630  00A2               	movwf	?_sprintf+2
   996  0631  0837               	movf	_S_1,w
   997  0632  00B5               	movwf	??_main+3
   998  0633  01B6               	clrf	??_main+4
   999  0634  0835               	movf	??_main+3,w
  1000  0635  00A3               	movwf	?_sprintf+3
  1001  0636  0836               	movf	??_main+4,w
  1002  0637  00A4               	movwf	?_sprintf+4
  1003  0638  303A               	movlw	(low (_valor| 0))& (0+255)
  1004  0639  120A  118A  264B  120A  118A  	fcall	_sprintf
  1005  063E                     l1643:	
  1006                           
  1007                           ;I2C_Master.c: 58:         LCD_DataWrite(valor);
  1008  063E  303A               	movlw	(low (_valor| 0))& (0+255)
  1009  063F  00F2               	movwf	LCD_DataWrite@dato
  1010  0640  3000               	movlw	0
  1011  0641  00F3               	movwf	LCD_DataWrite@dato+1
  1012  0642  120A  118A  2348  120A  118A  	fcall	_LCD_DataWrite
  1013  0647  2DA3               	goto	l1617
  1014  0648  120A  118A  2800   	ljmp	start
  1015  064B                     __end_of_main:	
  1016                           
  1017                           	psect	text1
  1018  064B                     __ptext1:	
  1019 ;; *************** function _sprintf *****************
  1020 ;; Defined at:
  1021 ;;		line 505 in file "D:\Xc8\pic\sources\c90\common\doprnt.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  sp              1    wreg     PTR unsigned char 
  1024 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
  1025 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1026 ;;		 -> STR_3(16), STR_1(3), 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1029 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
  1030 ;;  tmpval          4    0        struct .
  1031 ;;  val             2   13[BANK0 ] unsigned int 
  1032 ;;  len             2   11[BANK0 ] unsigned int 
  1033 ;;  c               1   17[BANK0 ] unsigned char 
  1034 ;;  prec            1   16[BANK0 ] char 
  1035 ;;  cp              1   10[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> sprintf@c(1), 
  1037 ;;  flag            1    9[BANK0 ] unsigned char 
  1038 ;;  ap              1    8[BANK0 ] PTR void [1]
  1039 ;;		 -> ?_sprintf(2), 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    0[BANK0 ] int 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       5       0       0       0
  1050 ;;      Locals:         0      10       0       0       0
  1051 ;;      Temps:          0       3       0       0       0
  1052 ;;      Totals:         0      18       0       0       0
  1053 ;;Total ram usage:       18 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		___bmul
  1058 ;;		___lwdiv
  1059 ;;		___lwmod
  1060 ;;		_isdigit
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;;		_WriteInt_LCD
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _sprintf
  1069  064B                     _sprintf:	
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073                           ;sprintf@sp stored from wreg
  1074  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1075  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1076  064D  00AF               	movwf	sprintf@sp
  1077  064E                     l1409:	
  1078                           
  1079                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const char * f, ...);D:
      +                          \Xc8\pic\sources\c90\common\doprnt.c: 506: {;D:\Xc8\pic\sources\c90\common\doprnt.c: 507
      +                          :  va_list ap;;D:\Xc8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\Xc8\pic\sources\
      +                          c90\common\doprnt.c: 521:  signed char prec;;D:\Xc8\pic\sources\c90\common\doprnt.c: 525
      +                          :  unsigned char flag;;D:\Xc8\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;D:\Xc8\pi
      +                          c\sources\c90\common\doprnt.c: 545:  unsigned int val;;D:\Xc8\pic\sources\c90\common\dop
      +                          rnt.c: 546:  unsigned len;
  1080  064E  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1081  064F  00A5               	movwf	??_sprintf
  1082  0650  0825               	movf	??_sprintf,w
  1083  0651  00A8               	movwf	sprintf@ap
  1084                           
  1085                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1086  0652  2FDC               	goto	l1503
  1087  0653                     l1411:	
  1088                           
  1089                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1090  0653  3025               	movlw	37
  1091  0654  0631               	xorwf	sprintf@c,w
  1092  0655  1903               	btfsc	3,2
  1093  0656  2E58               	goto	u931
  1094  0657  2E59               	goto	u930
  1095  0658                     u931:	
  1096  0658  2E65               	goto	l1417
  1097  0659                     u930:	
  1098  0659                     l1413:	
  1099                           
  1100                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 557:   {;D:\Xc8\pic\sources\c90\common\doprnt.c
      +                          : 558:    ((*sp++ = (c)));
  1101  0659  0831               	movf	sprintf@c,w
  1102  065A  00A5               	movwf	??_sprintf
  1103  065B  082F               	movf	sprintf@sp,w
  1104  065C  0084               	movwf	4
  1105  065D  0825               	movf	??_sprintf,w
  1106  065E  1383               	bcf	3,7	;select IRP bank0
  1107  065F  0080               	movwf	0
  1108  0660                     l1415:	
  1109  0660  3001               	movlw	1
  1110  0661  00A5               	movwf	??_sprintf
  1111  0662  0825               	movf	??_sprintf,w
  1112  0663  07AF               	addwf	sprintf@sp,f
  1113                           
  1114                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1115  0664  2FDC               	goto	l1503
  1116  0665                     l1417:	
  1117                           
  1118                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1119  0665  01A9               	clrf	sprintf@flag
  1120  0666                     l1419:	
  1121                           
  1122                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1123  0666  0820               	movf	sprintf@f,w
  1124  0667  0084               	movwf	4
  1125  0668  120A  118A  200D  120A  118A  	fcall	stringdir
  1126  066D  3A2E               	xorlw	46
  1127  066E  1D03               	skipz
  1128  066F  2E71               	goto	u941
  1129  0670  2E72               	goto	u940
  1130  0671                     u941:	
  1131  0671  2EA9               	goto	l1433
  1132  0672                     u940:	
  1133  0672                     l1421:	
  1134                           
  1135                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 630:    f++;
  1136  0672  3001               	movlw	1
  1137  0673  00A5               	movwf	??_sprintf
  1138  0674  0825               	movf	??_sprintf,w
  1139  0675  07A0               	addwf	sprintf@f,f
  1140  0676                     l1423:	
  1141                           
  1142                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 644:    {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 645:     prec = 0;
  1143  0676  01B0               	clrf	sprintf@prec
  1144                           
  1145                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
  1146  0677  2E98               	goto	l1431
  1147  0678                     l1425:	
  1148                           
  1149                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1150  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1152  067A  0830               	movf	sprintf@prec,w
  1153  067B  00A5               	movwf	??_sprintf
  1154  067C  0825               	movf	??_sprintf,w
  1155  067D  00F0               	movwf	___bmul@multiplicand
  1156  067E  300A               	movlw	10
  1157  067F  120A  118A  22D6  120A  118A  	fcall	___bmul
  1158  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0686  00A6               	movwf	??_sprintf+1
  1161  0687  0826               	movf	??_sprintf+1,w
  1162  0688  00B0               	movwf	sprintf@prec
  1163  0689                     l1427:	
  1164                           
  1165                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1166  0689  0820               	movf	sprintf@f,w
  1167  068A  0084               	movwf	4
  1168  068B  120A  118A  200D  120A  118A  	fcall	stringdir
  1169  0690  3ED0               	addlw	-48
  1170  0691  00A5               	movwf	??_sprintf
  1171  0692  0825               	movf	??_sprintf,w
  1172  0693  07B0               	addwf	sprintf@prec,f
  1173  0694                     l1429:	
  1174  0694  3001               	movlw	1
  1175  0695  00A5               	movwf	??_sprintf
  1176  0696  0825               	movf	??_sprintf,w
  1177  0697  07A0               	addwf	sprintf@f,f
  1178  0698                     l1431:	
  1179                           
  1180                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
  1181  0698  0820               	movf	sprintf@f,w
  1182  0699  0084               	movwf	4
  1183  069A  120A  118A  200D  120A  118A  	fcall	stringdir
  1184  069F  120A  118A  22C4  120A  118A  	fcall	_isdigit
  1185  06A4  1803               	btfsc	3,0
  1186  06A5  2EA7               	goto	u951
  1187  06A6  2EA8               	goto	u950
  1188  06A7                     u951:	
  1189  06A7  2E78               	goto	l1425
  1190  06A8                     u950:	
  1191  06A8  2EE8               	goto	l1453
  1192  06A9                     l1433:	
  1193                           
  1194                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1195  06A9  01B0               	clrf	sprintf@prec
  1196  06AA  2EE8               	goto	l1453
  1197  06AB                     l1435:	
  1198                           
  1199                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 779:    if(prec && (prec < ((int)len)))
  1200  06AB  0830               	movf	sprintf@prec,w
  1201  06AC  1903               	btfsc	3,2
  1202  06AD  2EAF               	goto	u961
  1203  06AE  2EB0               	goto	u960
  1204  06AF                     u961:	
  1205  06AF  2ED0               	goto	l1447
  1206  06B0                     u960:	
  1207  06B0                     l1437:	
  1208  06B0  0830               	movf	sprintf@prec,w
  1209  06B1  3A80               	xorlw	128
  1210  06B2  3E7F               	addlw	-129
  1211  06B3  1803               	skipnc
  1212  06B4  2EB6               	goto	u971
  1213  06B5  2EB7               	goto	u970
  1214  06B6                     u971:	
  1215  06B6  2ED0               	goto	l1447
  1216  06B7                     u970:	
  1217  06B7                     l1439:	
  1218                           
  1219                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 780:     len = (unsigned char)prec;
  1220  06B7  0830               	movf	sprintf@prec,w
  1221  06B8  00A5               	movwf	??_sprintf
  1222  06B9  01A6               	clrf	??_sprintf+1
  1223  06BA  0825               	movf	??_sprintf,w
  1224  06BB  00AB               	movwf	sprintf@len
  1225  06BC  0826               	movf	??_sprintf+1,w
  1226  06BD  00AC               	movwf	sprintf@len+1
  1227  06BE  2ED0               	goto	l1447
  1228  06BF                     l1441:	
  1229                           
  1230                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ = (*cp++)));
  1231  06BF  082A               	movf	sprintf@cp,w
  1232  06C0  0084               	movwf	4
  1233  06C1  1383               	bcf	3,7	;select IRP bank0
  1234  06C2  0800               	movf	0,w
  1235  06C3  00A5               	movwf	??_sprintf
  1236  06C4  082F               	movf	sprintf@sp,w
  1237  06C5  0084               	movwf	4
  1238  06C6  0825               	movf	??_sprintf,w
  1239  06C7  0080               	movwf	0
  1240  06C8                     l1443:	
  1241  06C8  3001               	movlw	1
  1242  06C9  00A5               	movwf	??_sprintf
  1243  06CA  0825               	movf	??_sprintf,w
  1244  06CB  07AA               	addwf	sprintf@cp,f
  1245  06CC                     l1445:	
  1246  06CC  3001               	movlw	1
  1247  06CD  00A5               	movwf	??_sprintf
  1248  06CE  0825               	movf	??_sprintf,w
  1249  06CF  07AF               	addwf	sprintf@sp,f
  1250  06D0                     l1447:	
  1251                           
  1252                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 793:    while(len--)
  1253  06D0  3001               	movlw	1
  1254  06D1  02AB               	subwf	sprintf@len,f
  1255  06D2  3000               	movlw	0
  1256  06D3  1C03               	skipc
  1257  06D4  03AC               	decf	sprintf@len+1,f
  1258  06D5  02AC               	subwf	sprintf@len+1,f
  1259  06D6  0A2B               	incf	sprintf@len,w
  1260  06D7  1D03               	skipz
  1261  06D8  2EDD               	goto	u981
  1262  06D9  0A2C               	incf	sprintf@len+1,w
  1263  06DA  1D03               	btfss	3,2
  1264  06DB  2EDD               	goto	u981
  1265  06DC  2EDE               	goto	u980
  1266  06DD                     u981:	
  1267  06DD  2EBF               	goto	l1441
  1268  06DE                     u980:	
  1269  06DE  2FDC               	goto	l1503
  1270  06DF                     l1449:	
  1271                           
  1272                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 831:    cp = (char *)&c;
  1273  06DF  3031               	movlw	(low (sprintf@c| 0))& (0+255)
  1274  06E0  00A5               	movwf	??_sprintf
  1275  06E1  0825               	movf	??_sprintf,w
  1276  06E2  00AA               	movwf	sprintf@cp
  1277                           
  1278                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 832:    len = 1;
  1279  06E3  3001               	movlw	1
  1280  06E4  00AB               	movwf	sprintf@len
  1281  06E5  3000               	movlw	0
  1282  06E6  00AC               	movwf	sprintf@len+1
  1283                           
  1284                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 833:    goto dostring;
  1285  06E7  2EAB               	goto	l1435
  1286  06E8                     l1453:	
  1287  06E8  3001               	movlw	1
  1288  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1289  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1290  06EB  07A0               	addwf	sprintf@f,f
  1291  06EC  30FF               	movlw	-1
  1292  06ED  0720               	addwf	sprintf@f,w
  1293  06EE  0084               	movwf	4
  1294  06EF  120A  118A  200D  120A  118A  	fcall	stringdir
  1295  06F4  00B1               	movwf	sprintf@c
  1296  06F5  00A5               	movwf	??_sprintf
  1297  06F6  01A6               	clrf	??_sprintf+1
  1298                           
  1299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 1, Range of values is 0 to 0
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte            4     3 (average)
  1305                           ; direct_byte           11     8 (fixed)
  1306                           ; jumptable            260     6 (fixed)
  1307                           ;	Chosen strategy is simple_byte
  1308  06F7  0826               	movf	??_sprintf+1,w
  1309  06F8  3A00               	xorlw	0	; case 0
  1310  06F9  1903               	skipnz
  1311  06FA  2EFC               	goto	l1675
  1312  06FB  2EDF               	goto	l1449
  1313  06FC                     l1675:	
  1314                           
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 3, Range of values is 0 to 105
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte           10     6 (average)
  1320                           ; jumptable            260     6 (fixed)
  1321                           ;	Chosen strategy is simple_byte
  1322  06FC  0825               	movf	??_sprintf,w
  1323  06FD  3A00               	xorlw	0	; case 0
  1324  06FE  1903               	skipnz
  1325  06FF  2FEE               	goto	l1505
  1326  0700  3A64               	xorlw	100	; case 100
  1327  0701  1903               	skipnz
  1328  0702  2F07               	goto	l1455
  1329  0703  3A0D               	xorlw	13	; case 105
  1330  0704  1903               	skipnz
  1331  0705  2F07               	goto	l1455
  1332  0706  2EDF               	goto	l1449
  1333  0707                     l1455:	
  1334                           
  1335                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1336  0707  0828               	movf	sprintf@ap,w
  1337  0708  0084               	movwf	4
  1338  0709  1383               	bcf	3,7	;select IRP bank0
  1339  070A  0800               	movf	0,w
  1340  070B  00AD               	movwf	sprintf@val
  1341  070C  0A84               	incf	4,f
  1342  070D  0800               	movf	0,w
  1343  070E  00AE               	movwf	sprintf@val+1
  1344  070F                     l1457:	
  1345  070F  3002               	movlw	2
  1346  0710  00A5               	movwf	??_sprintf
  1347  0711  0825               	movf	??_sprintf,w
  1348  0712  07A8               	addwf	sprintf@ap,f
  1349  0713                     l1459:	
  1350                           
  1351                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1352  0713  1FAE               	btfss	sprintf@val+1,7
  1353  0714  2F16               	goto	u991
  1354  0715  2F17               	goto	u990
  1355  0716                     u991:	
  1356  0716  2F20               	goto	l1465
  1357  0717                     u990:	
  1358  0717                     l1461:	
  1359                           
  1360                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1361  0717  3003               	movlw	3
  1362  0718  00A5               	movwf	??_sprintf
  1363  0719  0825               	movf	??_sprintf,w
  1364  071A  04A9               	iorwf	sprintf@flag,f
  1365  071B                     l1463:	
  1366                           
  1367                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1368  071B  09AD               	comf	sprintf@val,f
  1369  071C  09AE               	comf	sprintf@val+1,f
  1370  071D  0AAD               	incf	sprintf@val,f
  1371  071E  1903               	skipnz
  1372  071F  0AAE               	incf	sprintf@val+1,f
  1373  0720                     l1465:	
  1374                           
  1375                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1292:   };D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1316:   if(prec == 0 && val == 0)
  1376  0720  0830               	movf	sprintf@prec,w
  1377  0721  1D03               	btfss	3,2
  1378  0722  2F24               	goto	u1001
  1379  0723  2F25               	goto	u1000
  1380  0724                     u1001:	
  1381  0724  2F2F               	goto	l1471
  1382  0725                     u1000:	
  1383  0725                     l1467:	
  1384  0725  082D               	movf	sprintf@val,w
  1385  0726  042E               	iorwf	sprintf@val+1,w
  1386  0727  1D03               	btfss	3,2
  1387  0728  2F2A               	goto	u1011
  1388  0729  2F2B               	goto	u1010
  1389  072A                     u1011:	
  1390  072A  2F2F               	goto	l1471
  1391  072B                     u1010:	
  1392  072B                     l1469:	
  1393                           
  1394                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1395  072B  3001               	movlw	1
  1396  072C  00A5               	movwf	??_sprintf
  1397  072D  0825               	movf	??_sprintf,w
  1398  072E  07B0               	addwf	sprintf@prec,f
  1399  072F                     l1471:	
  1400                           
  1401                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof
      +                           dpowers[0] ; c++)
  1402  072F  01B1               	clrf	sprintf@c
  1403  0730  0AB1               	incf	sprintf@c,f
  1404  0731  3005               	movlw	5
  1405  0732  0631               	xorwf	sprintf@c,w
  1406  0733  1D03               	btfss	3,2
  1407  0734  2F36               	goto	u1021
  1408  0735  2F37               	goto	u1020
  1409  0736                     u1021:	
  1410  0736  2F38               	goto	l1475
  1411  0737                     u1020:	
  1412  0737  2F5E               	goto	l1481
  1413  0738                     l1475:	
  1414                           
  1415                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1416  0738  0831               	movf	sprintf@c,w
  1417  0739  00A5               	movwf	??_sprintf
  1418  073A  0725               	addwf	??_sprintf,w
  1419  073B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1420  073C  0084               	movwf	4
  1421  073D  120A  118A  200D  120A  118A  	fcall	stringdir
  1422  0742  00A6               	movwf	??_sprintf+1
  1423  0743  120A  118A  200D  120A  118A  	fcall	stringdir
  1424  0748  00A7               	movwf	??_sprintf+2
  1425  0749  0827               	movf	??_sprintf+2,w
  1426  074A  022E               	subwf	sprintf@val+1,w
  1427  074B  1D03               	skipz
  1428  074C  2F4F               	goto	u1035
  1429  074D  0826               	movf	??_sprintf+1,w
  1430  074E  022D               	subwf	sprintf@val,w
  1431  074F                     u1035:	
  1432  074F  1803               	skipnc
  1433  0750  2F52               	goto	u1031
  1434  0751  2F53               	goto	u1030
  1435  0752                     u1031:	
  1436  0752  2F54               	goto	l1479
  1437  0753                     u1030:	
  1438  0753  2F5E               	goto	l1481
  1439  0754                     l1479:	
  1440  0754  3001               	movlw	1
  1441  0755  00A5               	movwf	??_sprintf
  1442  0756  0825               	movf	??_sprintf,w
  1443  0757  07B1               	addwf	sprintf@c,f
  1444  0758  3005               	movlw	5
  1445  0759  0631               	xorwf	sprintf@c,w
  1446  075A  1D03               	btfss	3,2
  1447  075B  2F5D               	goto	u1041
  1448  075C  2F5E               	goto	u1040
  1449  075D                     u1041:	
  1450  075D  2F38               	goto	l1475
  1451  075E                     u1040:	
  1452  075E                     l1481:	
  1453                           
  1454                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  1455  075E  0830               	movf	sprintf@prec,w
  1456  075F  00A5               	movwf	??_sprintf
  1457  0760  01A6               	clrf	??_sprintf+1
  1458  0761  1BA5               	btfsc	??_sprintf,7
  1459  0762  03A6               	decf	??_sprintf+1,f
  1460  0763  0826               	movf	??_sprintf+1,w
  1461  0764  3A80               	xorlw	128
  1462  0765  3C80               	sublw	128
  1463  0766  1D03               	skipz
  1464  0767  2F6A               	goto	u1055
  1465  0768  0825               	movf	??_sprintf,w
  1466  0769  0231               	subwf	sprintf@c,w
  1467  076A                     u1055:	
  1468  076A  1803               	skipnc
  1469  076B  2F6D               	goto	u1051
  1470  076C  2F6E               	goto	u1050
  1471  076D                     u1051:	
  1472  076D  2F6F               	goto	l1485
  1473  076E                     u1050:	
  1474  076E                     l1483:	
  1475  076E  2F89               	goto	l1489
  1476  076F                     l1485:	
  1477  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0771  0830               	movf	sprintf@prec,w
  1480  0772  00A5               	movwf	??_sprintf
  1481  0773  01A6               	clrf	??_sprintf+1
  1482  0774  1BA5               	btfsc	??_sprintf,7
  1483  0775  03A6               	decf	??_sprintf+1,f
  1484  0776  0826               	movf	??_sprintf+1,w
  1485  0777  3A80               	xorlw	128
  1486  0778  00A7               	movwf	??_sprintf+2
  1487  0779  3080               	movlw	128
  1488  077A  0227               	subwf	??_sprintf+2,w
  1489  077B  1D03               	skipz
  1490  077C  2F7F               	goto	u1065
  1491  077D  0831               	movf	sprintf@c,w
  1492  077E  0225               	subwf	??_sprintf,w
  1493  077F                     u1065:	
  1494  077F  1803               	skipnc
  1495  0780  2F82               	goto	u1061
  1496  0781  2F83               	goto	u1060
  1497  0782                     u1061:	
  1498  0782  2F89               	goto	l1489
  1499  0783                     u1060:	
  1500  0783                     l1487:	
  1501                           
  1502                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  1503  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0785  0831               	movf	sprintf@c,w
  1506  0786  00A5               	movwf	??_sprintf
  1507  0787  0825               	movf	??_sprintf,w
  1508  0788  00B0               	movwf	sprintf@prec
  1509  0789                     l1489:	
  1510                           
  1511                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1464:    if(flag & 0x03)
  1512  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1513  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1514  078B  0829               	movf	sprintf@flag,w
  1515  078C  3903               	andlw	3
  1516  078D  1903               	btfsc	3,2
  1517  078E  2F90               	goto	u1071
  1518  078F  2F91               	goto	u1070
  1519  0790                     u1071:	
  1520  0790  2FD3               	goto	l1501
  1521  0791                     u1070:	
  1522  0791                     l1491:	
  1523                           
  1524                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1525  0791  302D               	movlw	45
  1526  0792  00A5               	movwf	??_sprintf
  1527  0793  082F               	movf	sprintf@sp,w
  1528  0794  0084               	movwf	4
  1529  0795  0825               	movf	??_sprintf,w
  1530  0796  1383               	bcf	3,7	;select IRP bank0
  1531  0797  0080               	movwf	0
  1532  0798                     l1493:	
  1533  0798  3001               	movlw	1
  1534  0799  00A5               	movwf	??_sprintf
  1535  079A  0825               	movf	??_sprintf,w
  1536  079B  07AF               	addwf	sprintf@sp,f
  1537  079C  2FD3               	goto	l1501
  1538  079D                     l1495:	
  1539                           
  1540                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1515:     c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1541  079D  300A               	movlw	10
  1542  079E  00F8               	movwf	___lwmod@divisor
  1543  079F  3000               	movlw	0
  1544  07A0  00F9               	movwf	___lwmod@divisor+1
  1545  07A1  0830               	movf	sprintf@prec,w
  1546  07A2  00A5               	movwf	??_sprintf
  1547  07A3  0725               	addwf	??_sprintf,w
  1548  07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1549  07A5  0084               	movwf	4
  1550  07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1551  07AB  00F0               	movwf	___lwdiv@divisor
  1552  07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1553  07B1  00F1               	movwf	___lwdiv@divisor+1
  1554  07B2  082E               	movf	sprintf@val+1,w
  1555  07B3  00F3               	movwf	___lwdiv@dividend+1
  1556  07B4  082D               	movf	sprintf@val,w
  1557  07B5  00F2               	movwf	___lwdiv@dividend
  1558  07B6  120A  118A  247C  120A  118A  	fcall	___lwdiv
  1559  07BB  0871               	movf	?___lwdiv+1,w
  1560  07BC  00FB               	movwf	___lwmod@dividend+1
  1561  07BD  0870               	movf	?___lwdiv,w
  1562  07BE  00FA               	movwf	___lwmod@dividend
  1563  07BF  120A  118A  2442  120A  118A  	fcall	___lwmod
  1564  07C4  0878               	movf	?___lwmod,w
  1565  07C5  3E30               	addlw	48
  1566  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1567  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1568  07C8  00A6               	movwf	??_sprintf+1
  1569  07C9  0826               	movf	??_sprintf+1,w
  1570  07CA  00B1               	movwf	sprintf@c
  1571  07CB                     l1497:	
  1572                           
  1573                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1549:    };D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1550:    ((*sp++ = (c)));
  1574  07CB  0831               	movf	sprintf@c,w
  1575  07CC  00A5               	movwf	??_sprintf
  1576  07CD  082F               	movf	sprintf@sp,w
  1577  07CE  0084               	movwf	4
  1578  07CF  0825               	movf	??_sprintf,w
  1579  07D0  1383               	bcf	3,7	;select IRP bank0
  1580  07D1  0080               	movwf	0
  1581  07D2  2F98               	goto	l1493
  1582  07D3                     l1501:	
  1583                           
  1584                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1585  07D3  30FF               	movlw	255
  1586  07D4  00A5               	movwf	??_sprintf
  1587  07D5  0825               	movf	??_sprintf,w
  1588  07D6  07B0               	addwf	sprintf@prec,f
  1589  07D7  0A30               	incf	sprintf@prec,w
  1590  07D8  1D03               	btfss	3,2
  1591  07D9  2FDB               	goto	u1081
  1592  07DA  2FDC               	goto	u1080
  1593  07DB                     u1081:	
  1594  07DB  2F9D               	goto	l1495
  1595  07DC                     u1080:	
  1596  07DC                     l1503:	
  1597                           
  1598                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1599  07DC  3001               	movlw	1
  1600  07DD  07A0               	addwf	sprintf@f,f
  1601  07DE  30FF               	movlw	-1
  1602  07DF  0720               	addwf	sprintf@f,w
  1603  07E0  0084               	movwf	4
  1604  07E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1605  07E6  00A5               	movwf	??_sprintf
  1606  07E7  0825               	movf	??_sprintf,w
  1607  07E8  00B1               	movwf	sprintf@c
  1608  07E9  0831               	movf	sprintf@c,w
  1609  07EA  1D03               	btfss	3,2
  1610  07EB  2FED               	goto	u1091
  1611  07EC  2FEE               	goto	u1090
  1612  07ED                     u1091:	
  1613  07ED  2E53               	goto	l1411
  1614  07EE                     u1090:	
  1615  07EE                     l1505:	
  1616                           
  1617                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1618  07EE  082F               	movf	sprintf@sp,w
  1619  07EF  0084               	movwf	4
  1620  07F0  1383               	bcf	3,7	;select IRP bank0
  1621  07F1  0180               	clrf	0
  1622  07F2                     l254:	
  1623  07F2  0008               	return
  1624  07F3                     __end_of_sprintf:	
  1625                           
  1626                           	psect	text2
  1627  02C4                     __ptext2:	
  1628 ;; *************** function _isdigit *****************
  1629 ;; Defined at:
  1630 ;;		line 8 in file "D:\Xc8\pic\sources\c90\common\isdigit.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  c               1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  c               1    1[COMMON] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;		None               void
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         2       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         2       0       0       0       0
  1648 ;;Total ram usage:        2 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_sprintf
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _isdigit
  1659  02C4                     _isdigit:	
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1663                           ;isdigit@c stored from wreg
  1664  02C4  00F1               	movwf	isdigit@c
  1665  02C5                     l1327:	
  1666  02C5  01F0               	clrf	_isdigit$665
  1667  02C6                     l1329:	
  1668  02C6  303A               	movlw	58
  1669  02C7  0271               	subwf	isdigit@c,w
  1670  02C8  1803               	skipnc
  1671  02C9  2ACB               	goto	u751
  1672  02CA  2ACC               	goto	u750
  1673  02CB                     u751:	
  1674  02CB  2AD4               	goto	l1335
  1675  02CC                     u750:	
  1676  02CC                     l1331:	
  1677  02CC  3030               	movlw	48
  1678  02CD  0271               	subwf	isdigit@c,w
  1679  02CE  1C03               	skipc
  1680  02CF  2AD1               	goto	u761
  1681  02D0  2AD2               	goto	u760
  1682  02D1                     u761:	
  1683  02D1  2AD4               	goto	l1335
  1684  02D2                     u760:	
  1685  02D2                     l1333:	
  1686  02D2  01F0               	clrf	_isdigit$665
  1687  02D3  0AF0               	incf	_isdigit$665,f
  1688  02D4                     l1335:	
  1689  02D4  0C70               	rrf	_isdigit$665,w
  1690  02D5                     l705:	
  1691  02D5  0008               	return
  1692  02D6                     __end_of_isdigit:	
  1693                           
  1694                           	psect	text3
  1695  0442                     __ptext3:	
  1696 ;; *************** function ___lwmod *****************
  1697 ;; Defined at:
  1698 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwmod.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  divisor         2    8[COMMON] unsigned int 
  1701 ;;  dividend        2   10[COMMON] unsigned int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  counter         1   13[COMMON] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    8[COMMON] unsigned int 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         4       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0
  1715 ;;      Temps:          1       0       0       0       0
  1716 ;;      Totals:         6       0       0       0       0
  1717 ;;Total ram usage:        6 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_sprintf
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function ___lwmod
  1728  0442                     ___lwmod:	
  1729  0442                     l1379:	
  1730                           ;incstack = 0
  1731                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1732                           
  1733  0442  0878               	movf	___lwmod@divisor,w
  1734  0443  0479               	iorwf	___lwmod@divisor+1,w
  1735  0444  1903               	btfsc	3,2
  1736  0445  2C47               	goto	u861
  1737  0446  2C48               	goto	u860
  1738  0447                     u861:	
  1739  0447  2C77               	goto	l1397
  1740  0448                     u860:	
  1741  0448                     l1381:	
  1742  0448  01FD               	clrf	___lwmod@counter
  1743  0449  0AFD               	incf	___lwmod@counter,f
  1744  044A  2C56               	goto	l1387
  1745  044B                     l1383:	
  1746  044B  3001               	movlw	1
  1747  044C                     u875:	
  1748  044C  1003               	clrc
  1749  044D  0DF8               	rlf	___lwmod@divisor,f
  1750  044E  0DF9               	rlf	___lwmod@divisor+1,f
  1751  044F  3EFF               	addlw	-1
  1752  0450  1D03               	skipz
  1753  0451  2C4C               	goto	u875
  1754  0452                     l1385:	
  1755  0452  3001               	movlw	1
  1756  0453  00FC               	movwf	??___lwmod
  1757  0454  087C               	movf	??___lwmod,w
  1758  0455  07FD               	addwf	___lwmod@counter,f
  1759  0456                     l1387:	
  1760  0456  1FF9               	btfss	___lwmod@divisor+1,7
  1761  0457  2C59               	goto	u881
  1762  0458  2C5A               	goto	u880
  1763  0459                     u881:	
  1764  0459  2C4B               	goto	l1383
  1765  045A                     u880:	
  1766  045A                     l1389:	
  1767  045A  0879               	movf	___lwmod@divisor+1,w
  1768  045B  027B               	subwf	___lwmod@dividend+1,w
  1769  045C  1D03               	skipz
  1770  045D  2C60               	goto	u895
  1771  045E  0878               	movf	___lwmod@divisor,w
  1772  045F  027A               	subwf	___lwmod@dividend,w
  1773  0460                     u895:	
  1774  0460  1C03               	skipc
  1775  0461  2C63               	goto	u891
  1776  0462  2C64               	goto	u890
  1777  0463                     u891:	
  1778  0463  2C6A               	goto	l1393
  1779  0464                     u890:	
  1780  0464                     l1391:	
  1781  0464  0878               	movf	___lwmod@divisor,w
  1782  0465  02FA               	subwf	___lwmod@dividend,f
  1783  0466  0879               	movf	___lwmod@divisor+1,w
  1784  0467  1C03               	skipc
  1785  0468  03FB               	decf	___lwmod@dividend+1,f
  1786  0469  02FB               	subwf	___lwmod@dividend+1,f
  1787  046A                     l1393:	
  1788  046A  3001               	movlw	1
  1789  046B                     u905:	
  1790  046B  1003               	clrc
  1791  046C  0CF9               	rrf	___lwmod@divisor+1,f
  1792  046D  0CF8               	rrf	___lwmod@divisor,f
  1793  046E  3EFF               	addlw	-1
  1794  046F  1D03               	skipz
  1795  0470  2C6B               	goto	u905
  1796  0471                     l1395:	
  1797  0471  3001               	movlw	1
  1798  0472  02FD               	subwf	___lwmod@counter,f
  1799  0473  1D03               	btfss	3,2
  1800  0474  2C76               	goto	u911
  1801  0475  2C77               	goto	u910
  1802  0476                     u911:	
  1803  0476  2C5A               	goto	l1389
  1804  0477                     u910:	
  1805  0477                     l1397:	
  1806  0477  087B               	movf	___lwmod@dividend+1,w
  1807  0478  00F9               	movwf	?___lwmod+1
  1808  0479  087A               	movf	___lwmod@dividend,w
  1809  047A  00F8               	movwf	?___lwmod
  1810  047B                     l540:	
  1811  047B  0008               	return
  1812  047C                     __end_of___lwmod:	
  1813                           
  1814                           	psect	text4
  1815  047C                     __ptext4:	
  1816 ;; *************** function ___lwdiv *****************
  1817 ;; Defined at:
  1818 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwdiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  divisor         2    0[COMMON] unsigned int 
  1821 ;;  dividend        2    2[COMMON] unsigned int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  quotient        2    5[COMMON] unsigned int 
  1824 ;;  counter         1    7[COMMON] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[COMMON] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         4       0       0       0       0
  1835 ;;      Locals:         3       0       0       0       0
  1836 ;;      Temps:          1       0       0       0       0
  1837 ;;      Totals:         8       0       0       0       0
  1838 ;;Total ram usage:        8 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_sprintf
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function ___lwdiv
  1849  047C                     ___lwdiv:	
  1850  047C                     l1353:	
  1851                           ;incstack = 0
  1852                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1853                           
  1854  047C  01F5               	clrf	___lwdiv@quotient
  1855  047D  01F6               	clrf	___lwdiv@quotient+1
  1856  047E                     l1355:	
  1857  047E  0870               	movf	___lwdiv@divisor,w
  1858  047F  0471               	iorwf	___lwdiv@divisor+1,w
  1859  0480  1903               	btfsc	3,2
  1860  0481  2C83               	goto	u791
  1861  0482  2C84               	goto	u790
  1862  0483                     u791:	
  1863  0483  2CBB               	goto	l1375
  1864  0484                     u790:	
  1865  0484                     l1357:	
  1866  0484  01F7               	clrf	___lwdiv@counter
  1867  0485  0AF7               	incf	___lwdiv@counter,f
  1868  0486  2C92               	goto	l1363
  1869  0487                     l1359:	
  1870  0487  3001               	movlw	1
  1871  0488                     u805:	
  1872  0488  1003               	clrc
  1873  0489  0DF0               	rlf	___lwdiv@divisor,f
  1874  048A  0DF1               	rlf	___lwdiv@divisor+1,f
  1875  048B  3EFF               	addlw	-1
  1876  048C  1D03               	skipz
  1877  048D  2C88               	goto	u805
  1878  048E                     l1361:	
  1879  048E  3001               	movlw	1
  1880  048F  00F4               	movwf	??___lwdiv
  1881  0490  0874               	movf	??___lwdiv,w
  1882  0491  07F7               	addwf	___lwdiv@counter,f
  1883  0492                     l1363:	
  1884  0492  1FF1               	btfss	___lwdiv@divisor+1,7
  1885  0493  2C95               	goto	u811
  1886  0494  2C96               	goto	u810
  1887  0495                     u811:	
  1888  0495  2C87               	goto	l1359
  1889  0496                     u810:	
  1890  0496                     l1365:	
  1891  0496  3001               	movlw	1
  1892  0497                     u825:	
  1893  0497  1003               	clrc
  1894  0498  0DF5               	rlf	___lwdiv@quotient,f
  1895  0499  0DF6               	rlf	___lwdiv@quotient+1,f
  1896  049A  3EFF               	addlw	-1
  1897  049B  1D03               	skipz
  1898  049C  2C97               	goto	u825
  1899  049D  0871               	movf	___lwdiv@divisor+1,w
  1900  049E  0273               	subwf	___lwdiv@dividend+1,w
  1901  049F  1D03               	skipz
  1902  04A0  2CA3               	goto	u835
  1903  04A1  0870               	movf	___lwdiv@divisor,w
  1904  04A2  0272               	subwf	___lwdiv@dividend,w
  1905  04A3                     u835:	
  1906  04A3  1C03               	skipc
  1907  04A4  2CA6               	goto	u831
  1908  04A5  2CA7               	goto	u830
  1909  04A6                     u831:	
  1910  04A6  2CAE               	goto	l1371
  1911  04A7                     u830:	
  1912  04A7                     l1367:	
  1913  04A7  0870               	movf	___lwdiv@divisor,w
  1914  04A8  02F2               	subwf	___lwdiv@dividend,f
  1915  04A9  0871               	movf	___lwdiv@divisor+1,w
  1916  04AA  1C03               	skipc
  1917  04AB  03F3               	decf	___lwdiv@dividend+1,f
  1918  04AC  02F3               	subwf	___lwdiv@dividend+1,f
  1919  04AD                     l1369:	
  1920  04AD  1475               	bsf	___lwdiv@quotient,0
  1921  04AE                     l1371:	
  1922  04AE  3001               	movlw	1
  1923  04AF                     u845:	
  1924  04AF  1003               	clrc
  1925  04B0  0CF1               	rrf	___lwdiv@divisor+1,f
  1926  04B1  0CF0               	rrf	___lwdiv@divisor,f
  1927  04B2  3EFF               	addlw	-1
  1928  04B3  1D03               	skipz
  1929  04B4  2CAF               	goto	u845
  1930  04B5                     l1373:	
  1931  04B5  3001               	movlw	1
  1932  04B6  02F7               	subwf	___lwdiv@counter,f
  1933  04B7  1D03               	btfss	3,2
  1934  04B8  2CBA               	goto	u851
  1935  04B9  2CBB               	goto	u850
  1936  04BA                     u851:	
  1937  04BA  2C96               	goto	l1365
  1938  04BB                     u850:	
  1939  04BB                     l1375:	
  1940  04BB  0876               	movf	___lwdiv@quotient+1,w
  1941  04BC  00F1               	movwf	?___lwdiv+1
  1942  04BD  0875               	movf	___lwdiv@quotient,w
  1943  04BE  00F0               	movwf	?___lwdiv
  1944  04BF                     l530:	
  1945  04BF  0008               	return
  1946  04C0                     __end_of___lwdiv:	
  1947                           
  1948                           	psect	text5
  1949  02D6                     __ptext5:	
  1950 ;; *************** function ___bmul *****************
  1951 ;; Defined at:
  1952 ;;		line 4 in file "D:\Xc8\pic\sources\c90\common\Umul8.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  multiplier      1    wreg     unsigned char 
  1955 ;;  multiplicand    1    0[COMMON] unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  multiplier      1    3[COMMON] unsigned char 
  1958 ;;  product         1    2[COMMON] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      unsigned char 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         1       0       0       0       0
  1969 ;;      Locals:         2       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0
  1971 ;;      Totals:         4       0       0       0       0
  1972 ;;Total ram usage:        4 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_sprintf
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function ___bmul
  1983  02D6                     ___bmul:	
  1984                           
  1985                           ;incstack = 0
  1986                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1987                           ;___bmul@multiplier stored from wreg
  1988  02D6  00F3               	movwf	___bmul@multiplier
  1989  02D7                     l1339:	
  1990  02D7  01F2               	clrf	___bmul@product
  1991  02D8                     l1341:	
  1992  02D8  1C73               	btfss	___bmul@multiplier,0
  1993  02D9  2ADB               	goto	u771
  1994  02DA  2ADC               	goto	u770
  1995  02DB                     u771:	
  1996  02DB  2AE0               	goto	l1345
  1997  02DC                     u770:	
  1998  02DC                     l1343:	
  1999  02DC  0870               	movf	___bmul@multiplicand,w
  2000  02DD  00F1               	movwf	??___bmul
  2001  02DE  0871               	movf	??___bmul,w
  2002  02DF  07F2               	addwf	___bmul@product,f
  2003  02E0                     l1345:	
  2004  02E0  1003               	clrc
  2005  02E1  0DF0               	rlf	___bmul@multiplicand,f
  2006  02E2                     l1347:	
  2007  02E2  1003               	clrc
  2008  02E3  0CF3               	rrf	___bmul@multiplier,f
  2009  02E4  0873               	movf	___bmul@multiplier,w
  2010  02E5  1D03               	btfss	3,2
  2011  02E6  2AE8               	goto	u781
  2012  02E7  2AE9               	goto	u780
  2013  02E8                     u781:	
  2014  02E8  2AD8               	goto	l1341
  2015  02E9                     u780:	
  2016  02E9                     l1349:	
  2017  02E9  0872               	movf	___bmul@product,w
  2018  02EA                     l284:	
  2019  02EA  0008               	return
  2020  02EB                     __end_of___bmul:	
  2021                           
  2022                           	psect	text6
  2023  0323                     __ptext6:	
  2024 ;; *************** function ___wmul *****************
  2025 ;; Defined at:
  2026 ;;		line 15 in file "D:\Xc8\pic\sources\c90\common\Umul16.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  multiplier      2    0[COMMON] unsigned int 
  2029 ;;  multiplicand    2    2[COMMON] unsigned int 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  product         2    4[COMMON] unsigned int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    0[COMMON] unsigned int 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         4       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0
  2044 ;;      Totals:         6       0       0       0       0
  2045 ;;Total ram usage:        6 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function ___wmul
  2056  0323                     ___wmul:	
  2057  0323                     l1549:	
  2058                           ;incstack = 0
  2059                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2060                           
  2061  0323  01F4               	clrf	___wmul@product
  2062  0324  01F5               	clrf	___wmul@product+1
  2063  0325                     l1551:	
  2064  0325  1C70               	btfss	___wmul@multiplier,0
  2065  0326  2B28               	goto	u1111
  2066  0327  2B29               	goto	u1110
  2067  0328                     u1111:	
  2068  0328  2B2F               	goto	l258
  2069  0329                     u1110:	
  2070  0329                     l1553:	
  2071  0329  0872               	movf	___wmul@multiplicand,w
  2072  032A  07F4               	addwf	___wmul@product,f
  2073  032B  1803               	skipnc
  2074  032C  0AF5               	incf	___wmul@product+1,f
  2075  032D  0873               	movf	___wmul@multiplicand+1,w
  2076  032E  07F5               	addwf	___wmul@product+1,f
  2077  032F                     l258:	
  2078  032F  3001               	movlw	1
  2079  0330                     u1125:	
  2080  0330  1003               	clrc
  2081  0331  0DF2               	rlf	___wmul@multiplicand,f
  2082  0332  0DF3               	rlf	___wmul@multiplicand+1,f
  2083  0333  3EFF               	addlw	-1
  2084  0334  1D03               	skipz
  2085  0335  2B30               	goto	u1125
  2086  0336                     l1555:	
  2087  0336  3001               	movlw	1
  2088  0337                     u1135:	
  2089  0337  1003               	clrc
  2090  0338  0CF1               	rrf	___wmul@multiplier+1,f
  2091  0339  0CF0               	rrf	___wmul@multiplier,f
  2092  033A  3EFF               	addlw	-1
  2093  033B  1D03               	skipz
  2094  033C  2B37               	goto	u1135
  2095  033D                     l1557:	
  2096  033D  0870               	movf	___wmul@multiplier,w
  2097  033E  0471               	iorwf	___wmul@multiplier+1,w
  2098  033F  1D03               	btfss	3,2
  2099  0340  2B42               	goto	u1141
  2100  0341  2B43               	goto	u1140
  2101  0342                     u1141:	
  2102  0342  2B25               	goto	l1551
  2103  0343                     u1140:	
  2104  0343                     l1559:	
  2105  0343  0875               	movf	___wmul@product+1,w
  2106  0344  00F1               	movwf	?___wmul+1
  2107  0345  0874               	movf	___wmul@product,w
  2108  0346  00F0               	movwf	?___wmul
  2109  0347                     l260:	
  2110  0347  0008               	return
  2111  0348                     __end_of___wmul:	
  2112                           
  2113                           	psect	text7
  2114  0526                     __ptext7:	
  2115 ;; *************** function ___awdiv *****************
  2116 ;; Defined at:
  2117 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\awdiv.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  divisor         2    6[COMMON] int 
  2120 ;;  dividend        2    8[COMMON] int 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  quotient        2    2[BANK0 ] int 
  2123 ;;  sign            1    1[BANK0 ] unsigned char 
  2124 ;;  counter         1    0[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  2    6[COMMON] int 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         4       0       0       0       0
  2135 ;;      Locals:         0       4       0       0       0
  2136 ;;      Temps:          1       0       0       0       0
  2137 ;;      Totals:         5       4       0       0       0
  2138 ;;Total ram usage:        9 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function ___awdiv
  2149  0526                     ___awdiv:	
  2150  0526                     l1563:	
  2151                           ;incstack = 0
  2152                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2153                           
  2154  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0528  01A1               	clrf	___awdiv@sign
  2157  0529                     l1565:	
  2158  0529  1FF7               	btfss	___awdiv@divisor+1,7
  2159  052A  2D2C               	goto	u1151
  2160  052B  2D2D               	goto	u1150
  2161  052C                     u1151:	
  2162  052C  2D34               	goto	l1571
  2163  052D                     u1150:	
  2164  052D                     l1567:	
  2165  052D  09F6               	comf	___awdiv@divisor,f
  2166  052E  09F7               	comf	___awdiv@divisor+1,f
  2167  052F  0AF6               	incf	___awdiv@divisor,f
  2168  0530  1903               	skipnz
  2169  0531  0AF7               	incf	___awdiv@divisor+1,f
  2170  0532                     l1569:	
  2171  0532  01A1               	clrf	___awdiv@sign
  2172  0533  0AA1               	incf	___awdiv@sign,f
  2173  0534                     l1571:	
  2174  0534  1FF9               	btfss	___awdiv@dividend+1,7
  2175  0535  2D37               	goto	u1161
  2176  0536  2D38               	goto	u1160
  2177  0537                     u1161:	
  2178  0537  2D41               	goto	l1577
  2179  0538                     u1160:	
  2180  0538                     l1573:	
  2181  0538  09F8               	comf	___awdiv@dividend,f
  2182  0539  09F9               	comf	___awdiv@dividend+1,f
  2183  053A  0AF8               	incf	___awdiv@dividend,f
  2184  053B  1903               	skipnz
  2185  053C  0AF9               	incf	___awdiv@dividend+1,f
  2186  053D                     l1575:	
  2187  053D  3001               	movlw	1
  2188  053E  00FA               	movwf	??___awdiv
  2189  053F  087A               	movf	??___awdiv,w
  2190  0540  06A1               	xorwf	___awdiv@sign,f
  2191  0541                     l1577:	
  2192  0541  01A2               	clrf	___awdiv@quotient
  2193  0542  01A3               	clrf	___awdiv@quotient+1
  2194  0543                     l1579:	
  2195  0543  0876               	movf	___awdiv@divisor,w
  2196  0544  0477               	iorwf	___awdiv@divisor+1,w
  2197  0545  1903               	btfsc	3,2
  2198  0546  2D48               	goto	u1171
  2199  0547  2D49               	goto	u1170
  2200  0548                     u1171:	
  2201  0548  2D80               	goto	l1599
  2202  0549                     u1170:	
  2203  0549                     l1581:	
  2204  0549  01A0               	clrf	___awdiv@counter
  2205  054A  0AA0               	incf	___awdiv@counter,f
  2206  054B  2D57               	goto	l1587
  2207  054C                     l1583:	
  2208  054C  3001               	movlw	1
  2209  054D                     u1185:	
  2210  054D  1003               	clrc
  2211  054E  0DF6               	rlf	___awdiv@divisor,f
  2212  054F  0DF7               	rlf	___awdiv@divisor+1,f
  2213  0550  3EFF               	addlw	-1
  2214  0551  1D03               	skipz
  2215  0552  2D4D               	goto	u1185
  2216  0553                     l1585:	
  2217  0553  3001               	movlw	1
  2218  0554  00FA               	movwf	??___awdiv
  2219  0555  087A               	movf	??___awdiv,w
  2220  0556  07A0               	addwf	___awdiv@counter,f
  2221  0557                     l1587:	
  2222  0557  1FF7               	btfss	___awdiv@divisor+1,7
  2223  0558  2D5A               	goto	u1191
  2224  0559  2D5B               	goto	u1190
  2225  055A                     u1191:	
  2226  055A  2D4C               	goto	l1583
  2227  055B                     u1190:	
  2228  055B                     l1589:	
  2229  055B  3001               	movlw	1
  2230  055C                     u1205:	
  2231  055C  1003               	clrc
  2232  055D  0DA2               	rlf	___awdiv@quotient,f
  2233  055E  0DA3               	rlf	___awdiv@quotient+1,f
  2234  055F  3EFF               	addlw	-1
  2235  0560  1D03               	skipz
  2236  0561  2D5C               	goto	u1205
  2237  0562  0877               	movf	___awdiv@divisor+1,w
  2238  0563  0279               	subwf	___awdiv@dividend+1,w
  2239  0564  1D03               	skipz
  2240  0565  2D68               	goto	u1215
  2241  0566  0876               	movf	___awdiv@divisor,w
  2242  0567  0278               	subwf	___awdiv@dividend,w
  2243  0568                     u1215:	
  2244  0568  1C03               	skipc
  2245  0569  2D6B               	goto	u1211
  2246  056A  2D6C               	goto	u1210
  2247  056B                     u1211:	
  2248  056B  2D73               	goto	l1595
  2249  056C                     u1210:	
  2250  056C                     l1591:	
  2251  056C  0876               	movf	___awdiv@divisor,w
  2252  056D  02F8               	subwf	___awdiv@dividend,f
  2253  056E  0877               	movf	___awdiv@divisor+1,w
  2254  056F  1C03               	skipc
  2255  0570  03F9               	decf	___awdiv@dividend+1,f
  2256  0571  02F9               	subwf	___awdiv@dividend+1,f
  2257  0572                     l1593:	
  2258  0572  1422               	bsf	___awdiv@quotient,0
  2259  0573                     l1595:	
  2260  0573  3001               	movlw	1
  2261  0574                     u1225:	
  2262  0574  1003               	clrc
  2263  0575  0CF7               	rrf	___awdiv@divisor+1,f
  2264  0576  0CF6               	rrf	___awdiv@divisor,f
  2265  0577  3EFF               	addlw	-1
  2266  0578  1D03               	skipz
  2267  0579  2D74               	goto	u1225
  2268  057A                     l1597:	
  2269  057A  3001               	movlw	1
  2270  057B  02A0               	subwf	___awdiv@counter,f
  2271  057C  1D03               	btfss	3,2
  2272  057D  2D7F               	goto	u1231
  2273  057E  2D80               	goto	u1230
  2274  057F                     u1231:	
  2275  057F  2D5B               	goto	l1589
  2276  0580                     u1230:	
  2277  0580                     l1599:	
  2278  0580  0821               	movf	___awdiv@sign,w
  2279  0581  1903               	btfsc	3,2
  2280  0582  2D84               	goto	u1241
  2281  0583  2D85               	goto	u1240
  2282  0584                     u1241:	
  2283  0584  2D8A               	goto	l1603
  2284  0585                     u1240:	
  2285  0585                     l1601:	
  2286  0585  09A2               	comf	___awdiv@quotient,f
  2287  0586  09A3               	comf	___awdiv@quotient+1,f
  2288  0587  0AA2               	incf	___awdiv@quotient,f
  2289  0588  1903               	skipnz
  2290  0589  0AA3               	incf	___awdiv@quotient+1,f
  2291  058A                     l1603:	
  2292  058A  0823               	movf	___awdiv@quotient+1,w
  2293  058B  00F7               	movwf	?___awdiv+1
  2294  058C  0822               	movf	___awdiv@quotient,w
  2295  058D  00F6               	movwf	?___awdiv
  2296  058E                     l411:	
  2297  058E  0008               	return
  2298  058F                     __end_of___awdiv:	
  2299                           
  2300                           	psect	text8
  2301  0348                     __ptext8:	
  2302 ;; *************** function _LCD_DataWrite *****************
  2303 ;; Defined at:
  2304 ;;		line 82 in file "LCD.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  dato            2    2[COMMON] PTR unsigned char 
  2307 ;;		 -> valor(16), STR_2(17), WriteInt_LCD@output1(3), 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         2       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0
  2322 ;;      Totals:         2       0       0       0       0
  2323 ;;Total ram usage:        2 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		_DWR_LCD
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;;		_WriteInt_LCD
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _LCD_DataWrite
  2336  0348                     _LCD_DataWrite:	
  2337  0348                     l1401:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _LCD_DataWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2340                           
  2341                           
  2342                           ;LCD.c: 82: void LCD_DataWrite(unsigned char *dato);LCD.c: 83: {;LCD.c: 84:     while(*d
      +                          ato != 0)
  2343  0348  2B5D               	goto	l1407
  2344  0349                     l1403:	
  2345                           
  2346                           ;LCD.c: 85:         DWR_LCD(*dato++);
  2347  0349  0873               	movf	LCD_DataWrite@dato+1,w
  2348  034A  00FF               	movwf	btemp+1
  2349  034B  0872               	movf	LCD_DataWrite@dato,w
  2350  034C  0084               	movwf	4
  2351  034D  120A  118A  2003  120A  118A  	fcall	stringtab
  2352  0352  120A  118A  23D3  120A  118A  	fcall	_DWR_LCD
  2353  0357                     l1405:	
  2354  0357  3001               	movlw	1
  2355  0358  07F2               	addwf	LCD_DataWrite@dato,f
  2356  0359  1803               	skipnc
  2357  035A  0AF3               	incf	LCD_DataWrite@dato+1,f
  2358  035B  3000               	movlw	0
  2359  035C  07F3               	addwf	LCD_DataWrite@dato+1,f
  2360  035D                     l1407:	
  2361                           
  2362                           ;LCD.c: 84:     while(*dato != 0)
  2363  035D  0873               	movf	LCD_DataWrite@dato+1,w
  2364  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2365  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0360  00FF               	movwf	btemp+1
  2367  0361  0872               	movf	LCD_DataWrite@dato,w
  2368  0362  0084               	movwf	4
  2369  0363  120A  118A  2003  120A  118A  	fcall	stringtab
  2370  0368  3A00               	xorlw	0
  2371  0369  1D03               	skipz
  2372  036A  2B6C               	goto	u921
  2373  036B  2B6D               	goto	u920
  2374  036C                     u921:	
  2375  036C  2B49               	goto	l1403
  2376  036D                     u920:	
  2377  036D                     l22:	
  2378  036D  0008               	return
  2379  036E                     __end_of_LCD_DataWrite:	
  2380                           
  2381                           	psect	text9
  2382  03D3                     __ptext9:	
  2383 ;; *************** function _DWR_LCD *****************
  2384 ;; Defined at:
  2385 ;;		line 59 in file "LCD.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  dat             1    wreg     unsigned char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  dat             1    1[COMMON] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         0       0       0       0       0
  2400 ;;      Locals:         1       0       0       0       0
  2401 ;;      Temps:          1       0       0       0       0
  2402 ;;      Totals:         2       0       0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_LCD_DataWrite
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _DWR_LCD
  2414  03D3                     _DWR_LCD:	
  2415                           
  2416                           ;incstack = 0
  2417                           ; Regs used in _DWR_LCD: [wreg+status,2+status,0]
  2418                           ;DWR_LCD@dat stored from wreg
  2419  03D3  00F1               	movwf	DWR_LCD@dat
  2420  03D4                     l1281:	
  2421                           
  2422                           ;LCD.c: 59: void DWR_LCD(unsigned char dat);LCD.c: 60: {;LCD.c: 61:     PORTB = 0xFF;
  2423  03D4  30FF               	movlw	255
  2424  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2425  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2426  03D7  0086               	movwf	6	;volatile
  2427  03D8                     l1283:	
  2428                           
  2429                           ;LCD.c: 62:     PORTB &= 0x80;
  2430  03D8  3080               	movlw	128
  2431  03D9  00F0               	movwf	??_DWR_LCD
  2432  03DA  0870               	movf	??_DWR_LCD,w
  2433  03DB  0586               	andwf	6,f	;volatile
  2434  03DC                     l1285:	
  2435                           
  2436                           ;LCD.c: 63:     PORTDbits.RD5 = 0;
  2437  03DC  1288               	bcf	8,5	;volatile
  2438  03DD                     l1287:	
  2439                           
  2440                           ;LCD.c: 64:     PORTDbits.RD6 = 1;
  2441  03DD  1708               	bsf	8,6	;volatile
  2442  03DE                     l1289:	
  2443                           
  2444                           ;LCD.c: 65:     PORTDbits.RD7 = 0;
  2445  03DE  1388               	bcf	8,7	;volatile
  2446  03DF                     l1291:	
  2447                           
  2448                           ;LCD.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2449  03DF  30C7               	movlw	199
  2450  03E0  00F0               	movwf	??_DWR_LCD
  2451  03E1                     u1277:	
  2452  03E1  2BE2               	nop2
  2453  03E2  0BF0               	decfsz	??_DWR_LCD,f
  2454  03E3  2BE1               	goto	u1277
  2455  03E4  2BE5               	nop2
  2456  03E5  2BE6               	nop2
  2457  03E6                     l1293:	
  2458                           
  2459                           ;LCD.c: 67:     PORTDbits.RD7 = 1;
  2460  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03E8  1788               	bsf	8,7	;volatile
  2463                           
  2464                           ;LCD.c: 68:     if(PORTB == 0x80)
  2465  03E9  3080               	movlw	128
  2466  03EA  0606               	xorwf	6,w	;volatile
  2467  03EB  1D03               	btfss	3,2
  2468  03EC  2BEE               	goto	u711
  2469  03ED  2BEF               	goto	u710
  2470  03EE                     u711:	
  2471  03EE  2BFA               	goto	l15
  2472  03EF                     u710:	
  2473  03EF                     l1295:	
  2474                           
  2475                           ;LCD.c: 69:     {;LCD.c: 70:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  2476  03EF  1388               	bcf	8,7	;volatile
  2477  03F0                     l1297:	
  2478  03F0  30C7               	movlw	199
  2479  03F1  00F0               	movwf	??_DWR_LCD
  2480  03F2                     u1287:	
  2481  03F2  2BF3               	nop2
  2482  03F3  0BF0               	decfsz	??_DWR_LCD,f
  2483  03F4  2BF2               	goto	u1287
  2484  03F5  2BF6               	nop2
  2485  03F6  2BF7               	nop2
  2486  03F7                     l1299:	
  2487  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2489  03F9  1788               	bsf	8,7	;volatile
  2490  03FA                     l15:	
  2491                           ;LCD.c: 71:     }
  2492                           
  2493                           
  2494                           ;LCD.c: 73:     PORTB = dat;
  2495  03FA  0871               	movf	DWR_LCD@dat,w
  2496  03FB  0086               	movwf	6	;volatile
  2497  03FC                     l1301:	
  2498                           
  2499                           ;LCD.c: 74:     PORTDbits.RD5 = 1;
  2500  03FC  1688               	bsf	8,5	;volatile
  2501  03FD                     l1303:	
  2502                           
  2503                           ;LCD.c: 75:     PORTDbits.RD6 = 0;
  2504  03FD  1308               	bcf	8,6	;volatile
  2505  03FE                     l1305:	
  2506                           
  2507                           ;LCD.c: 77:     PORTDbits.RD7 = 1;
  2508  03FE  1788               	bsf	8,7	;volatile
  2509                           
  2510                           ;LCD.c: 78:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2511  03FF  30C7               	movlw	199
  2512  0400  00F0               	movwf	??_DWR_LCD
  2513  0401                     u1297:	
  2514  0401  2C02               	nop2
  2515  0402  0BF0               	decfsz	??_DWR_LCD,f
  2516  0403  2C01               	goto	u1297
  2517  0404  2C05               	nop2
  2518  0405  2C06               	nop2
  2519  0406                     l1307:	
  2520                           
  2521                           ;LCD.c: 79:     PORTDbits.RD7 = 0;
  2522  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0408  1388               	bcf	8,7	;volatile
  2525  0409                     l16:	
  2526  0409  0008               	return
  2527  040A                     __end_of_DWR_LCD:	
  2528                           
  2529                           	psect	text10
  2530  02AD                     __ptext10:	
  2531 ;; *************** function _I2C_Master_Write *****************
  2532 ;; Defined at:
  2533 ;;		line 62 in file "I2C.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  d               2    0[COMMON] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2547 ;;      Params:         2       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0
  2550 ;;      Totals:         2       0       0       0       0
  2551 ;;Total ram usage:        2 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    1
  2554 ;; This function calls:
  2555 ;;		_I2C_Master_Wait
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _I2C_Master_Write
  2563  02AD                     _I2C_Master_Write:	
  2564  02AD                     l1523:	
  2565                           ;incstack = 0
  2566                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2567                           
  2568                           
  2569                           ;I2C.c: 62: void I2C_Master_Write(unsigned d);I2C.c: 63: {;I2C.c: 64:     I2C_Master_Wai
      +                          t();
  2570  02AD  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2571  02B2                     l1525:	
  2572                           
  2573                           ;I2C.c: 65:     SSPBUF = d;
  2574  02B2  0870               	movf	I2C_Master_Write@d,w
  2575  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2576  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2577  02B5  0093               	movwf	19	;volatile
  2578  02B6                     l75:	
  2579  02B6  0008               	return
  2580  02B7                     __end_of_I2C_Master_Write:	
  2581                           
  2582                           	psect	text11
  2583  02A4                     __ptext11:	
  2584 ;; *************** function _I2C_Master_Stop *****************
  2585 ;; Defined at:
  2586 ;;		line 52 in file "I2C.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    1
  2607 ;; This function calls:
  2608 ;;		_I2C_Master_Wait
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _I2C_Master_Stop
  2616  02A4                     _I2C_Master_Stop:	
  2617  02A4                     l1519:	
  2618                           ;incstack = 0
  2619                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2620                           
  2621                           
  2622                           ;I2C.c: 54:     I2C_Master_Wait();
  2623  02A4  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2624  02A9                     l1521:	
  2625                           
  2626                           ;I2C.c: 55:     SSPCON2bits.PEN = 1;
  2627  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2628  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2629  02AB  1511               	bsf	17,2	;volatile
  2630  02AC                     l72:	
  2631  02AC  0008               	return
  2632  02AD                     __end_of_I2C_Master_Stop:	
  2633                           
  2634                           	psect	text12
  2635  029B                     __ptext12:	
  2636 ;; *************** function _I2C_Master_Start *****************
  2637 ;; Defined at:
  2638 ;;		line 36 in file "I2C.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		_I2C_Master_Wait
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _I2C_Master_Start
  2668  029B                     _I2C_Master_Start:	
  2669  029B                     l1515:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2672                           
  2673                           
  2674                           ;I2C.c: 38:     I2C_Master_Wait();
  2675  029B  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2676  02A0                     l1517:	
  2677                           
  2678                           ;I2C.c: 39:     SSPCON2bits.SEN = 1;
  2679  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2680  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2681  02A2  1411               	bsf	17,0	;volatile
  2682  02A3                     l66:	
  2683  02A3  0008               	return
  2684  02A4                     __end_of_I2C_Master_Start:	
  2685                           
  2686                           	psect	text13
  2687  036E                     __ptext13:	
  2688 ;; *************** function _I2C_Master_Read *****************
  2689 ;; Defined at:
  2690 ;;		line 71 in file "I2C.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  a               2    0[COMMON] unsigned short 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  temp            2    4[COMMON] unsigned short 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMMON] unsigned short 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         2       0       0       0       0
  2705 ;;      Locals:         2       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0
  2707 ;;      Totals:         6       0       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    1
  2711 ;; This function calls:
  2712 ;;		_I2C_Master_Wait
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _I2C_Master_Read
  2720  036E                     _I2C_Master_Read:	
  2721  036E                     l1527:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2724                           
  2725                           
  2726                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:    
      +                           unsigned short temp;;I2C.c: 74:     I2C_Master_Wait();
  2727  036E  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2728  0373                     l1529:	
  2729                           
  2730                           ;I2C.c: 75:     SSPCON2bits.RCEN = 1;
  2731  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0375  1591               	bsf	17,3	;volatile
  2734                           
  2735                           ;I2C.c: 76:     I2C_Master_Wait();
  2736  0376  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2737  037B                     l1531:	
  2738                           
  2739                           ;I2C.c: 77:     temp = SSPBUF;
  2740  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2741  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2742  037D  0813               	movf	19,w	;volatile
  2743  037E  00F2               	movwf	??_I2C_Master_Read
  2744  037F  01F3               	clrf	??_I2C_Master_Read+1
  2745  0380  0872               	movf	??_I2C_Master_Read,w
  2746  0381  00F4               	movwf	I2C_Master_Read@temp
  2747  0382  0873               	movf	??_I2C_Master_Read+1,w
  2748  0383  00F5               	movwf	I2C_Master_Read@temp+1
  2749  0384                     l1533:	
  2750                           
  2751                           ;I2C.c: 78:     I2C_Master_Wait();
  2752  0384  120A  118A  22B7  120A  118A  	fcall	_I2C_Master_Wait
  2753  0389                     l1535:	
  2754                           
  2755                           ;I2C.c: 79:     if(a == 1){
  2756  0389  0370               	decf	I2C_Master_Read@a,w
  2757  038A  0471               	iorwf	I2C_Master_Read@a+1,w
  2758  038B  1D03               	btfss	3,2
  2759  038C  2B8E               	goto	u1101
  2760  038D  2B8F               	goto	u1100
  2761  038E                     u1101:	
  2762  038E  2B93               	goto	l78
  2763  038F                     u1100:	
  2764  038F                     l1537:	
  2765                           
  2766                           ;I2C.c: 80:         SSPCON2bits.ACKDT = 0;
  2767  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0391  1291               	bcf	17,5	;volatile
  2770                           
  2771                           ;I2C.c: 81:     }else{
  2772  0392  2B96               	goto	l79
  2773  0393                     l78:	
  2774                           
  2775                           ;I2C.c: 82:         SSPCON2bits.ACKDT = 1;
  2776  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2777  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2778  0395  1691               	bsf	17,5	;volatile
  2779  0396                     l79:	
  2780                           ;I2C.c: 83:     }
  2781                           
  2782                           
  2783                           ;I2C.c: 84:     SSPCON2bits.ACKEN = 1;
  2784  0396  1611               	bsf	17,4	;volatile
  2785  0397                     l1539:	
  2786                           
  2787                           ;I2C.c: 85:     return temp;
  2788  0397  0875               	movf	I2C_Master_Read@temp+1,w
  2789  0398  00F1               	movwf	?_I2C_Master_Read+1
  2790  0399  0874               	movf	I2C_Master_Read@temp,w
  2791  039A  00F0               	movwf	?_I2C_Master_Read
  2792  039B                     l80:	
  2793  039B  0008               	return
  2794  039C                     __end_of_I2C_Master_Read:	
  2795                           
  2796                           	psect	text14
  2797  02B7                     __ptext14:	
  2798 ;; *************** function _I2C_Master_Wait *****************
  2799 ;; Defined at:
  2800 ;;		line 29 in file "I2C.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_I2C_Master_Start
  2824 ;;		_I2C_Master_Stop
  2825 ;;		_I2C_Master_Write
  2826 ;;		_I2C_Master_Read
  2827 ;;		_I2C_Master_RepeatedStart
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _I2C_Master_Wait
  2833  02B7                     _I2C_Master_Wait:	
  2834  02B7                     l1323:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2837                           
  2838  02B7                     l60:	
  2839                           ;I2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2840                           
  2841  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2842  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2843  02B9  1914               	btfsc	20,2	;volatile
  2844  02BA  2ABC               	goto	u731
  2845  02BB  2ABD               	goto	u730
  2846  02BC                     u731:	
  2847  02BC  2AB7               	goto	l60
  2848  02BD                     u730:	
  2849  02BD                     l1325:	
  2850  02BD  0811               	movf	17,w	;volatile
  2851  02BE  391F               	andlw	31
  2852  02BF  1D03               	btfss	3,2
  2853  02C0  2AC2               	goto	u741
  2854  02C1  2AC3               	goto	u740
  2855  02C2                     u741:	
  2856  02C2  2AB7               	goto	l60
  2857  02C3                     u740:	
  2858  02C3                     l63:	
  2859  02C3  0008               	return
  2860  02C4                     __end_of_I2C_Master_Wait:	
  2861                           
  2862                           	psect	text15
  2863  02EB                     __ptext15:	
  2864 ;; *************** function _Configuracion *****************
  2865 ;; Defined at:
  2866 ;;		line 63 in file "I2C_Master.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    2
  2887 ;; This function calls:
  2888 ;;		_I2C_Master_Init
  2889 ;;		_init_LCD
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _Configuracion
  2897  02EB                     _Configuracion:	
  2898  02EB                     l1543:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _Configuracion: [wreg+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;I2C_Master.c: 64:     TRISB = 0;
  2904  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2905  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2906  02ED  0186               	clrf	6	;volatile
  2907                           
  2908                           ;I2C_Master.c: 65:     TRISD = 0;
  2909  02EE  0188               	clrf	8	;volatile
  2910  02EF                     l1545:	
  2911                           
  2912                           ;I2C_Master.c: 66:     I2C_Master_Init(100000);
  2913  02EF  3000               	movlw	0
  2914  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2915  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2916  02F2  00A3               	movwf	I2C_Master_Init@c+3
  2917  02F3  3001               	movlw	1
  2918  02F4  00A2               	movwf	I2C_Master_Init@c+2
  2919  02F5  3086               	movlw	134
  2920  02F6  00A1               	movwf	I2C_Master_Init@c+1
  2921  02F7  30A0               	movlw	160
  2922  02F8  00A0               	movwf	I2C_Master_Init@c
  2923  02F9  120A  118A  240A  120A  118A  	fcall	_I2C_Master_Init
  2924  02FE                     l1547:	
  2925                           
  2926                           ;I2C_Master.c: 67:     init_LCD();
  2927  02FE  120A  118A  2304  120A  118A  	fcall	_init_LCD
  2928  0303                     l128:	
  2929  0303  0008               	return
  2930  0304                     __end_of_Configuracion:	
  2931                           
  2932                           	psect	text16
  2933  0304                     __ptext16:	
  2934 ;; *************** function _init_LCD *****************
  2935 ;; Defined at:
  2936 ;;		line 95 in file "LCD.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    1
  2957 ;; This function calls:
  2958 ;;		_LCD_CmdWrite
  2959 ;; This function is called by:
  2960 ;;		_Configuracion
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _init_LCD
  2966  0304                     _init_LCD:	
  2967  0304                     l1309:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2970                           
  2971                           
  2972                           ;LCD.c: 97:     LCD_CmdWrite(0x38);
  2973  0304  3038               	movlw	56
  2974  0305  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
  2975                           
  2976                           ;LCD.c: 98:     LCD_CmdWrite(0x0E);
  2977  030A  300E               	movlw	14
  2978  030B  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
  2979                           
  2980                           ;LCD.c: 99:     LCD_CmdWrite(0x01);
  2981  0310  3001               	movlw	1
  2982  0311  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
  2983                           
  2984                           ;LCD.c: 100:     LCD_CmdWrite(0x06);
  2985  0316  3006               	movlw	6
  2986  0317  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
  2987                           
  2988                           ;LCD.c: 101:     LCD_CmdWrite(0x80);
  2989  031C  3080               	movlw	128
  2990  031D  120A  118A  239C  120A  118A  	fcall	_LCD_CmdWrite
  2991  0322                     l28:	
  2992  0322  0008               	return
  2993  0323                     __end_of_init_LCD:	
  2994                           
  2995                           	psect	text17
  2996  039C                     __ptext17:	
  2997 ;; *************** function _LCD_CmdWrite *****************
  2998 ;; Defined at:
  2999 ;;		line 36 in file "LCD.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  cmd             1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  cmd             1    1[COMMON] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       0       0       0
  3014 ;;      Locals:         1       0       0       0       0
  3015 ;;      Temps:          1       0       0       0       0
  3016 ;;      Totals:         2       0       0       0       0
  3017 ;;Total ram usage:        2 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_init_LCD
  3023 ;;		_main
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _LCD_CmdWrite
  3029  039C                     _LCD_CmdWrite:	
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0]
  3033                           ;LCD_CmdWrite@cmd stored from wreg
  3034  039C  00F1               	movwf	LCD_CmdWrite@cmd
  3035  039D                     l1229:	
  3036                           
  3037                           ;LCD.c: 36: void LCD_CmdWrite(unsigned char cmd);LCD.c: 37: {;LCD.c: 38:     PORTB = 0xF
      +                          F;
  3038  039D  30FF               	movlw	255
  3039  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3040  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3041  03A0  0086               	movwf	6	;volatile
  3042  03A1                     l1231:	
  3043                           
  3044                           ;LCD.c: 39:     PORTB &= 0x80;
  3045  03A1  3080               	movlw	128
  3046  03A2  00F0               	movwf	??_LCD_CmdWrite
  3047  03A3  0870               	movf	??_LCD_CmdWrite,w
  3048  03A4  0586               	andwf	6,f	;volatile
  3049  03A5                     l1233:	
  3050                           
  3051                           ;LCD.c: 40:     PORTDbits.RD5 = 0;
  3052  03A5  1288               	bcf	8,5	;volatile
  3053  03A6                     l1235:	
  3054                           
  3055                           ;LCD.c: 41:     PORTDbits.RD6 = 1;
  3056  03A6  1708               	bsf	8,6	;volatile
  3057  03A7                     l1237:	
  3058                           
  3059                           ;LCD.c: 42:     PORTDbits.RD7 = 0;
  3060  03A7  1388               	bcf	8,7	;volatile
  3061  03A8                     l1239:	
  3062                           
  3063                           ;LCD.c: 43:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3064  03A8  30C7               	movlw	199
  3065  03A9  00F0               	movwf	??_LCD_CmdWrite
  3066  03AA                     u1307:	
  3067  03AA  2BAB               	nop2
  3068  03AB  0BF0               	decfsz	??_LCD_CmdWrite,f
  3069  03AC  2BAA               	goto	u1307
  3070  03AD  2BAE               	nop2
  3071  03AE  2BAF               	nop2
  3072  03AF                     l1241:	
  3073                           
  3074                           ;LCD.c: 44:     PORTDbits.RD7 = 1;
  3075  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3076  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3077  03B1  1788               	bsf	8,7	;volatile
  3078                           
  3079                           ;LCD.c: 45:     if(PORTB == 0x80)
  3080  03B2  3080               	movlw	128
  3081  03B3  0606               	xorwf	6,w	;volatile
  3082  03B4  1D03               	btfss	3,2
  3083  03B5  2BB7               	goto	u631
  3084  03B6  2BB8               	goto	u630
  3085  03B7                     u631:	
  3086  03B7  2BC3               	goto	l11
  3087  03B8                     u630:	
  3088  03B8                     l1243:	
  3089                           
  3090                           ;LCD.c: 46:     {;LCD.c: 47:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  3091  03B8  1388               	bcf	8,7	;volatile
  3092  03B9                     l1245:	
  3093  03B9  30C7               	movlw	199
  3094  03BA  00F0               	movwf	??_LCD_CmdWrite
  3095  03BB                     u1317:	
  3096  03BB  2BBC               	nop2
  3097  03BC  0BF0               	decfsz	??_LCD_CmdWrite,f
  3098  03BD  2BBB               	goto	u1317
  3099  03BE  2BBF               	nop2
  3100  03BF  2BC0               	nop2
  3101  03C0                     l1247:	
  3102  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3103  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3104  03C2  1788               	bsf	8,7	;volatile
  3105  03C3                     l11:	
  3106                           ;LCD.c: 48:     }
  3107                           
  3108                           
  3109                           ;LCD.c: 50:     PORTB = cmd;
  3110  03C3  0871               	movf	LCD_CmdWrite@cmd,w
  3111  03C4  0086               	movwf	6	;volatile
  3112  03C5                     l1249:	
  3113                           
  3114                           ;LCD.c: 51:     PORTDbits.RD5 = 0;
  3115  03C5  1288               	bcf	8,5	;volatile
  3116  03C6                     l1251:	
  3117                           
  3118                           ;LCD.c: 52:     PORTDbits.RD6 = 0;
  3119  03C6  1308               	bcf	8,6	;volatile
  3120  03C7                     l1253:	
  3121                           
  3122                           ;LCD.c: 54:     PORTDbits.RD7 = 1;
  3123  03C7  1788               	bsf	8,7	;volatile
  3124                           
  3125                           ;LCD.c: 55:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3126  03C8  30C7               	movlw	199
  3127  03C9  00F0               	movwf	??_LCD_CmdWrite
  3128  03CA                     u1327:	
  3129  03CA  2BCB               	nop2
  3130  03CB  0BF0               	decfsz	??_LCD_CmdWrite,f
  3131  03CC  2BCA               	goto	u1327
  3132  03CD  2BCE               	nop2
  3133  03CE  2BCF               	nop2
  3134  03CF                     l1255:	
  3135                           
  3136                           ;LCD.c: 56:     PORTDbits.RD7 = 0;
  3137  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3138  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3139  03D1  1388               	bcf	8,7	;volatile
  3140  03D2                     l12:	
  3141  03D2  0008               	return
  3142  03D3                     __end_of_LCD_CmdWrite:	
  3143                           
  3144                           	psect	text18
  3145  040A                     __ptext18:	
  3146 ;; *************** function _I2C_Master_Init *****************
  3147 ;; Defined at:
  3148 ;;		line 13 in file "I2C.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  c               4    0[BANK0 ] const unsigned long 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       4       0       0       0
  3163 ;;      Locals:         0       0       0       0       0
  3164 ;;      Temps:          0       4       0       0       0
  3165 ;;      Totals:         0       8       0       0       0
  3166 ;;Total ram usage:        8 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    1
  3169 ;; This function calls:
  3170 ;;		___lldiv
  3171 ;; This function is called by:
  3172 ;;		_Configuracion
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function _I2C_Master_Init
  3178  040A                     _I2C_Master_Init:	
  3179  040A                     l1311:	
  3180                           ;incstack = 0
  3181                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3182                           
  3183                           
  3184                           ;I2C.c: 13: void I2C_Master_Init(const unsigned long c);I2C.c: 14: {;I2C.c: 15:     SSPC
      +                          ON = 0b00101000;
  3185  040A  3028               	movlw	40
  3186  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3187  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3188  040D  0094               	movwf	20	;volatile
  3189  040E                     l1313:	
  3190                           
  3191                           ;I2C.c: 16:     SSPCON2 = 0;
  3192  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3193  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0410  0191               	clrf	17	;volatile
  3195  0411                     l1315:	
  3196                           
  3197                           ;I2C.c: 17:     SSPADD = (4000000/(4*c))-1;
  3198  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0413  0820               	movf	I2C_Master_Init@c,w
  3201  0414  00A4               	movwf	??_I2C_Master_Init
  3202  0415  0821               	movf	I2C_Master_Init@c+1,w
  3203  0416  00A5               	movwf	??_I2C_Master_Init+1
  3204  0417  0822               	movf	I2C_Master_Init@c+2,w
  3205  0418  00A6               	movwf	??_I2C_Master_Init+2
  3206  0419  0823               	movf	I2C_Master_Init@c+3,w
  3207  041A  00A7               	movwf	??_I2C_Master_Init+3
  3208  041B  3002               	movlw	2
  3209  041C                     u725:	
  3210  041C  1003               	clrc
  3211  041D  0DA4               	rlf	??_I2C_Master_Init,f
  3212  041E  0DA5               	rlf	??_I2C_Master_Init+1,f
  3213  041F  0DA6               	rlf	??_I2C_Master_Init+2,f
  3214  0420  0DA7               	rlf	??_I2C_Master_Init+3,f
  3215  0421                     u720:	
  3216  0421  3EFF               	addlw	-1
  3217  0422  1D03               	skipz
  3218  0423  2C1C               	goto	u725
  3219  0424  0827               	movf	??_I2C_Master_Init+3,w
  3220  0425  00F3               	movwf	___lldiv@divisor+3
  3221  0426  0826               	movf	??_I2C_Master_Init+2,w
  3222  0427  00F2               	movwf	___lldiv@divisor+2
  3223  0428  0825               	movf	??_I2C_Master_Init+1,w
  3224  0429  00F1               	movwf	___lldiv@divisor+1
  3225  042A  0824               	movf	??_I2C_Master_Init,w
  3226  042B  00F0               	movwf	___lldiv@divisor
  3227  042C  3000               	movlw	0
  3228  042D  00F7               	movwf	___lldiv@dividend+3
  3229  042E  303D               	movlw	61
  3230  042F  00F6               	movwf	___lldiv@dividend+2
  3231  0430  3009               	movlw	9
  3232  0431  00F5               	movwf	___lldiv@dividend+1
  3233  0432  3000               	movlw	0
  3234  0433  00F4               	movwf	___lldiv@dividend
  3235  0434  120A  118A  24C0  120A  118A  	fcall	___lldiv
  3236  0439  0870               	movf	?___lldiv,w
  3237  043A  3EFF               	addlw	255
  3238  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3239  043C  1303               	bcf	3,6	;RP1=0, select bank1
  3240  043D  0093               	movwf	19	;volatile
  3241  043E                     l1317:	
  3242                           
  3243                           ;I2C.c: 18:     SSPSTAT = 0;
  3244  043E  0194               	clrf	20	;volatile
  3245  043F                     l1319:	
  3246                           
  3247                           ;I2C.c: 19:     TRISCbits.TRISC3 = 1;
  3248  043F  1587               	bsf	7,3	;volatile
  3249  0440                     l1321:	
  3250                           
  3251                           ;I2C.c: 20:     TRISCbits.TRISC4 = 1;
  3252  0440  1607               	bsf	7,4	;volatile
  3253  0441                     l57:	
  3254  0441  0008               	return
  3255  0442                     __end_of_I2C_Master_Init:	
  3256                           
  3257                           	psect	text19
  3258  04C0                     __ptext19:	
  3259 ;; *************** function ___lldiv *****************
  3260 ;; Defined at:
  3261 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\__lldiv.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  divisor         4    0[COMMON] unsigned long 
  3264 ;;  dividend        4    4[COMMON] unsigned long 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  quotient        4    9[COMMON] unsigned long 
  3267 ;;  counter         1   13[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  4    0[COMMON] unsigned long 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         8       0       0       0       0
  3278 ;;      Locals:         5       0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0
  3280 ;;      Totals:        14       0       0       0       0
  3281 ;;Total ram usage:       14 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_I2C_Master_Init
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function ___lldiv
  3292  04C0                     ___lldiv:	
  3293  04C0                     l1257:	
  3294                           ;incstack = 0
  3295                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3296                           
  3297  04C0  3000               	movlw	0
  3298  04C1  00FC               	movwf	___lldiv@quotient+3
  3299  04C2  3000               	movlw	0
  3300  04C3  00FB               	movwf	___lldiv@quotient+2
  3301  04C4  3000               	movlw	0
  3302  04C5  00FA               	movwf	___lldiv@quotient+1
  3303  04C6  3000               	movlw	0
  3304  04C7  00F9               	movwf	___lldiv@quotient
  3305  04C8  0873               	movf	___lldiv@divisor+3,w
  3306  04C9  0472               	iorwf	___lldiv@divisor+2,w
  3307  04CA  0471               	iorwf	___lldiv@divisor+1,w
  3308  04CB  0470               	iorwf	___lldiv@divisor,w
  3309  04CC  1903               	skipnz
  3310  04CD  2CCF               	goto	u641
  3311  04CE  2CD0               	goto	u640
  3312  04CF                     u641:	
  3313  04CF  2D1D               	goto	l1277
  3314  04D0                     u640:	
  3315  04D0                     l1259:	
  3316  04D0  01FD               	clrf	___lldiv@counter
  3317  04D1  0AFD               	incf	___lldiv@counter,f
  3318  04D2  2CE0               	goto	l1263
  3319  04D3                     l1261:	
  3320  04D3  3001               	movlw	1
  3321  04D4  00F8               	movwf	??___lldiv
  3322  04D5                     u655:	
  3323  04D5  1003               	clrc
  3324  04D6  0DF0               	rlf	___lldiv@divisor,f
  3325  04D7  0DF1               	rlf	___lldiv@divisor+1,f
  3326  04D8  0DF2               	rlf	___lldiv@divisor+2,f
  3327  04D9  0DF3               	rlf	___lldiv@divisor+3,f
  3328  04DA  0BF8               	decfsz	??___lldiv,f
  3329  04DB  2CD5               	goto	u655
  3330  04DC  3001               	movlw	1
  3331  04DD  00F8               	movwf	??___lldiv
  3332  04DE  0878               	movf	??___lldiv,w
  3333  04DF  07FD               	addwf	___lldiv@counter,f
  3334  04E0                     l1263:	
  3335  04E0  1FF3               	btfss	___lldiv@divisor+3,7
  3336  04E1  2CE3               	goto	u661
  3337  04E2  2CE4               	goto	u660
  3338  04E3                     u661:	
  3339  04E3  2CD3               	goto	l1261
  3340  04E4                     u660:	
  3341  04E4                     l1265:	
  3342  04E4  3001               	movlw	1
  3343  04E5  00F8               	movwf	??___lldiv
  3344  04E6                     u675:	
  3345  04E6  1003               	clrc
  3346  04E7  0DF9               	rlf	___lldiv@quotient,f
  3347  04E8  0DFA               	rlf	___lldiv@quotient+1,f
  3348  04E9  0DFB               	rlf	___lldiv@quotient+2,f
  3349  04EA  0DFC               	rlf	___lldiv@quotient+3,f
  3350  04EB  0BF8               	decfsz	??___lldiv,f
  3351  04EC  2CE6               	goto	u675
  3352  04ED                     l1267:	
  3353  04ED  0873               	movf	___lldiv@divisor+3,w
  3354  04EE  0277               	subwf	___lldiv@dividend+3,w
  3355  04EF  1D03               	skipz
  3356  04F0  2CFB               	goto	u685
  3357  04F1  0872               	movf	___lldiv@divisor+2,w
  3358  04F2  0276               	subwf	___lldiv@dividend+2,w
  3359  04F3  1D03               	skipz
  3360  04F4  2CFB               	goto	u685
  3361  04F5  0871               	movf	___lldiv@divisor+1,w
  3362  04F6  0275               	subwf	___lldiv@dividend+1,w
  3363  04F7  1D03               	skipz
  3364  04F8  2CFB               	goto	u685
  3365  04F9  0870               	movf	___lldiv@divisor,w
  3366  04FA  0274               	subwf	___lldiv@dividend,w
  3367  04FB                     u685:	
  3368  04FB  1C03               	skipc
  3369  04FC  2CFE               	goto	u681
  3370  04FD  2CFF               	goto	u680
  3371  04FE                     u681:	
  3372  04FE  2D0E               	goto	l1273
  3373  04FF                     u680:	
  3374  04FF                     l1269:	
  3375  04FF  0870               	movf	___lldiv@divisor,w
  3376  0500  02F4               	subwf	___lldiv@dividend,f
  3377  0501  0871               	movf	___lldiv@divisor+1,w
  3378  0502  1C03               	skipc
  3379  0503  0F71               	incfsz	___lldiv@divisor+1,w
  3380  0504  02F5               	subwf	___lldiv@dividend+1,f
  3381  0505  0872               	movf	___lldiv@divisor+2,w
  3382  0506  1C03               	skipc
  3383  0507  0F72               	incfsz	___lldiv@divisor+2,w
  3384  0508  02F6               	subwf	___lldiv@dividend+2,f
  3385  0509  0873               	movf	___lldiv@divisor+3,w
  3386  050A  1C03               	skipc
  3387  050B  0F73               	incfsz	___lldiv@divisor+3,w
  3388  050C  02F7               	subwf	___lldiv@dividend+3,f
  3389  050D                     l1271:	
  3390  050D  1479               	bsf	___lldiv@quotient,0
  3391  050E                     l1273:	
  3392  050E  3001               	movlw	1
  3393  050F                     u695:	
  3394  050F  1003               	clrc
  3395  0510  0CF3               	rrf	___lldiv@divisor+3,f
  3396  0511  0CF2               	rrf	___lldiv@divisor+2,f
  3397  0512  0CF1               	rrf	___lldiv@divisor+1,f
  3398  0513  0CF0               	rrf	___lldiv@divisor,f
  3399  0514  3EFF               	addlw	-1
  3400  0515  1D03               	skipz
  3401  0516  2D0F               	goto	u695
  3402  0517                     l1275:	
  3403  0517  3001               	movlw	1
  3404  0518  02FD               	subwf	___lldiv@counter,f
  3405  0519  1D03               	btfss	3,2
  3406  051A  2D1C               	goto	u701
  3407  051B  2D1D               	goto	u700
  3408  051C                     u701:	
  3409  051C  2CE4               	goto	l1265
  3410  051D                     u700:	
  3411  051D                     l1277:	
  3412  051D  087C               	movf	___lldiv@quotient+3,w
  3413  051E  00F3               	movwf	?___lldiv+3
  3414  051F  087B               	movf	___lldiv@quotient+2,w
  3415  0520  00F2               	movwf	?___lldiv+2
  3416  0521  087A               	movf	___lldiv@quotient+1,w
  3417  0522  00F1               	movwf	?___lldiv+1
  3418  0523  0879               	movf	___lldiv@quotient,w
  3419  0524  00F0               	movwf	?___lldiv
  3420  0525                     l294:	
  3421  0525  0008               	return
  3422  0526                     __end_of___lldiv:	
  3423  007E                     btemp	set	126	;btemp
  3424  007E                     wtemp0	set	126


Data Sizes:
    Strings     36
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[16]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), WriteInt_LCD@output1(COMMON[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_DataWrite@dato	PTR unsigned char  size(2) Largest target is 17
		 -> valor(BANK0[16]), STR_2(CODE[17]), WriteInt_LCD@output1(COMMON[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _LCD_DataWrite->_DWR_LCD
    _init_LCD->_LCD_CmdWrite
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _Configuracion->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3806
                                             18 BANK0      5     5      0
                      _Configuracion
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                       _LCD_CmdWrite
                      _LCD_DataWrite
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    17      5    1988
                                              0 BANK0     18    13      5
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_DataWrite                                        2     0      2     295
                                              2 COMMON     2     0      2
                            _DWR_LCD
 ---------------------------------------------------------------------------------
 (2) _DWR_LCD                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     434
                    _I2C_Master_Init
                           _init_LCD
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             0     0      0      22
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_CmdWrite                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _I2C_Master_Init
       ___lldiv
     _init_LCD
       _LCD_CmdWrite
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD_CmdWrite
   _LCD_DataWrite
     _DWR_LCD
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 21:09:59 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
            ?_LCD_CmdWrite 0070                         l11 03C3                         l12 03D2  
                       l22 036D                         l15 03FA                         l16 0409  
                       l28 0322                         l60 02B7                         l63 02C3  
                       l80 039B                         l72 02AC                         l57 0441  
                       l66 02A3                         l75 02B6                         l78 0393  
                       l79 0396               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072             ?_LCD_DataWrite 0072                        l128 0303  
                      l411 058E                        l260 0347                        l254 07F2  
                      l258 032F                        l530 04BF                        l284 02EA  
                      l540 047B                        l294 0525                        l705 02D5  
                      _GIE 005F               __CFG_CPD$OFF 0000                        u700 051D  
                      u701 051C                        u630 03B8                        u710 03EF  
                      u631 03B7                        u711 03EE                        u640 04D0  
                      u720 0421                        u641 04CF                        u730 02BD  
                      u810 0496                        u731 02BC                        u811 0495  
                      u660 04E4                        u740 02C3                        u661 04E3  
                      u725 041C                        u741 02C2                        u805 0488  
                      u830 04A7                        u910 0477                        u750 02CC  
                      u655 04D5                        u831 04A6                        u911 0476  
                      u751 02CB                        u680 04FF                        u920 036D  
                      u760 02D2                        u681 04FE                        u921 036C  
                      u825 0497                        u905 046B                        u761 02D1  
                      u770 02DC                        u850 04BB                        u930 0659  
                      u675 04E6                        u771 02DB                        u851 04BA  
                      u835 04A3                        u931 0658                        u780 02E9  
                      u860 0448                        u940 0672                        u685 04FB  
                      u781 02E8                        u845 04AF                        u861 0447  
                      u941 0671                        u790 0484                        u950 06A8  
                      u695 050F                        u791 0483                        u951 06A7  
                      u880 045A                        u960 06B0                        u881 0459  
                      u961 06AF                        u890 0464                        u970 06B7  
                      u891 0463                        u875 044C                        u971 06B6  
                      u980 06DE                        u981 06DD                        u990 0717  
                      u895 0460                        u991 0716                        _S_1 0037  
                      fsr0 0004                        indf 0000               __CFG_LVP$OFF 0000  
                     l1301 03FC                       l1311 040A                       l1231 03A1  
                     l1303 03FD                       l1321 0440                       l1313 040E  
                     l1241 03AF                       l1233 03A5                       l1305 03FE  
                     l1401 0348                       l1315 0411                       l1251 03C6  
                     l1243 03B8                       l1235 03A6                       l1323 02B7  
                     l1307 0406                       l1403 0349                       l1331 02CC  
                     l1411 0653                       l1261 04D3                       l1317 043E  
                     l1253 03C7                       l1245 03B9                       l1237 03A7  
                     l1229 039D                       l1309 0304                       l1325 02BD  
                     l1405 0357                       l1341 02D8                       l1333 02D2  
                     l1501 07D3                       l1421 0672                       l1413 0659  
                     l1271 050D                       l1263 04E0                       l1319 043F  
                     l1255 03CF                       l1247 03C0                       l1239 03A8  
                     l1407 035D                       l1343 02DC                       l1335 02D4  
                     l1327 02C5                       l1431 0698                       l1423 0676  
                     l1415 0660                       l1503 07DC                       l1273 050E  
                     l1265 04E4                       l1257 04C0                       l1249 03C5  
                     l1521 02A9                       l1281 03D4                       l1601 0585  
                     l1345 02E0                       l1361 048E                       l1353 047C  
                     l1329 02C6                       l1505 07EE                       l1441 06BF  
                     l1425 0678                       l1433 06A9                       l1417 0665  
                     l1409 064E                       l1275 0517                       l1267 04ED  
                     l1259 04D0                       l1531 037B                       l1515 029B  
                     l1523 02AD                       l1291 03DF                       l1283 03D8  
                     l1603 058A                       l1347 02E2                       l1339 02D7  
                     l1371 04AE                       l1363 0492                       l1355 047E  
                     l1443 06C8                       l1435 06AB                       l1427 0689  
                     l1419 0666                       l1269 04FF                       l1277 051D  
                     l1533 0384                       l1517 02A0                       l1525 02B2  
                     l1293 03E6                       l1285 03DC                       l1349 02E9  
                     l1373 04B5                       l1365 0496                       l1357 0484  
                     l1381 0448                       l1461 0717                       l1445 06CC  
                     l1437 06B0                       l1453 06E8                       l1429 0694  
                     l1621 05B1                       l1613 058F                       l1543 02EB  
                     l1535 0389                       l1527 036E                       l1519 02A4  
                     l1295 03EF                       l1287 03DD                       l1551 0325  
                     l1367 04A7                       l1359 0487                       l1375 04BB  
                     l1391 0464                       l1383 044B                       l1471 072F  
                     l1463 071B                       l1455 0707                       l1439 06B7  
                     l1447 06D0                       l1631 05DC                       l1623 05BF  
                     l1615 059A                       l1545 02EF                       l1537 038F  
                     l1529 0373                       l1297 03F0                       l1289 03DE  
                     l1553 0329                       l1369 04AD                       l1393 046A  
                     l1385 0452                       l1481 075E                       l1465 0720  
                     l1457 070F                       l1449 06DF                       l1641 0624  
                     l1633 05EA                       l1625 05C4                       l1617 05A3  
                     l1547 02FE                       l1539 0397                       l1299 03F7  
                     l1571 0534                       l1563 0526                       l1555 0336  
                     l1395 0471                       l1387 0456                       l1379 0442  
                     l1491 0791                       l1483 076E                       l1475 0738  
                     l1467 0725                       l1459 0713                       l1643 063E  
                     l1635 05EF                       l1627 05CE                       l1619 05A8  
                     l1581 0549                       l1573 0538                       l1565 0529  
                     l1557 033D                       l1549 0323                       l1389 045A  
                     l1397 0477                       l1493 0798                       l1485 076F  
                     l1469 072B                       l1637 05F9                       l1629 05D3  
                     l1591 056C                       l1583 054C                       l1575 053D  
                     l1567 052D                       l1559 0343                       l1495 079D  
                     l1487 0783                       l1479 0754                       l1639 061E  
                     l1593 0572                       l1585 0553                       l1577 0541  
                     l1569 0532                       l1497 07CB                       l1489 0789  
                     l1595 0573                       l1587 0557                       l1579 0543  
                     l1675 06FC                       l1597 057A                       l1589 055B  
                     l1599 0580            __end_of_DWR_LCD 040A                       STR_1 003E  
                     STR_2 001D                       STR_3 002E                       u1000 0725  
                     u1001 0724                       u1010 072B                       u1011 072A  
                     u1100 038F                       u1020 0737                       u1101 038E  
                     u1021 0736                       u1110 0329                       u1030 0753  
                     u1111 0328                       u1031 0752                       u1040 075E  
                     u1041 075D                       u1210 056C                       u1050 076E  
                     u1211 056B                       u1051 076D                       u1035 074F  
                     u1140 0343                       u1060 0783                       u1205 055C  
                     u1141 0342                       u1125 0330                       u1061 0782  
                     u1230 0580                       u1150 052D                       u1070 0791  
                     u1231 057F                       u1215 0568                       u1151 052C  
                     u1135 0337                       u1071 0790                       u1055 076A  
                     u1240 0585                       u1160 0538                       u1080 07DC  
                     u1241 0584                       u1225 0574                       u1161 0537  
                     u1081 07DB                       u1065 077F                       u1170 0549  
                     u1090 07EE                       u1307 03AA                       u1171 0548  
                     u1091 07ED                       u1317 03BB                       u1190 055B  
                     u1327 03CA                       u1191 055A                       u1185 054D  
                     u1257 05CA                       u1267 05F5                       u1277 03E1  
                     u1287 03F2                       u1297 0401                       _PEIE 005E  
             __CFG_WRT$OFF 0000                       _main 058F                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000          ___bmul@multiplier 0073  
           ??_LCD_CmdWrite 0070           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 058F              __CFG_WDTE$OFF 0000            __end_of___lldiv 0526  
          ___awdiv@divisor 0076            __end_of___lwdiv 04C0            __end_of___lwmod 047C  
          ___awdiv@counter 0020                      _PORTB 0006                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000                      _Pot_1 0039            __end_of_dpowers 001D  
          __end_of_isdigit 02D6                      _valor 003A             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F3             __CFG_MCLRE$OFF 0000            __initialization 07F3  
             __end_of_main 064B            ??_LCD_DataWrite 0074                     ??_main 0032  
        ?_I2C_Master_Start 0070                  ??_DWR_LCD 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0078  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                   _Sensor 0038                     ___bmul 02D6                     ___wmul 0323  
                ??___awdiv 007A                  ??___lldiv 0078                  ??___lwdiv 0074  
         __end_of_init_LCD 0323                  ??___lwmod 007C           ___awdiv@quotient 0022  
                ??_isdigit 0070                  ??_sprintf 0025       __end_of_LCD_CmdWrite 03D3  
  __end_of__initialization 07FC        ___bmul@multiplicand 0070             __pcstackCOMMON 0070  
               __pbssBANK0 0037      __end_of_Configuracion 0304                 __pmaintext 058F  
                  ?___bmul 0070                    ?___wmul 0070                    _DWR_LCD 03D3  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
                ?_init_LCD 0070            __size_of___bmul 0015                    ___awdiv 0526  
                  ___lldiv 04C0            __size_of___wmul 0025                    ___lwdiv 047C  
                  ___lwmod 0442                    __ptext1 064B                    __ptext2 02C4  
                  __ptext3 0442                    __ptext4 047C                    __ptext5 02D6  
                  __ptext6 0323                    __ptext7 0526                    __ptext8 0348  
                  __ptext9 03D3                    _dpowers 0013                    _isdigit 02C4  
    __size_of_LCD_CmdWrite 0037   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 064B  
                  clrloop0 0294       end_of_initialization 07FC                 ??_init_LCD 0072  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
             _LCD_CmdWrite 039C      __end_of_LCD_DataWrite 036E                  _PORTDbits 0008  
                _TRISCbits 0087             __end_of___bmul 02EB             __end_of___wmul 0348  
      start_initialization 07F3          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                 DWR_LCD@dat 0071  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??___bmul 0071                   ??___wmul 0074  
                 ?_DWR_LCD 0070                  ___latbits 0002              __pcstackBANK0 0020  
              sprintf@flag 0029                sprintf@prec 0030          __size_of_init_LCD 001F  
         _I2C_Master_Start 029B           _I2C_Master_Write 02AD           ___lwdiv@dividend 0072  
                 ?___awdiv 0076                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0003     __size_of_Configuracion 0019  
                 ?_isdigit 0070           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           ___wmul@product 0074                  clear_ram0 0293            LCD_CmdWrite@cmd 0071  
              __stringbase 0012          ___wmul@multiplier 0070           __size_of_DWR_LCD 0037  
      I2C_Master_Read@temp 0074              _Configuracion 02EB           __size_of___awdiv 0069  
         __size_of___lldiv 0066           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013                _isdigit$665 0070                 sprintf@len 002B  
               sprintf@val 002D            _I2C_Master_Init 040A          LCD_DataWrite@dato 0072  
          _I2C_Master_Read 036E            _I2C_Master_Wait 02B7            _I2C_Master_Stop 02A4  
         __size_of_isdigit 0012            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 02AD                   __ptext11 02A4                   __ptext12 029B  
                 __ptext13 036E                   __ptext14 02B7                   __ptext15 02EB  
                 __ptext16 0304                   __ptext17 039C                   __ptext18 040A  
                 __ptext19 04C0          __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 01A8  
           ?_Configuracion 0070                   _init_LCD 0304              __size_of_main 00BC  
   __size_of_LCD_DataWrite 0026   __end_of_I2C_Master_Start 02A4   __end_of_I2C_Master_Write 02B7  
                 isdigit@c 0071                  sprintf@ap 0028                  sprintf@cp 002A  
                sprintf@sp 002F           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
                stringcode 000D    __end_of_I2C_Master_Init 0442    __end_of_I2C_Master_Read 039C  
  __end_of_I2C_Master_Wait 02C4    __end_of_I2C_Master_Stop 02AD              _LCD_DataWrite 0348  
                 sprintf@c 0031                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
          ??_Configuracion 007E  
