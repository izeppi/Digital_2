

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 20:45:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	strings
   378  0003                     __pstrings:	
   379  0003                     stringtab:	
   380  0003                     __stringtab:	
   381                           
   382                           ;	String table - string pointers are 1 byte each
   383  0003  1BFF               	btfsc	btemp+1,7
   384  0004  280D               	ljmp	stringcode
   385  0005  1383               	bcf	3,7
   386  0006  187F               	btfsc	btemp+1,0
   387  0007  1783               	bsf	3,7
   388  0008  0800               	movf	0,w
   389  0009  0A84               	incf	4,f
   390  000A  1903               	skipnz
   391  000B  0AFF               	incf	btemp+1,f
   392  000C  0008               	return
   393  000D                     stringcode:	
   394  000D                     stringdir:	
   395  000D  3000               	movlw	high stringdir
   396  000E  008A               	movwf	10
   397  000F  0804               	movf	4,w
   398  0010  0A84               	incf	4,f
   399  0011  0782               	addwf	2,f
   400  0012                     __stringbase:	
   401  0012  3400               	retlw	0
   402  0013                     __end_of__stringtab:	
   403  0013                     _dpowers:	
   404  0013  3401               	retlw	1
   405  0014  3400               	retlw	0
   406  0015  340A               	retlw	10
   407  0016  3400               	retlw	0
   408  0017  3464               	retlw	100
   409  0018  3400               	retlw	0
   410  0019  34E8               	retlw	232
   411  001A  3403               	retlw	3
   412  001B  3410               	retlw	16
   413  001C  3427               	retlw	39
   414  001D                     __end_of_dpowers:	
   415  0013                     _SSPBUF	set	19
   416  0014                     _SSPCON	set	20
   417  0008                     _PORTDbits	set	8
   418  0006                     _PORTB	set	6
   419  0063                     _SSPIF	set	99
   420  005E                     _PEIE	set	94
   421  005F                     _GIE	set	95
   422  0088                     _TRISD	set	136
   423  0086                     _TRISB	set	134
   424  0091                     _SSPCON2bits	set	145
   425  0087                     _TRISCbits	set	135
   426  0094                     _SSPSTAT	set	148
   427  0093                     _SSPADD	set	147
   428  0091                     _SSPCON2	set	145
   429  0463                     _SSPIE	set	1123
   430  043C                     _TRISC4	set	1084
   431  043B                     _TRISC3	set	1083
   432  001D                     STR_2:	
   433  001D  3420               	retlw	32	;' '
   434  001E  3453               	retlw	83	;'S'
   435  001F  3431               	retlw	49	;'1'
   436  0020  3420               	retlw	32	;' '
   437  0021  3420               	retlw	32	;' '
   438  0022  3420               	retlw	32	;' '
   439  0023  3420               	retlw	32	;' '
   440  0024  3453               	retlw	83	;'S'
   441  0025  3432               	retlw	50	;'2'
   442  0026  3420               	retlw	32	;' '
   443  0027  3420               	retlw	32	;' '
   444  0028  3420               	retlw	32	;' '
   445  0029  3420               	retlw	32	;' '
   446  002A  3453               	retlw	83	;'S'
   447  002B  3433               	retlw	51	;'3'
   448  002C  3420               	retlw	32	;' '
   449  002D  3400               	retlw	0
   450  002E                     STR_3:	
   451  002E  3425               	retlw	37	;'%'
   452  002F  342E               	retlw	46	;'.'
   453  0030  3433               	retlw	51	;'3'
   454  0031  3464               	retlw	100	;'d'
   455  0032  3400               	retlw	0
   456  0033                     STR_1:	
   457  0033  3425               	retlw	37	;'%'
   458  0034  3464               	retlw	100	;'d'
   459  0035  3400               	retlw	0
   460                           
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  07F3                     start_initialization:	
   465  07F3                     __initialization:	
   466                           
   467                           ; Clear objects allocated to BANK0
   468  07F3  1383               	bcf	3,7	;select IRP bank0
   469  07F4  3020               	movlw	low __pbssBANK0
   470  07F5  0084               	movwf	4
   471  07F6  3031               	movlw	low (__pbssBANK0+17)
   472  07F7  120A  118A  23BD  120A  118A  	fcall	clear_ram0
   473  07FC                     end_of_initialization:	
   474                           ;End of C runtime variable initialization code
   475                           
   476  07FC                     __end_of__initialization:	
   477  07FC  0183               	clrf	3
   478  07FD  120A  118A  2DC5   	ljmp	_main	;jump to C main() function
   479                           
   480                           	psect	bssBANK0
   481  0020                     __pbssBANK0:	
   482  0020                     _val:	
   483  0020                     	ds	1
   484  0021                     _valor:	
   485  0021                     	ds	16
   486                           
   487                           	psect	clrtext
   488  03BD                     clear_ram0:	
   489                           ;	Called with FSR containing the base address, and
   490                           ;	W with the last address+1
   491                           
   492  03BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   493  03BE                     clrloop0:	
   494  03BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   495  03BF  0A84               	incf	4,f	;increment pointer
   496  03C0  0604               	xorwf	4,w	;XOR with final address
   497  03C1  1903               	btfsc	3,2	;have we reached the end yet?
   498  03C2  3400               	retlw	0	;all done for this memory range, return
   499  03C3  0604               	xorwf	4,w	;XOR again to restore value
   500  03C4  2BBE               	goto	clrloop0	;do the next byte
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:	
   504  0070                     ?_isdigit:	
   505  0070                     ?_Configuracion:	
   506                           ; 1 bit 
   507                           
   508  0070                     ??_isdigit:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_LCD_CmdWrite:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_LCD_CmdWrite:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_DWR_LCD:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_DWR_LCD:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_init_LCD:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Master_Wait:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_I2C_Master_Wait:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_Master_Start:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_I2C_Master_Start:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_I2C_Master_Stop:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_I2C_Master_Stop:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_I2C_Master_Write:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_main:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?___bmul:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_I2C_Master_Read:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?___lwdiv:	
   557                           ; 2 bytes @ 0x0
   558                           
   559  0070                     ?___lldiv:	
   560                           ; 2 bytes @ 0x0
   561                           
   562  0070                     ___bmul@multiplicand:	
   563                           ; 4 bytes @ 0x0
   564                           
   565  0070                     _isdigit$663:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     I2C_Master_Write@d:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     I2C_Master_Read@a:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ___lwdiv@divisor:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ___lldiv@divisor:	
   578                           ; 2 bytes @ 0x0
   579                           
   580                           
   581                           ; 4 bytes @ 0x0
   582  0070                     	ds	1
   583  0071                     ??___bmul:	
   584  0071                     LCD_CmdWrite@cmd:	
   585                           ; 1 bytes @ 0x1
   586                           
   587  0071                     DWR_LCD@dat:	
   588                           ; 1 bytes @ 0x1
   589                           
   590  0071                     isdigit@c:	
   591                           ; 1 bytes @ 0x1
   592                           
   593                           
   594                           ; 1 bytes @ 0x1
   595  0071                     	ds	1
   596  0072                     ?_LCD_DataWrite:	
   597  0072                     ??_init_LCD:	
   598                           ; 1 bytes @ 0x2
   599                           
   600  0072                     ??_I2C_Master_Write:	
   601                           ; 1 bytes @ 0x2
   602                           
   603  0072                     ??_I2C_Master_Read:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  0072                     ___bmul@product:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0072                     LCD_DataWrite@dato:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     ___lwdiv@dividend:	
   613                           ; 2 bytes @ 0x2
   614                           
   615                           
   616                           ; 2 bytes @ 0x2
   617  0072                     	ds	1
   618  0073                     ___bmul@multiplier:	
   619                           
   620                           ; 1 bytes @ 0x3
   621  0073                     	ds	1
   622  0074                     ??_LCD_DataWrite:	
   623  0074                     ??___lwdiv:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     I2C_Master_Read@temp:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0074                     ___lldiv@dividend:	
   630                           ; 2 bytes @ 0x4
   631                           
   632                           
   633                           ; 4 bytes @ 0x4
   634  0074                     	ds	1
   635  0075                     ___lwdiv@quotient:	
   636                           
   637                           ; 2 bytes @ 0x5
   638  0075                     	ds	2
   639  0077                     ___lwdiv@counter:	
   640                           
   641                           ; 1 bytes @ 0x7
   642  0077                     	ds	1
   643  0078                     ??___lldiv:	
   644  0078                     ?___lwmod:	
   645                           ; 1 bytes @ 0x8
   646                           
   647  0078                     ___lwmod@divisor:	
   648                           ; 2 bytes @ 0x8
   649                           
   650                           
   651                           ; 2 bytes @ 0x8
   652  0078                     	ds	1
   653  0079                     ___lldiv@quotient:	
   654                           
   655                           ; 4 bytes @ 0x9
   656  0079                     	ds	1
   657  007A                     ___lwmod@dividend:	
   658                           
   659                           ; 2 bytes @ 0xA
   660  007A                     	ds	2
   661  007C                     ??___lwmod:	
   662                           
   663                           ; 1 bytes @ 0xC
   664  007C                     	ds	1
   665  007D                     ___lldiv@counter:	
   666  007D                     ___lwmod@counter:	
   667                           ; 1 bytes @ 0xD
   668                           
   669                           
   670                           ; 1 bytes @ 0xD
   671  007D                     	ds	1
   672  007E                     ??_Configuracion:	
   673                           
   674                           	psect	cstackBANK0
   675  0031                     __pcstackBANK0:	
   676                           ; 1 bytes @ 0xE
   677                           
   678  0031                     ?_I2C_Master_Init:	
   679  0031                     ?_sprintf:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0031                     sprintf@f:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0031                     I2C_Master_Init@c:	
   686                           ; 1 bytes @ 0x0
   687                           
   688                           
   689                           ; 4 bytes @ 0x0
   690  0031                     	ds	3
   691  0034                     ??_sprintf:	
   692                           
   693                           ; 1 bytes @ 0x3
   694  0034                     	ds	1
   695  0035                     ??_I2C_Master_Init:	
   696                           
   697                           ; 1 bytes @ 0x4
   698  0035                     	ds	2
   699  0037                     sprintf@ap:	
   700                           
   701                           ; 1 bytes @ 0x6
   702  0037                     	ds	1
   703  0038                     sprintf@flag:	
   704                           
   705                           ; 1 bytes @ 0x7
   706  0038                     	ds	1
   707  0039                     sprintf@val:	
   708                           
   709                           ; 2 bytes @ 0x8
   710  0039                     	ds	2
   711  003B                     sprintf@sp:	
   712                           
   713                           ; 1 bytes @ 0xA
   714  003B                     	ds	1
   715  003C                     sprintf@prec:	
   716                           
   717                           ; 1 bytes @ 0xB
   718  003C                     	ds	1
   719  003D                     sprintf@c:	
   720                           
   721                           ; 1 bytes @ 0xC
   722  003D                     	ds	1
   723  003E                     ??_main:	
   724                           
   725                           ; 1 bytes @ 0xD
   726  003E                     	ds	3
   727                           
   728                           	psect	maintext
   729  05C5                     __pmaintext:	
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 37 in file "I2C_Master.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : B00/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0
   751 ;;      Temps:          0       3       0       0       0
   752 ;;      Totals:         0       3       0       0       0
   753 ;;Total ram usage:        3 bytes
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		_Configuracion
   757 ;;		_I2C_Master_Read
   758 ;;		_I2C_Master_Start
   759 ;;		_I2C_Master_Stop
   760 ;;		_I2C_Master_Write
   761 ;;		_LCD_CmdWrite
   762 ;;		_LCD_DataWrite
   763 ;;		_sprintf
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _main
   771  05C5                     _main:	
   772  05C5                     l1444:	
   773                           ;incstack = 0
   774                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   775                           
   776                           
   777                           ;I2C_Master.c: 38:     Configuracion();
   778  05C5  120A  118A  2415  120A  118A  	fcall	_Configuracion
   779                           
   780                           ;I2C_Master.c: 39:     LCD_CmdWrite(0xC0);
   781  05CA  30C0               	movlw	192
   782  05CB  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
   783  05D0                     l1446:	
   784                           
   785                           ;I2C_Master.c: 40:     LCD_DataWrite(" S1    S2    S3 ");
   786  05D0  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   787  05D1  00F2               	movwf	LCD_DataWrite@dato
   788  05D2  3080               	movlw	128
   789  05D3  00F3               	movwf	LCD_DataWrite@dato+1
   790  05D4  120A  118A  244D  120A  118A  	fcall	_LCD_DataWrite
   791  05D9                     l1448:	
   792                           
   793                           ;I2C_Master.c: 42:         I2C_Master_Start();
   794  05D9  120A  118A  23C5  120A  118A  	fcall	_I2C_Master_Start
   795  05DE                     l1450:	
   796                           
   797                           ;I2C_Master.c: 43:         I2C_Master_Write(0x51);
   798  05DE  3051               	movlw	81
   799  05DF  00F0               	movwf	I2C_Master_Write@d
   800  05E0  3000               	movlw	0
   801  05E1  00F1               	movwf	I2C_Master_Write@d+1
   802  05E2  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Write
   803  05E7                     l1452:	
   804                           
   805                           ;I2C_Master.c: 44:         val = I2C_Master_Read(0);
   806  05E7  3000               	movlw	0
   807  05E8  00F0               	movwf	I2C_Master_Read@a
   808  05E9  00F1               	movwf	I2C_Master_Read@a+1
   809  05EA  120A  118A  2473  120A  118A  	fcall	_I2C_Master_Read
   810  05EF  0870               	movf	?_I2C_Master_Read,w
   811  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   812  05F1  1303               	bcf	3,6	;RP1=0, select bank0
   813  05F2  00BE               	movwf	??_main
   814  05F3  083E               	movf	??_main,w
   815  05F4  00A0               	movwf	_val
   816  05F5                     l1454:	
   817                           
   818                           ;I2C_Master.c: 45:         I2C_Master_Stop();
   819  05F5  120A  118A  23CE  120A  118A  	fcall	_I2C_Master_Stop
   820  05FA                     l1456:	
   821                           
   822                           ;I2C_Master.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
   823  05FA  300D               	movlw	13
   824  05FB  1283               	bcf	3,5	;RP0=0, select bank0
   825  05FC  1303               	bcf	3,6	;RP1=0, select bank0
   826  05FD  00BF               	movwf	??_main+1
   827  05FE  30FB               	movlw	251
   828  05FF  00BE               	movwf	??_main
   829  0600                     u897:	
   830  0600  0BBE               	decfsz	??_main,f
   831  0601  2E00               	goto	u897
   832  0602  0BBF               	decfsz	??_main+1,f
   833  0603  2E00               	goto	u897
   834  0604                     l1458:	
   835                           
   836                           ;I2C_Master.c: 48:         LCD_CmdWrite(0x80);
   837  0604  3080               	movlw	128
   838  0605  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
   839  060A                     l1460:	
   840                           
   841                           ;I2C_Master.c: 49:         sprintf(valor, "%.3d", val);
   842  060A  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   843  060B  1283               	bcf	3,5	;RP0=0, select bank0
   844  060C  1303               	bcf	3,6	;RP1=0, select bank0
   845  060D  00BE               	movwf	??_main
   846  060E  083E               	movf	??_main,w
   847  060F  00B1               	movwf	sprintf@f
   848  0610  0820               	movf	_val,w
   849  0611  00BF               	movwf	??_main+1
   850  0612  01C0               	clrf	??_main+2
   851  0613  083F               	movf	??_main+1,w
   852  0614  00B2               	movwf	?_sprintf+1
   853  0615  0840               	movf	??_main+2,w
   854  0616  00B3               	movwf	?_sprintf+2
   855  0617  3021               	movlw	(low (_valor| 0))& (0+255)
   856  0618  120A  118A  2690  120A  118A  	fcall	_sprintf
   857  061D                     l1462:	
   858                           
   859                           ;I2C_Master.c: 50:         LCD_DataWrite(valor);
   860  061D  3021               	movlw	(low (_valor| 0))& (0+255)
   861  061E  00F2               	movwf	LCD_DataWrite@dato
   862  061F  3000               	movlw	0
   863  0620  00F3               	movwf	LCD_DataWrite@dato+1
   864  0621  120A  118A  244D  120A  118A  	fcall	_LCD_DataWrite
   865  0626  2DD9               	goto	l1448
   866  0627  120A  118A  2800   	ljmp	start
   867  062A                     __end_of_main:	
   868                           
   869                           	psect	text1
   870  0690                     __ptext1:	
   871 ;; *************** function _sprintf *****************
   872 ;; Defined at:
   873 ;;		line 505 in file "D:\Xc8\pic\sources\c90\common\doprnt.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  sp              1    wreg     PTR unsigned char 
   876 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
   877 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   878 ;;		 -> STR_3(5), STR_1(3), 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  sp              1   10[BANK0 ] PTR unsigned char 
   881 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
   882 ;;  tmpval          4    0        struct .
   883 ;;  val             2    8[BANK0 ] unsigned int 
   884 ;;  cp              2    0        PTR const unsigned char 
   885 ;;  len             2    0        unsigned int 
   886 ;;  c               1   12[BANK0 ] unsigned char 
   887 ;;  prec            1   11[BANK0 ] char 
   888 ;;  flag            1    7[BANK0 ] unsigned char 
   889 ;;  ap              1    6[BANK0 ] PTR void [1]
   890 ;;		 -> ?_sprintf(2), 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2    0[BANK0 ] int 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       3       0       0       0
   901 ;;      Locals:         0       7       0       0       0
   902 ;;      Temps:          0       3       0       0       0
   903 ;;      Totals:         0      13       0       0       0
   904 ;;Total ram usage:       13 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		___bmul
   909 ;;		___lwdiv
   910 ;;		___lwmod
   911 ;;		_isdigit
   912 ;; This function is called by:
   913 ;;		_main
   914 ;;		_WriteInt_LCD
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _sprintf
   920  0690                     _sprintf:	
   921                           
   922                           ;incstack = 0
   923                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   924                           ;sprintf@sp stored from wreg
   925  0690  1283               	bcf	3,5	;RP0=0, select bank0
   926  0691  1303               	bcf	3,6	;RP1=0, select bank0
   927  0692  00BB               	movwf	sprintf@sp
   928  0693                     l1314:	
   929                           
   930                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const char * f, ...);D:
      +                          \Xc8\pic\sources\c90\common\doprnt.c: 506: {;D:\Xc8\pic\sources\c90\common\doprnt.c: 507
      +                          :  va_list ap;;D:\Xc8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\Xc8\pic\sources\
      +                          c90\common\doprnt.c: 521:  signed char prec;;D:\Xc8\pic\sources\c90\common\doprnt.c: 525
      +                          :  unsigned char flag;;D:\Xc8\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;D:\Xc8\pi
      +                          c\sources\c90\common\doprnt.c: 545:  unsigned int val;;D:\Xc8\pic\sources\c90\common\dop
      +                          rnt.c: 546:  unsigned len;
   931  0693  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   932  0694  00B4               	movwf	??_sprintf
   933  0695  0834               	movf	??_sprintf,w
   934  0696  00B7               	movwf	sprintf@ap
   935                           
   936                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
   937  0697  2FDC               	goto	l1392
   938  0698                     l1316:	
   939                           
   940                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
   941  0698  3025               	movlw	37
   942  0699  063D               	xorwf	sprintf@c,w
   943  069A  1903               	btfsc	3,2
   944  069B  2E9D               	goto	u751
   945  069C  2E9E               	goto	u750
   946  069D                     u751:	
   947  069D  2EAA               	goto	l1322
   948  069E                     u750:	
   949  069E                     l1318:	
   950                           
   951                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 557:   {;D:\Xc8\pic\sources\c90\common\doprnt.c
      +                          : 558:    ((*sp++ = (c)));
   952  069E  083D               	movf	sprintf@c,w
   953  069F  00B4               	movwf	??_sprintf
   954  06A0  083B               	movf	sprintf@sp,w
   955  06A1  0084               	movwf	4
   956  06A2  0834               	movf	??_sprintf,w
   957  06A3  1383               	bcf	3,7	;select IRP bank0
   958  06A4  0080               	movwf	0
   959  06A5                     l1320:	
   960  06A5  3001               	movlw	1
   961  06A6  00B4               	movwf	??_sprintf
   962  06A7  0834               	movf	??_sprintf,w
   963  06A8  07BB               	addwf	sprintf@sp,f
   964                           
   965                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
   966  06A9  2FDC               	goto	l1392
   967  06AA                     l1322:	
   968                           
   969                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   970  06AA  01B8               	clrf	sprintf@flag
   971  06AB                     l1324:	
   972                           
   973                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
   974  06AB  0831               	movf	sprintf@f,w
   975  06AC  0084               	movwf	4
   976  06AD  120A  118A  200D  120A  118A  	fcall	stringdir
   977  06B2  3A2E               	xorlw	46
   978  06B3  1D03               	skipz
   979  06B4  2EB6               	goto	u761
   980  06B5  2EB7               	goto	u760
   981  06B6                     u761:	
   982  06B6  2EEE               	goto	l1338
   983  06B7                     u760:	
   984  06B7                     l1326:	
   985                           
   986                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 630:    f++;
   987  06B7  3001               	movlw	1
   988  06B8  00B4               	movwf	??_sprintf
   989  06B9  0834               	movf	??_sprintf,w
   990  06BA  07B1               	addwf	sprintf@f,f
   991  06BB                     l1328:	
   992                           
   993                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 644:    {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 645:     prec = 0;
   994  06BB  01BC               	clrf	sprintf@prec
   995                           
   996                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
   997  06BC  2EDD               	goto	l1336
   998  06BD                     l1330:	
   999                           
  1000                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1001  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1002  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1003  06BF  083C               	movf	sprintf@prec,w
  1004  06C0  00B4               	movwf	??_sprintf
  1005  06C1  0834               	movf	??_sprintf,w
  1006  06C2  00F0               	movwf	___bmul@multiplicand
  1007  06C3  300A               	movlw	10
  1008  06C4  120A  118A  2400  120A  118A  	fcall	___bmul
  1009  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1010  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1011  06CB  00B5               	movwf	??_sprintf+1
  1012  06CC  0835               	movf	??_sprintf+1,w
  1013  06CD  00BC               	movwf	sprintf@prec
  1014  06CE                     l1332:	
  1015                           
  1016                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1017  06CE  0831               	movf	sprintf@f,w
  1018  06CF  0084               	movwf	4
  1019  06D0  120A  118A  200D  120A  118A  	fcall	stringdir
  1020  06D5  3ED0               	addlw	-48
  1021  06D6  00B4               	movwf	??_sprintf
  1022  06D7  0834               	movf	??_sprintf,w
  1023  06D8  07BC               	addwf	sprintf@prec,f
  1024  06D9                     l1334:	
  1025  06D9  3001               	movlw	1
  1026  06DA  00B4               	movwf	??_sprintf
  1027  06DB  0834               	movf	??_sprintf,w
  1028  06DC  07B1               	addwf	sprintf@f,f
  1029  06DD                     l1336:	
  1030                           
  1031                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
  1032  06DD  0831               	movf	sprintf@f,w
  1033  06DE  0084               	movwf	4
  1034  06DF  120A  118A  200D  120A  118A  	fcall	stringdir
  1035  06E4  120A  118A  23EE  120A  118A  	fcall	_isdigit
  1036  06E9  1803               	btfsc	3,0
  1037  06EA  2EEC               	goto	u771
  1038  06EB  2EED               	goto	u770
  1039  06EC                     u771:	
  1040  06EC  2EBD               	goto	l1330
  1041  06ED                     u770:	
  1042  06ED  2EEF               	goto	l1342
  1043  06EE                     l1338:	
  1044                           
  1045                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1046  06EE  01BC               	clrf	sprintf@prec
  1047  06EF                     l1342:	
  1048  06EF  3001               	movlw	1
  1049  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1050  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1051  06F2  07B1               	addwf	sprintf@f,f
  1052  06F3  30FF               	movlw	-1
  1053  06F4  0731               	addwf	sprintf@f,w
  1054  06F5  0084               	movwf	4
  1055  06F6  120A  118A  200D  120A  118A  	fcall	stringdir
  1056  06FB  00BD               	movwf	sprintf@c
  1057  06FC  00B4               	movwf	??_sprintf
  1058  06FD  01B5               	clrf	??_sprintf+1
  1059                           
  1060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1061                           ; Switch size 1, requested type "simple"
  1062                           ; Number of cases is 1, Range of values is 0 to 0
  1063                           ; switch strategies available:
  1064                           ; Name         Instructions Cycles
  1065                           ; simple_byte            4     3 (average)
  1066                           ; direct_byte           11     8 (fixed)
  1067                           ; jumptable            260     6 (fixed)
  1068                           ;	Chosen strategy is simple_byte
  1069  06FE  0835               	movf	??_sprintf+1,w
  1070  06FF  3A00               	xorlw	0	; case 0
  1071  0700  1903               	skipnz
  1072  0701  2F03               	goto	l1494
  1073  0702  2FDC               	goto	l1392
  1074  0703                     l1494:	
  1075                           
  1076                           ; Switch size 1, requested type "simple"
  1077                           ; Number of cases is 3, Range of values is 0 to 105
  1078                           ; switch strategies available:
  1079                           ; Name         Instructions Cycles
  1080                           ; simple_byte           10     6 (average)
  1081                           ; jumptable            260     6 (fixed)
  1082                           ;	Chosen strategy is simple_byte
  1083  0703  0834               	movf	??_sprintf,w
  1084  0704  3A00               	xorlw	0	; case 0
  1085  0705  1903               	skipnz
  1086  0706  2FEE               	goto	l1394
  1087  0707  3A64               	xorlw	100	; case 100
  1088  0708  1903               	skipnz
  1089  0709  2F0E               	goto	l1344
  1090  070A  3A0D               	xorlw	13	; case 105
  1091  070B  1903               	skipnz
  1092  070C  2F0E               	goto	l1344
  1093  070D  2FDC               	goto	l1392
  1094  070E                     l1344:	
  1095                           
  1096                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1097  070E  0837               	movf	sprintf@ap,w
  1098  070F  0084               	movwf	4
  1099  0710  1383               	bcf	3,7	;select IRP bank0
  1100  0711  0800               	movf	0,w
  1101  0712  00B9               	movwf	sprintf@val
  1102  0713  0A84               	incf	4,f
  1103  0714  0800               	movf	0,w
  1104  0715  00BA               	movwf	sprintf@val+1
  1105  0716                     l1346:	
  1106  0716  3002               	movlw	2
  1107  0717  00B4               	movwf	??_sprintf
  1108  0718  0834               	movf	??_sprintf,w
  1109  0719  07B7               	addwf	sprintf@ap,f
  1110  071A                     l1348:	
  1111                           
  1112                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1113  071A  1FBA               	btfss	sprintf@val+1,7
  1114  071B  2F1D               	goto	u781
  1115  071C  2F1E               	goto	u780
  1116  071D                     u781:	
  1117  071D  2F27               	goto	l1354
  1118  071E                     u780:	
  1119  071E                     l1350:	
  1120                           
  1121                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1122  071E  3003               	movlw	3
  1123  071F  00B4               	movwf	??_sprintf
  1124  0720  0834               	movf	??_sprintf,w
  1125  0721  04B8               	iorwf	sprintf@flag,f
  1126  0722                     l1352:	
  1127                           
  1128                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1129  0722  09B9               	comf	sprintf@val,f
  1130  0723  09BA               	comf	sprintf@val+1,f
  1131  0724  0AB9               	incf	sprintf@val,f
  1132  0725  1903               	skipnz
  1133  0726  0ABA               	incf	sprintf@val+1,f
  1134  0727                     l1354:	
  1135                           
  1136                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1292:   };D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1316:   if(prec == 0 && val == 0)
  1137  0727  083C               	movf	sprintf@prec,w
  1138  0728  1D03               	btfss	3,2
  1139  0729  2F2B               	goto	u791
  1140  072A  2F2C               	goto	u790
  1141  072B                     u791:	
  1142  072B  2F36               	goto	l1360
  1143  072C                     u790:	
  1144  072C                     l1356:	
  1145  072C  0839               	movf	sprintf@val,w
  1146  072D  043A               	iorwf	sprintf@val+1,w
  1147  072E  1D03               	btfss	3,2
  1148  072F  2F31               	goto	u801
  1149  0730  2F32               	goto	u800
  1150  0731                     u801:	
  1151  0731  2F36               	goto	l1360
  1152  0732                     u800:	
  1153  0732                     l1358:	
  1154                           
  1155                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1156  0732  3001               	movlw	1
  1157  0733  00B4               	movwf	??_sprintf
  1158  0734  0834               	movf	??_sprintf,w
  1159  0735  07BC               	addwf	sprintf@prec,f
  1160  0736                     l1360:	
  1161                           
  1162                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof
      +                           dpowers[0] ; c++)
  1163  0736  01BD               	clrf	sprintf@c
  1164  0737  0ABD               	incf	sprintf@c,f
  1165  0738                     l1364:	
  1166                           
  1167                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1168  0738  083D               	movf	sprintf@c,w
  1169  0739  00B4               	movwf	??_sprintf
  1170  073A  0734               	addwf	??_sprintf,w
  1171  073B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1172  073C  0084               	movwf	4
  1173  073D  120A  118A  200D  120A  118A  	fcall	stringdir
  1174  0742  00B5               	movwf	??_sprintf+1
  1175  0743  120A  118A  200D  120A  118A  	fcall	stringdir
  1176  0748  00B6               	movwf	??_sprintf+2
  1177  0749  0836               	movf	??_sprintf+2,w
  1178  074A  023A               	subwf	sprintf@val+1,w
  1179  074B  1D03               	skipz
  1180  074C  2F4F               	goto	u815
  1181  074D  0835               	movf	??_sprintf+1,w
  1182  074E  0239               	subwf	sprintf@val,w
  1183  074F                     u815:	
  1184  074F  1803               	skipnc
  1185  0750  2F52               	goto	u811
  1186  0751  2F53               	goto	u810
  1187  0752                     u811:	
  1188  0752  2F54               	goto	l1368
  1189  0753                     u810:	
  1190  0753  2F5E               	goto	l1370
  1191  0754                     l1368:	
  1192  0754  3001               	movlw	1
  1193  0755  00B4               	movwf	??_sprintf
  1194  0756  0834               	movf	??_sprintf,w
  1195  0757  07BD               	addwf	sprintf@c,f
  1196  0758  3005               	movlw	5
  1197  0759  063D               	xorwf	sprintf@c,w
  1198  075A  1D03               	btfss	3,2
  1199  075B  2F5D               	goto	u821
  1200  075C  2F5E               	goto	u820
  1201  075D                     u821:	
  1202  075D  2F38               	goto	l1364
  1203  075E                     u820:	
  1204  075E                     l1370:	
  1205                           
  1206                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  1207  075E  083C               	movf	sprintf@prec,w
  1208  075F  00B4               	movwf	??_sprintf
  1209  0760  01B5               	clrf	??_sprintf+1
  1210  0761  1BB4               	btfsc	??_sprintf,7
  1211  0762  03B5               	decf	??_sprintf+1,f
  1212  0763  0835               	movf	??_sprintf+1,w
  1213  0764  3A80               	xorlw	128
  1214  0765  3C80               	sublw	128
  1215  0766  1D03               	skipz
  1216  0767  2F6A               	goto	u835
  1217  0768  0834               	movf	??_sprintf,w
  1218  0769  023D               	subwf	sprintf@c,w
  1219  076A                     u835:	
  1220  076A  1803               	skipnc
  1221  076B  2F6D               	goto	u831
  1222  076C  2F6E               	goto	u830
  1223  076D                     u831:	
  1224  076D  2F6F               	goto	l1374
  1225  076E                     u830:	
  1226  076E                     l1372:	
  1227  076E  2F89               	goto	l1378
  1228  076F                     l1374:	
  1229  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0771  083C               	movf	sprintf@prec,w
  1232  0772  00B4               	movwf	??_sprintf
  1233  0773  01B5               	clrf	??_sprintf+1
  1234  0774  1BB4               	btfsc	??_sprintf,7
  1235  0775  03B5               	decf	??_sprintf+1,f
  1236  0776  0835               	movf	??_sprintf+1,w
  1237  0777  3A80               	xorlw	128
  1238  0778  00B6               	movwf	??_sprintf+2
  1239  0779  3080               	movlw	128
  1240  077A  0236               	subwf	??_sprintf+2,w
  1241  077B  1D03               	skipz
  1242  077C  2F7F               	goto	u845
  1243  077D  083D               	movf	sprintf@c,w
  1244  077E  0234               	subwf	??_sprintf,w
  1245  077F                     u845:	
  1246  077F  1803               	skipnc
  1247  0780  2F82               	goto	u841
  1248  0781  2F83               	goto	u840
  1249  0782                     u841:	
  1250  0782  2F89               	goto	l1378
  1251  0783                     u840:	
  1252  0783                     l1376:	
  1253                           
  1254                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  1255  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0785  083D               	movf	sprintf@c,w
  1258  0786  00B4               	movwf	??_sprintf
  1259  0787  0834               	movf	??_sprintf,w
  1260  0788  00BC               	movwf	sprintf@prec
  1261  0789                     l1378:	
  1262                           
  1263                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1464:    if(flag & 0x03)
  1264  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1265  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1266  078B  0838               	movf	sprintf@flag,w
  1267  078C  3903               	andlw	3
  1268  078D  1903               	btfsc	3,2
  1269  078E  2F90               	goto	u851
  1270  078F  2F91               	goto	u850
  1271  0790                     u851:	
  1272  0790  2FD3               	goto	l1390
  1273  0791                     u850:	
  1274  0791                     l1380:	
  1275                           
  1276                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1277  0791  302D               	movlw	45
  1278  0792  00B4               	movwf	??_sprintf
  1279  0793  083B               	movf	sprintf@sp,w
  1280  0794  0084               	movwf	4
  1281  0795  0834               	movf	??_sprintf,w
  1282  0796  1383               	bcf	3,7	;select IRP bank0
  1283  0797  0080               	movwf	0
  1284  0798                     l1382:	
  1285  0798  3001               	movlw	1
  1286  0799  00B4               	movwf	??_sprintf
  1287  079A  0834               	movf	??_sprintf,w
  1288  079B  07BB               	addwf	sprintf@sp,f
  1289  079C  2FD3               	goto	l1390
  1290  079D                     l1384:	
  1291                           
  1292                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1515:     c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1293  079D  300A               	movlw	10
  1294  079E  00F8               	movwf	___lwmod@divisor
  1295  079F  3000               	movlw	0
  1296  07A0  00F9               	movwf	___lwmod@divisor+1
  1297  07A1  083C               	movf	sprintf@prec,w
  1298  07A2  00B4               	movwf	??_sprintf
  1299  07A3  0734               	addwf	??_sprintf,w
  1300  07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1301  07A5  0084               	movwf	4
  1302  07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1303  07AB  00F0               	movwf	___lwdiv@divisor
  1304  07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1305  07B1  00F1               	movwf	___lwdiv@divisor+1
  1306  07B2  083A               	movf	sprintf@val+1,w
  1307  07B3  00F3               	movwf	___lwdiv@dividend+1
  1308  07B4  0839               	movf	sprintf@val,w
  1309  07B5  00F2               	movwf	___lwdiv@dividend
  1310  07B6  120A  118A  2581  120A  118A  	fcall	___lwdiv
  1311  07BB  0871               	movf	?___lwdiv+1,w
  1312  07BC  00FB               	movwf	___lwmod@dividend+1
  1313  07BD  0870               	movf	?___lwdiv,w
  1314  07BE  00FA               	movwf	___lwmod@dividend
  1315  07BF  120A  118A  2547  120A  118A  	fcall	___lwmod
  1316  07C4  0878               	movf	?___lwmod,w
  1317  07C5  3E30               	addlw	48
  1318  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1319  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1320  07C8  00B5               	movwf	??_sprintf+1
  1321  07C9  0835               	movf	??_sprintf+1,w
  1322  07CA  00BD               	movwf	sprintf@c
  1323  07CB                     l1386:	
  1324                           
  1325                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1549:    };D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1550:    ((*sp++ = (c)));
  1326  07CB  083D               	movf	sprintf@c,w
  1327  07CC  00B4               	movwf	??_sprintf
  1328  07CD  083B               	movf	sprintf@sp,w
  1329  07CE  0084               	movwf	4
  1330  07CF  0834               	movf	??_sprintf,w
  1331  07D0  1383               	bcf	3,7	;select IRP bank0
  1332  07D1  0080               	movwf	0
  1333  07D2  2F98               	goto	l1382
  1334  07D3                     l1390:	
  1335                           
  1336                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1337  07D3  30FF               	movlw	255
  1338  07D4  00B4               	movwf	??_sprintf
  1339  07D5  0834               	movf	??_sprintf,w
  1340  07D6  07BC               	addwf	sprintf@prec,f
  1341  07D7  0A3C               	incf	sprintf@prec,w
  1342  07D8  1D03               	btfss	3,2
  1343  07D9  2FDB               	goto	u861
  1344  07DA  2FDC               	goto	u860
  1345  07DB                     u861:	
  1346  07DB  2F9D               	goto	l1384
  1347  07DC                     u860:	
  1348  07DC                     l1392:	
  1349                           
  1350                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1351  07DC  3001               	movlw	1
  1352  07DD  07B1               	addwf	sprintf@f,f
  1353  07DE  30FF               	movlw	-1
  1354  07DF  0731               	addwf	sprintf@f,w
  1355  07E0  0084               	movwf	4
  1356  07E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1357  07E6  00B4               	movwf	??_sprintf
  1358  07E7  0834               	movf	??_sprintf,w
  1359  07E8  00BD               	movwf	sprintf@c
  1360  07E9  083D               	movf	sprintf@c,w
  1361  07EA  1D03               	btfss	3,2
  1362  07EB  2FED               	goto	u871
  1363  07EC  2FEE               	goto	u870
  1364  07ED                     u871:	
  1365  07ED  2E98               	goto	l1316
  1366  07EE                     u870:	
  1367  07EE                     l1394:	
  1368                           
  1369                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1370  07EE  083B               	movf	sprintf@sp,w
  1371  07EF  0084               	movwf	4
  1372  07F0  1383               	bcf	3,7	;select IRP bank0
  1373  07F1  0180               	clrf	0
  1374  07F2                     l245:	
  1375  07F2  0008               	return
  1376  07F3                     __end_of_sprintf:	
  1377                           
  1378                           	psect	text2
  1379  03EE                     __ptext2:	
  1380 ;; *************** function _isdigit *****************
  1381 ;; Defined at:
  1382 ;;		line 8 in file "D:\Xc8\pic\sources\c90\common\isdigit.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  c               1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  c               1    1[COMMON] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         2       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0
  1399 ;;      Totals:         2       0       0       0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_sprintf
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _isdigit
  1411  03EE                     _isdigit:	
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1415                           ;isdigit@c stored from wreg
  1416  03EE  00F1               	movwf	isdigit@c
  1417  03EF                     l1232:	
  1418  03EF  01F0               	clrf	_isdigit$663
  1419  03F0                     l1234:	
  1420  03F0  303A               	movlw	58
  1421  03F1  0271               	subwf	isdigit@c,w
  1422  03F2  1803               	skipnc
  1423  03F3  2BF5               	goto	u571
  1424  03F4  2BF6               	goto	u570
  1425  03F5                     u571:	
  1426  03F5  2BFE               	goto	l1240
  1427  03F6                     u570:	
  1428  03F6                     l1236:	
  1429  03F6  3030               	movlw	48
  1430  03F7  0271               	subwf	isdigit@c,w
  1431  03F8  1C03               	skipc
  1432  03F9  2BFB               	goto	u581
  1433  03FA  2BFC               	goto	u580
  1434  03FB                     u581:	
  1435  03FB  2BFE               	goto	l1240
  1436  03FC                     u580:	
  1437  03FC                     l1238:	
  1438  03FC  01F0               	clrf	_isdigit$663
  1439  03FD  0AF0               	incf	_isdigit$663,f
  1440  03FE                     l1240:	
  1441  03FE  0C70               	rrf	_isdigit$663,w
  1442  03FF                     l696:	
  1443  03FF  0008               	return
  1444  0400                     __end_of_isdigit:	
  1445                           
  1446                           	psect	text3
  1447  0547                     __ptext3:	
  1448 ;; *************** function ___lwmod *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwmod.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  divisor         2    8[COMMON] unsigned int 
  1453 ;;  dividend        2   10[COMMON] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  counter         1   13[COMMON] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    8[COMMON] unsigned int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         4       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0
  1467 ;;      Temps:          1       0       0       0       0
  1468 ;;      Totals:         6       0       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_sprintf
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function ___lwmod
  1480  0547                     ___lwmod:	
  1481  0547                     l1284:	
  1482                           ;incstack = 0
  1483                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1484                           
  1485  0547  0878               	movf	___lwmod@divisor,w
  1486  0548  0479               	iorwf	___lwmod@divisor+1,w
  1487  0549  1903               	btfsc	3,2
  1488  054A  2D4C               	goto	u681
  1489  054B  2D4D               	goto	u680
  1490  054C                     u681:	
  1491  054C  2D7C               	goto	l1302
  1492  054D                     u680:	
  1493  054D                     l1286:	
  1494  054D  01FD               	clrf	___lwmod@counter
  1495  054E  0AFD               	incf	___lwmod@counter,f
  1496  054F  2D5B               	goto	l1292
  1497  0550                     l1288:	
  1498  0550  3001               	movlw	1
  1499  0551                     u695:	
  1500  0551  1003               	clrc
  1501  0552  0DF8               	rlf	___lwmod@divisor,f
  1502  0553  0DF9               	rlf	___lwmod@divisor+1,f
  1503  0554  3EFF               	addlw	-1
  1504  0555  1D03               	skipz
  1505  0556  2D51               	goto	u695
  1506  0557                     l1290:	
  1507  0557  3001               	movlw	1
  1508  0558  00FC               	movwf	??___lwmod
  1509  0559  087C               	movf	??___lwmod,w
  1510  055A  07FD               	addwf	___lwmod@counter,f
  1511  055B                     l1292:	
  1512  055B  1FF9               	btfss	___lwmod@divisor+1,7
  1513  055C  2D5E               	goto	u701
  1514  055D  2D5F               	goto	u700
  1515  055E                     u701:	
  1516  055E  2D50               	goto	l1288
  1517  055F                     u700:	
  1518  055F                     l1294:	
  1519  055F  0879               	movf	___lwmod@divisor+1,w
  1520  0560  027B               	subwf	___lwmod@dividend+1,w
  1521  0561  1D03               	skipz
  1522  0562  2D65               	goto	u715
  1523  0563  0878               	movf	___lwmod@divisor,w
  1524  0564  027A               	subwf	___lwmod@dividend,w
  1525  0565                     u715:	
  1526  0565  1C03               	skipc
  1527  0566  2D68               	goto	u711
  1528  0567  2D69               	goto	u710
  1529  0568                     u711:	
  1530  0568  2D6F               	goto	l1298
  1531  0569                     u710:	
  1532  0569                     l1296:	
  1533  0569  0878               	movf	___lwmod@divisor,w
  1534  056A  02FA               	subwf	___lwmod@dividend,f
  1535  056B  0879               	movf	___lwmod@divisor+1,w
  1536  056C  1C03               	skipc
  1537  056D  03FB               	decf	___lwmod@dividend+1,f
  1538  056E  02FB               	subwf	___lwmod@dividend+1,f
  1539  056F                     l1298:	
  1540  056F  3001               	movlw	1
  1541  0570                     u725:	
  1542  0570  1003               	clrc
  1543  0571  0CF9               	rrf	___lwmod@divisor+1,f
  1544  0572  0CF8               	rrf	___lwmod@divisor,f
  1545  0573  3EFF               	addlw	-1
  1546  0574  1D03               	skipz
  1547  0575  2D70               	goto	u725
  1548  0576                     l1300:	
  1549  0576  3001               	movlw	1
  1550  0577  02FD               	subwf	___lwmod@counter,f
  1551  0578  1D03               	btfss	3,2
  1552  0579  2D7B               	goto	u731
  1553  057A  2D7C               	goto	u730
  1554  057B                     u731:	
  1555  057B  2D5F               	goto	l1294
  1556  057C                     u730:	
  1557  057C                     l1302:	
  1558  057C  087B               	movf	___lwmod@dividend+1,w
  1559  057D  00F9               	movwf	?___lwmod+1
  1560  057E  087A               	movf	___lwmod@dividend,w
  1561  057F  00F8               	movwf	?___lwmod
  1562  0580                     l531:	
  1563  0580  0008               	return
  1564  0581                     __end_of___lwmod:	
  1565                           
  1566                           	psect	text4
  1567  0581                     __ptext4:	
  1568 ;; *************** function ___lwdiv *****************
  1569 ;; Defined at:
  1570 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwdiv.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  divisor         2    0[COMMON] unsigned int 
  1573 ;;  dividend        2    2[COMMON] unsigned int 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  quotient        2    5[COMMON] unsigned int 
  1576 ;;  counter         1    7[COMMON] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  2    0[COMMON] unsigned int 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         4       0       0       0       0
  1587 ;;      Locals:         3       0       0       0       0
  1588 ;;      Temps:          1       0       0       0       0
  1589 ;;      Totals:         8       0       0       0       0
  1590 ;;Total ram usage:        8 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_sprintf
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function ___lwdiv
  1601  0581                     ___lwdiv:	
  1602  0581                     l1258:	
  1603                           ;incstack = 0
  1604                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1605                           
  1606  0581  01F5               	clrf	___lwdiv@quotient
  1607  0582  01F6               	clrf	___lwdiv@quotient+1
  1608  0583                     l1260:	
  1609  0583  0870               	movf	___lwdiv@divisor,w
  1610  0584  0471               	iorwf	___lwdiv@divisor+1,w
  1611  0585  1903               	btfsc	3,2
  1612  0586  2D88               	goto	u611
  1613  0587  2D89               	goto	u610
  1614  0588                     u611:	
  1615  0588  2DC0               	goto	l1280
  1616  0589                     u610:	
  1617  0589                     l1262:	
  1618  0589  01F7               	clrf	___lwdiv@counter
  1619  058A  0AF7               	incf	___lwdiv@counter,f
  1620  058B  2D97               	goto	l1268
  1621  058C                     l1264:	
  1622  058C  3001               	movlw	1
  1623  058D                     u625:	
  1624  058D  1003               	clrc
  1625  058E  0DF0               	rlf	___lwdiv@divisor,f
  1626  058F  0DF1               	rlf	___lwdiv@divisor+1,f
  1627  0590  3EFF               	addlw	-1
  1628  0591  1D03               	skipz
  1629  0592  2D8D               	goto	u625
  1630  0593                     l1266:	
  1631  0593  3001               	movlw	1
  1632  0594  00F4               	movwf	??___lwdiv
  1633  0595  0874               	movf	??___lwdiv,w
  1634  0596  07F7               	addwf	___lwdiv@counter,f
  1635  0597                     l1268:	
  1636  0597  1FF1               	btfss	___lwdiv@divisor+1,7
  1637  0598  2D9A               	goto	u631
  1638  0599  2D9B               	goto	u630
  1639  059A                     u631:	
  1640  059A  2D8C               	goto	l1264
  1641  059B                     u630:	
  1642  059B                     l1270:	
  1643  059B  3001               	movlw	1
  1644  059C                     u645:	
  1645  059C  1003               	clrc
  1646  059D  0DF5               	rlf	___lwdiv@quotient,f
  1647  059E  0DF6               	rlf	___lwdiv@quotient+1,f
  1648  059F  3EFF               	addlw	-1
  1649  05A0  1D03               	skipz
  1650  05A1  2D9C               	goto	u645
  1651  05A2  0871               	movf	___lwdiv@divisor+1,w
  1652  05A3  0273               	subwf	___lwdiv@dividend+1,w
  1653  05A4  1D03               	skipz
  1654  05A5  2DA8               	goto	u655
  1655  05A6  0870               	movf	___lwdiv@divisor,w
  1656  05A7  0272               	subwf	___lwdiv@dividend,w
  1657  05A8                     u655:	
  1658  05A8  1C03               	skipc
  1659  05A9  2DAB               	goto	u651
  1660  05AA  2DAC               	goto	u650
  1661  05AB                     u651:	
  1662  05AB  2DB3               	goto	l1276
  1663  05AC                     u650:	
  1664  05AC                     l1272:	
  1665  05AC  0870               	movf	___lwdiv@divisor,w
  1666  05AD  02F2               	subwf	___lwdiv@dividend,f
  1667  05AE  0871               	movf	___lwdiv@divisor+1,w
  1668  05AF  1C03               	skipc
  1669  05B0  03F3               	decf	___lwdiv@dividend+1,f
  1670  05B1  02F3               	subwf	___lwdiv@dividend+1,f
  1671  05B2                     l1274:	
  1672  05B2  1475               	bsf	___lwdiv@quotient,0
  1673  05B3                     l1276:	
  1674  05B3  3001               	movlw	1
  1675  05B4                     u665:	
  1676  05B4  1003               	clrc
  1677  05B5  0CF1               	rrf	___lwdiv@divisor+1,f
  1678  05B6  0CF0               	rrf	___lwdiv@divisor,f
  1679  05B7  3EFF               	addlw	-1
  1680  05B8  1D03               	skipz
  1681  05B9  2DB4               	goto	u665
  1682  05BA                     l1278:	
  1683  05BA  3001               	movlw	1
  1684  05BB  02F7               	subwf	___lwdiv@counter,f
  1685  05BC  1D03               	btfss	3,2
  1686  05BD  2DBF               	goto	u671
  1687  05BE  2DC0               	goto	u670
  1688  05BF                     u671:	
  1689  05BF  2D9B               	goto	l1270
  1690  05C0                     u670:	
  1691  05C0                     l1280:	
  1692  05C0  0876               	movf	___lwdiv@quotient+1,w
  1693  05C1  00F1               	movwf	?___lwdiv+1
  1694  05C2  0875               	movf	___lwdiv@quotient,w
  1695  05C3  00F0               	movwf	?___lwdiv
  1696  05C4                     l521:	
  1697  05C4  0008               	return
  1698  05C5                     __end_of___lwdiv:	
  1699                           
  1700                           	psect	text5
  1701  0400                     __ptext5:	
  1702 ;; *************** function ___bmul *****************
  1703 ;; Defined at:
  1704 ;;		line 4 in file "D:\Xc8\pic\sources\c90\common\Umul8.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  multiplier      1    wreg     unsigned char 
  1707 ;;  multiplicand    1    0[COMMON] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  multiplier      1    3[COMMON] unsigned char 
  1710 ;;  product         1    2[COMMON] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         1       0       0       0       0
  1721 ;;      Locals:         2       0       0       0       0
  1722 ;;      Temps:          1       0       0       0       0
  1723 ;;      Totals:         4       0       0       0       0
  1724 ;;Total ram usage:        4 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_sprintf
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function ___bmul
  1735  0400                     ___bmul:	
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1739                           ;___bmul@multiplier stored from wreg
  1740  0400  00F3               	movwf	___bmul@multiplier
  1741  0401                     l1244:	
  1742  0401  01F2               	clrf	___bmul@product
  1743  0402                     l1246:	
  1744  0402  1C73               	btfss	___bmul@multiplier,0
  1745  0403  2C05               	goto	u591
  1746  0404  2C06               	goto	u590
  1747  0405                     u591:	
  1748  0405  2C0A               	goto	l1250
  1749  0406                     u590:	
  1750  0406                     l1248:	
  1751  0406  0870               	movf	___bmul@multiplicand,w
  1752  0407  00F1               	movwf	??___bmul
  1753  0408  0871               	movf	??___bmul,w
  1754  0409  07F2               	addwf	___bmul@product,f
  1755  040A                     l1250:	
  1756  040A  1003               	clrc
  1757  040B  0DF0               	rlf	___bmul@multiplicand,f
  1758  040C                     l1252:	
  1759  040C  1003               	clrc
  1760  040D  0CF3               	rrf	___bmul@multiplier,f
  1761  040E  0873               	movf	___bmul@multiplier,w
  1762  040F  1D03               	btfss	3,2
  1763  0410  2C12               	goto	u601
  1764  0411  2C13               	goto	u600
  1765  0412                     u601:	
  1766  0412  2C02               	goto	l1246
  1767  0413                     u600:	
  1768  0413                     l1254:	
  1769  0413  0872               	movf	___bmul@product,w
  1770  0414                     l275:	
  1771  0414  0008               	return
  1772  0415                     __end_of___bmul:	
  1773                           
  1774                           	psect	text6
  1775  044D                     __ptext6:	
  1776 ;; *************** function _LCD_DataWrite *****************
  1777 ;; Defined at:
  1778 ;;		line 82 in file "LCD.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  dato            2    2[COMMON] PTR unsigned char 
  1781 ;;		 -> valor(16), STR_2(17), WriteInt_LCD@output1(3), 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         2       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0
  1796 ;;      Totals:         2       0       0       0       0
  1797 ;;Total ram usage:        2 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    1
  1800 ;; This function calls:
  1801 ;;		_DWR_LCD
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;;		_WriteInt_LCD
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _LCD_DataWrite
  1810  044D                     _LCD_DataWrite:	
  1811  044D                     l1306:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _LCD_DataWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1814                           
  1815                           
  1816                           ;LCD.c: 82: void LCD_DataWrite(unsigned char *dato);LCD.c: 83: {;LCD.c: 84:     while(*d
      +                          ato != 0)
  1817  044D  2C62               	goto	l1312
  1818  044E                     l1308:	
  1819                           
  1820                           ;LCD.c: 85:         DWR_LCD(*dato++);
  1821  044E  0873               	movf	LCD_DataWrite@dato+1,w
  1822  044F  00FF               	movwf	btemp+1
  1823  0450  0872               	movf	LCD_DataWrite@dato,w
  1824  0451  0084               	movwf	4
  1825  0452  120A  118A  2003  120A  118A  	fcall	stringtab
  1826  0457  120A  118A  24D8  120A  118A  	fcall	_DWR_LCD
  1827  045C                     l1310:	
  1828  045C  3001               	movlw	1
  1829  045D  07F2               	addwf	LCD_DataWrite@dato,f
  1830  045E  1803               	skipnc
  1831  045F  0AF3               	incf	LCD_DataWrite@dato+1,f
  1832  0460  3000               	movlw	0
  1833  0461  07F3               	addwf	LCD_DataWrite@dato+1,f
  1834  0462                     l1312:	
  1835                           
  1836                           ;LCD.c: 84:     while(*dato != 0)
  1837  0462  0873               	movf	LCD_DataWrite@dato+1,w
  1838  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0465  00FF               	movwf	btemp+1
  1841  0466  0872               	movf	LCD_DataWrite@dato,w
  1842  0467  0084               	movwf	4
  1843  0468  120A  118A  2003  120A  118A  	fcall	stringtab
  1844  046D  3A00               	xorlw	0
  1845  046E  1D03               	skipz
  1846  046F  2C71               	goto	u741
  1847  0470  2C72               	goto	u740
  1848  0471                     u741:	
  1849  0471  2C4E               	goto	l1308
  1850  0472                     u740:	
  1851  0472                     l22:	
  1852  0472  0008               	return
  1853  0473                     __end_of_LCD_DataWrite:	
  1854                           
  1855                           	psect	text7
  1856  04D8                     __ptext7:	
  1857 ;; *************** function _DWR_LCD *****************
  1858 ;; Defined at:
  1859 ;;		line 59 in file "LCD.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  dat             1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  dat             1    1[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0
  1875 ;;      Temps:          1       0       0       0       0
  1876 ;;      Totals:         2       0       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_LCD_DataWrite
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _DWR_LCD
  1888  04D8                     _DWR_LCD:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _DWR_LCD: [wreg+status,2+status,0]
  1892                           ;DWR_LCD@dat stored from wreg
  1893  04D8  00F1               	movwf	DWR_LCD@dat
  1894  04D9                     l1186:	
  1895                           
  1896                           ;LCD.c: 59: void DWR_LCD(unsigned char dat);LCD.c: 60: {;LCD.c: 61:     PORTB = 0xFF;
  1897  04D9  30FF               	movlw	255
  1898  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1899  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1900  04DC  0086               	movwf	6	;volatile
  1901  04DD                     l1188:	
  1902                           
  1903                           ;LCD.c: 62:     PORTB &= 0x80;
  1904  04DD  3080               	movlw	128
  1905  04DE  00F0               	movwf	??_DWR_LCD
  1906  04DF  0870               	movf	??_DWR_LCD,w
  1907  04E0  0586               	andwf	6,f	;volatile
  1908  04E1                     l1190:	
  1909                           
  1910                           ;LCD.c: 63:     PORTDbits.RD5 = 0;
  1911  04E1  1288               	bcf	8,5	;volatile
  1912  04E2                     l1192:	
  1913                           
  1914                           ;LCD.c: 64:     PORTDbits.RD6 = 1;
  1915  04E2  1708               	bsf	8,6	;volatile
  1916  04E3                     l1194:	
  1917                           
  1918                           ;LCD.c: 65:     PORTDbits.RD7 = 0;
  1919  04E3  1388               	bcf	8,7	;volatile
  1920  04E4                     l1196:	
  1921                           
  1922                           ;LCD.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1923  04E4  30C7               	movlw	199
  1924  04E5  00F0               	movwf	??_DWR_LCD
  1925  04E6                     u907:	
  1926  04E6  2CE7               	nop2
  1927  04E7  0BF0               	decfsz	??_DWR_LCD,f
  1928  04E8  2CE6               	goto	u907
  1929  04E9  2CEA               	nop2
  1930  04EA  2CEB               	nop2
  1931  04EB                     l1198:	
  1932                           
  1933                           ;LCD.c: 67:     PORTDbits.RD7 = 1;
  1934  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1935  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1936  04ED  1788               	bsf	8,7	;volatile
  1937                           
  1938                           ;LCD.c: 68:     if(PORTB == 0x80)
  1939  04EE  3080               	movlw	128
  1940  04EF  0606               	xorwf	6,w	;volatile
  1941  04F0  1D03               	btfss	3,2
  1942  04F1  2CF3               	goto	u531
  1943  04F2  2CF4               	goto	u530
  1944  04F3                     u531:	
  1945  04F3  2CFF               	goto	l15
  1946  04F4                     u530:	
  1947  04F4                     l1200:	
  1948                           
  1949                           ;LCD.c: 69:     {;LCD.c: 70:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  1950  04F4  1388               	bcf	8,7	;volatile
  1951  04F5                     l1202:	
  1952  04F5  30C7               	movlw	199
  1953  04F6  00F0               	movwf	??_DWR_LCD
  1954  04F7                     u917:	
  1955  04F7  2CF8               	nop2
  1956  04F8  0BF0               	decfsz	??_DWR_LCD,f
  1957  04F9  2CF7               	goto	u917
  1958  04FA  2CFB               	nop2
  1959  04FB  2CFC               	nop2
  1960  04FC                     l1204:	
  1961  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1962  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1963  04FE  1788               	bsf	8,7	;volatile
  1964  04FF                     l15:	
  1965                           ;LCD.c: 71:     }
  1966                           
  1967                           
  1968                           ;LCD.c: 73:     PORTB = dat;
  1969  04FF  0871               	movf	DWR_LCD@dat,w
  1970  0500  0086               	movwf	6	;volatile
  1971  0501                     l1206:	
  1972                           
  1973                           ;LCD.c: 74:     PORTDbits.RD5 = 1;
  1974  0501  1688               	bsf	8,5	;volatile
  1975  0502                     l1208:	
  1976                           
  1977                           ;LCD.c: 75:     PORTDbits.RD6 = 0;
  1978  0502  1308               	bcf	8,6	;volatile
  1979  0503                     l1210:	
  1980                           
  1981                           ;LCD.c: 77:     PORTDbits.RD7 = 1;
  1982  0503  1788               	bsf	8,7	;volatile
  1983                           
  1984                           ;LCD.c: 78:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1985  0504  30C7               	movlw	199
  1986  0505  00F0               	movwf	??_DWR_LCD
  1987  0506                     u927:	
  1988  0506  2D07               	nop2
  1989  0507  0BF0               	decfsz	??_DWR_LCD,f
  1990  0508  2D06               	goto	u927
  1991  0509  2D0A               	nop2
  1992  050A  2D0B               	nop2
  1993  050B                     l1212:	
  1994                           
  1995                           ;LCD.c: 79:     PORTDbits.RD7 = 0;
  1996  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1997  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1998  050D  1388               	bcf	8,7	;volatile
  1999  050E                     l16:	
  2000  050E  0008               	return
  2001  050F                     __end_of_DWR_LCD:	
  2002                           
  2003                           	psect	text8
  2004  03D7                     __ptext8:	
  2005 ;; *************** function _I2C_Master_Write *****************
  2006 ;; Defined at:
  2007 ;;		line 62 in file "I2C.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  d               2    0[COMMON] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         2       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    1
  2028 ;; This function calls:
  2029 ;;		_I2C_Master_Wait
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _I2C_Master_Write
  2037  03D7                     _I2C_Master_Write:	
  2038  03D7                     l1412:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2041                           
  2042                           
  2043                           ;I2C.c: 62: void I2C_Master_Write(unsigned d);I2C.c: 63: {;I2C.c: 64:     I2C_Master_Wai
      +                          t();
  2044  03D7  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2045  03DC                     l1414:	
  2046                           
  2047                           ;I2C.c: 65:     SSPBUF = d;
  2048  03DC  0870               	movf	I2C_Master_Write@d,w
  2049  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2050  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2051  03DF  0093               	movwf	19	;volatile
  2052  03E0                     l75:	
  2053  03E0  0008               	return
  2054  03E1                     __end_of_I2C_Master_Write:	
  2055                           
  2056                           	psect	text9
  2057  03CE                     __ptext9:	
  2058 ;; *************** function _I2C_Master_Stop *****************
  2059 ;; Defined at:
  2060 ;;		line 52 in file "I2C.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    1
  2081 ;; This function calls:
  2082 ;;		_I2C_Master_Wait
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _I2C_Master_Stop
  2090  03CE                     _I2C_Master_Stop:	
  2091  03CE                     l1408:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2094                           
  2095                           
  2096                           ;I2C.c: 54:     I2C_Master_Wait();
  2097  03CE  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2098  03D3                     l1410:	
  2099                           
  2100                           ;I2C.c: 55:     SSPCON2bits.PEN = 1;
  2101  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2102  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2103  03D5  1511               	bsf	17,2	;volatile
  2104  03D6                     l72:	
  2105  03D6  0008               	return
  2106  03D7                     __end_of_I2C_Master_Stop:	
  2107                           
  2108                           	psect	text10
  2109  03C5                     __ptext10:	
  2110 ;; *************** function _I2C_Master_Start *****************
  2111 ;; Defined at:
  2112 ;;		line 36 in file "I2C.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    1
  2133 ;; This function calls:
  2134 ;;		_I2C_Master_Wait
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _I2C_Master_Start
  2142  03C5                     _I2C_Master_Start:	
  2143  03C5                     l1404:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2146                           
  2147                           
  2148                           ;I2C.c: 38:     I2C_Master_Wait();
  2149  03C5  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2150  03CA                     l1406:	
  2151                           
  2152                           ;I2C.c: 39:     SSPCON2bits.SEN = 1;
  2153  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2154  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2155  03CC  1411               	bsf	17,0	;volatile
  2156  03CD                     l66:	
  2157  03CD  0008               	return
  2158  03CE                     __end_of_I2C_Master_Start:	
  2159                           
  2160                           	psect	text11
  2161  0473                     __ptext11:	
  2162 ;; *************** function _I2C_Master_Read *****************
  2163 ;; Defined at:
  2164 ;;		line 71 in file "I2C.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  a               2    0[COMMON] unsigned short 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  temp            2    4[COMMON] unsigned short 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2    0[COMMON] unsigned short 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         2       0       0       0       0
  2179 ;;      Locals:         2       0       0       0       0
  2180 ;;      Temps:          2       0       0       0       0
  2181 ;;      Totals:         6       0       0       0       0
  2182 ;;Total ram usage:        6 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    1
  2185 ;; This function calls:
  2186 ;;		_I2C_Master_Wait
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _I2C_Master_Read
  2194  0473                     _I2C_Master_Read:	
  2195  0473                     l1416:	
  2196                           ;incstack = 0
  2197                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2198                           
  2199                           
  2200                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:    
      +                           unsigned short temp;;I2C.c: 74:     I2C_Master_Wait();
  2201  0473  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2202  0478                     l1418:	
  2203                           
  2204                           ;I2C.c: 75:     SSPCON2bits.RCEN = 1;
  2205  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2207  047A  1591               	bsf	17,3	;volatile
  2208                           
  2209                           ;I2C.c: 76:     I2C_Master_Wait();
  2210  047B  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2211  0480                     l1420:	
  2212                           
  2213                           ;I2C.c: 77:     temp = SSPBUF;
  2214  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0482  0813               	movf	19,w	;volatile
  2217  0483  00F2               	movwf	??_I2C_Master_Read
  2218  0484  01F3               	clrf	??_I2C_Master_Read+1
  2219  0485  0872               	movf	??_I2C_Master_Read,w
  2220  0486  00F4               	movwf	I2C_Master_Read@temp
  2221  0487  0873               	movf	??_I2C_Master_Read+1,w
  2222  0488  00F5               	movwf	I2C_Master_Read@temp+1
  2223  0489                     l1422:	
  2224                           
  2225                           ;I2C.c: 78:     I2C_Master_Wait();
  2226  0489  120A  118A  23E1  120A  118A  	fcall	_I2C_Master_Wait
  2227  048E                     l1424:	
  2228                           
  2229                           ;I2C.c: 79:     if(a == 1){
  2230  048E  0370               	decf	I2C_Master_Read@a,w
  2231  048F  0471               	iorwf	I2C_Master_Read@a+1,w
  2232  0490  1D03               	btfss	3,2
  2233  0491  2C93               	goto	u881
  2234  0492  2C94               	goto	u880
  2235  0493                     u881:	
  2236  0493  2C98               	goto	l78
  2237  0494                     u880:	
  2238  0494                     l1426:	
  2239                           
  2240                           ;I2C.c: 80:         SSPCON2bits.ACKDT = 0;
  2241  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0496  1291               	bcf	17,5	;volatile
  2244                           
  2245                           ;I2C.c: 81:     }else{
  2246  0497  2C9B               	goto	l79
  2247  0498                     l78:	
  2248                           
  2249                           ;I2C.c: 82:         SSPCON2bits.ACKDT = 1;
  2250  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2252  049A  1691               	bsf	17,5	;volatile
  2253  049B                     l79:	
  2254                           ;I2C.c: 83:     }
  2255                           
  2256                           
  2257                           ;I2C.c: 84:     SSPCON2bits.ACKEN = 1;
  2258  049B  1611               	bsf	17,4	;volatile
  2259  049C                     l1428:	
  2260                           
  2261                           ;I2C.c: 85:     return temp;
  2262  049C  0875               	movf	I2C_Master_Read@temp+1,w
  2263  049D  00F1               	movwf	?_I2C_Master_Read+1
  2264  049E  0874               	movf	I2C_Master_Read@temp,w
  2265  049F  00F0               	movwf	?_I2C_Master_Read
  2266  04A0                     l80:	
  2267  04A0  0008               	return
  2268  04A1                     __end_of_I2C_Master_Read:	
  2269                           
  2270                           	psect	text12
  2271  03E1                     __ptext12:	
  2272 ;; *************** function _I2C_Master_Wait *****************
  2273 ;; Defined at:
  2274 ;;		line 29 in file "I2C.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_I2C_Master_Start
  2298 ;;		_I2C_Master_Stop
  2299 ;;		_I2C_Master_Write
  2300 ;;		_I2C_Master_Read
  2301 ;;		_I2C_Master_RepeatedStart
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _I2C_Master_Wait
  2307  03E1                     _I2C_Master_Wait:	
  2308  03E1                     l1228:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2311                           
  2312  03E1                     l60:	
  2313                           ;I2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2314                           
  2315  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2316  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2317  03E3  1914               	btfsc	20,2	;volatile
  2318  03E4  2BE6               	goto	u551
  2319  03E5  2BE7               	goto	u550
  2320  03E6                     u551:	
  2321  03E6  2BE1               	goto	l60
  2322  03E7                     u550:	
  2323  03E7                     l1230:	
  2324  03E7  0811               	movf	17,w	;volatile
  2325  03E8  391F               	andlw	31
  2326  03E9  1D03               	btfss	3,2
  2327  03EA  2BEC               	goto	u561
  2328  03EB  2BED               	goto	u560
  2329  03EC                     u561:	
  2330  03EC  2BE1               	goto	l60
  2331  03ED                     u560:	
  2332  03ED                     l63:	
  2333  03ED  0008               	return
  2334  03EE                     __end_of_I2C_Master_Wait:	
  2335                           
  2336                           	psect	text13
  2337  0415                     __ptext13:	
  2338 ;; *************** function _Configuracion *****************
  2339 ;; Defined at:
  2340 ;;		line 55 in file "I2C_Master.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0, pclath, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    2
  2361 ;; This function calls:
  2362 ;;		_I2C_Master_Init
  2363 ;;		_init_LCD
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _Configuracion
  2371  0415                     _Configuracion:	
  2372  0415                     l1432:	
  2373                           ;incstack = 0
  2374                           ; Regs used in _Configuracion: [wreg+status,2+status,0+pclath+cstack]
  2375                           
  2376                           
  2377                           ;I2C_Master.c: 56:     TRISB = 0;
  2378  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0417  0186               	clrf	6	;volatile
  2381                           
  2382                           ;I2C_Master.c: 57:     TRISD = 0;
  2383  0418  0188               	clrf	8	;volatile
  2384  0419                     l1434:	
  2385                           
  2386                           ;I2C_Master.c: 58:     I2C_Master_Init(100000);
  2387  0419  3000               	movlw	0
  2388  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2389  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2390  041C  00B4               	movwf	I2C_Master_Init@c+3
  2391  041D  3001               	movlw	1
  2392  041E  00B3               	movwf	I2C_Master_Init@c+2
  2393  041F  3086               	movlw	134
  2394  0420  00B2               	movwf	I2C_Master_Init@c+1
  2395  0421  30A0               	movlw	160
  2396  0422  00B1               	movwf	I2C_Master_Init@c
  2397  0423  120A  118A  250F  120A  118A  	fcall	_I2C_Master_Init
  2398  0428                     l1436:	
  2399                           
  2400                           ;I2C_Master.c: 59:     init_LCD();
  2401  0428  120A  118A  242E  120A  118A  	fcall	_init_LCD
  2402  042D                     l124:	
  2403  042D  0008               	return
  2404  042E                     __end_of_Configuracion:	
  2405                           
  2406                           	psect	text14
  2407  042E                     __ptext14:	
  2408 ;; *************** function _init_LCD *****************
  2409 ;; Defined at:
  2410 ;;		line 95 in file "LCD.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    1
  2431 ;; This function calls:
  2432 ;;		_LCD_CmdWrite
  2433 ;; This function is called by:
  2434 ;;		_Configuracion
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function _init_LCD
  2440  042E                     _init_LCD:	
  2441  042E                     l1214:	
  2442                           ;incstack = 0
  2443                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2444                           
  2445                           
  2446                           ;LCD.c: 97:     LCD_CmdWrite(0x38);
  2447  042E  3038               	movlw	56
  2448  042F  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
  2449                           
  2450                           ;LCD.c: 98:     LCD_CmdWrite(0x0E);
  2451  0434  300E               	movlw	14
  2452  0435  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
  2453                           
  2454                           ;LCD.c: 99:     LCD_CmdWrite(0x01);
  2455  043A  3001               	movlw	1
  2456  043B  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
  2457                           
  2458                           ;LCD.c: 100:     LCD_CmdWrite(0x06);
  2459  0440  3006               	movlw	6
  2460  0441  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
  2461                           
  2462                           ;LCD.c: 101:     LCD_CmdWrite(0x80);
  2463  0446  3080               	movlw	128
  2464  0447  120A  118A  24A1  120A  118A  	fcall	_LCD_CmdWrite
  2465  044C                     l28:	
  2466  044C  0008               	return
  2467  044D                     __end_of_init_LCD:	
  2468                           
  2469                           	psect	text15
  2470  04A1                     __ptext15:	
  2471 ;; *************** function _LCD_CmdWrite *****************
  2472 ;; Defined at:
  2473 ;;		line 36 in file "LCD.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  cmd             1    wreg     unsigned char 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  cmd             1    1[COMMON] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         1       0       0       0       0
  2489 ;;      Temps:          1       0       0       0       0
  2490 ;;      Totals:         2       0       0       0       0
  2491 ;;Total ram usage:        2 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_init_LCD
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _LCD_CmdWrite
  2503  04A1                     _LCD_CmdWrite:	
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0]
  2507                           ;LCD_CmdWrite@cmd stored from wreg
  2508  04A1  00F1               	movwf	LCD_CmdWrite@cmd
  2509  04A2                     l1134:	
  2510                           
  2511                           ;LCD.c: 36: void LCD_CmdWrite(unsigned char cmd);LCD.c: 37: {;LCD.c: 38:     PORTB = 0xF
      +                          F;
  2512  04A2  30FF               	movlw	255
  2513  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2514  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2515  04A5  0086               	movwf	6	;volatile
  2516  04A6                     l1136:	
  2517                           
  2518                           ;LCD.c: 39:     PORTB &= 0x80;
  2519  04A6  3080               	movlw	128
  2520  04A7  00F0               	movwf	??_LCD_CmdWrite
  2521  04A8  0870               	movf	??_LCD_CmdWrite,w
  2522  04A9  0586               	andwf	6,f	;volatile
  2523  04AA                     l1138:	
  2524                           
  2525                           ;LCD.c: 40:     PORTDbits.RD5 = 0;
  2526  04AA  1288               	bcf	8,5	;volatile
  2527  04AB                     l1140:	
  2528                           
  2529                           ;LCD.c: 41:     PORTDbits.RD6 = 1;
  2530  04AB  1708               	bsf	8,6	;volatile
  2531  04AC                     l1142:	
  2532                           
  2533                           ;LCD.c: 42:     PORTDbits.RD7 = 0;
  2534  04AC  1388               	bcf	8,7	;volatile
  2535  04AD                     l1144:	
  2536                           
  2537                           ;LCD.c: 43:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2538  04AD  30C7               	movlw	199
  2539  04AE  00F0               	movwf	??_LCD_CmdWrite
  2540  04AF                     u937:	
  2541  04AF  2CB0               	nop2
  2542  04B0  0BF0               	decfsz	??_LCD_CmdWrite,f
  2543  04B1  2CAF               	goto	u937
  2544  04B2  2CB3               	nop2
  2545  04B3  2CB4               	nop2
  2546  04B4                     l1146:	
  2547                           
  2548                           ;LCD.c: 44:     PORTDbits.RD7 = 1;
  2549  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2550  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2551  04B6  1788               	bsf	8,7	;volatile
  2552                           
  2553                           ;LCD.c: 45:     if(PORTB == 0x80)
  2554  04B7  3080               	movlw	128
  2555  04B8  0606               	xorwf	6,w	;volatile
  2556  04B9  1D03               	btfss	3,2
  2557  04BA  2CBC               	goto	u451
  2558  04BB  2CBD               	goto	u450
  2559  04BC                     u451:	
  2560  04BC  2CC8               	goto	l11
  2561  04BD                     u450:	
  2562  04BD                     l1148:	
  2563                           
  2564                           ;LCD.c: 46:     {;LCD.c: 47:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  2565  04BD  1388               	bcf	8,7	;volatile
  2566  04BE                     l1150:	
  2567  04BE  30C7               	movlw	199
  2568  04BF  00F0               	movwf	??_LCD_CmdWrite
  2569  04C0                     u947:	
  2570  04C0  2CC1               	nop2
  2571  04C1  0BF0               	decfsz	??_LCD_CmdWrite,f
  2572  04C2  2CC0               	goto	u947
  2573  04C3  2CC4               	nop2
  2574  04C4  2CC5               	nop2
  2575  04C5                     l1152:	
  2576  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2577  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2578  04C7  1788               	bsf	8,7	;volatile
  2579  04C8                     l11:	
  2580                           ;LCD.c: 48:     }
  2581                           
  2582                           
  2583                           ;LCD.c: 50:     PORTB = cmd;
  2584  04C8  0871               	movf	LCD_CmdWrite@cmd,w
  2585  04C9  0086               	movwf	6	;volatile
  2586  04CA                     l1154:	
  2587                           
  2588                           ;LCD.c: 51:     PORTDbits.RD5 = 0;
  2589  04CA  1288               	bcf	8,5	;volatile
  2590  04CB                     l1156:	
  2591                           
  2592                           ;LCD.c: 52:     PORTDbits.RD6 = 0;
  2593  04CB  1308               	bcf	8,6	;volatile
  2594  04CC                     l1158:	
  2595                           
  2596                           ;LCD.c: 54:     PORTDbits.RD7 = 1;
  2597  04CC  1788               	bsf	8,7	;volatile
  2598                           
  2599                           ;LCD.c: 55:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2600  04CD  30C7               	movlw	199
  2601  04CE  00F0               	movwf	??_LCD_CmdWrite
  2602  04CF                     u957:	
  2603  04CF  2CD0               	nop2
  2604  04D0  0BF0               	decfsz	??_LCD_CmdWrite,f
  2605  04D1  2CCF               	goto	u957
  2606  04D2  2CD3               	nop2
  2607  04D3  2CD4               	nop2
  2608  04D4                     l1160:	
  2609                           
  2610                           ;LCD.c: 56:     PORTDbits.RD7 = 0;
  2611  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2612  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2613  04D6  1388               	bcf	8,7	;volatile
  2614  04D7                     l12:	
  2615  04D7  0008               	return
  2616  04D8                     __end_of_LCD_CmdWrite:	
  2617                           
  2618                           	psect	text16
  2619  050F                     __ptext16:	
  2620 ;; *************** function _I2C_Master_Init *****************
  2621 ;; Defined at:
  2622 ;;		line 13 in file "I2C.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  c               4    0[BANK0 ] const unsigned long 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       4       0       0       0
  2637 ;;      Locals:         0       0       0       0       0
  2638 ;;      Temps:          0       4       0       0       0
  2639 ;;      Totals:         0       8       0       0       0
  2640 ;;Total ram usage:        8 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    1
  2643 ;; This function calls:
  2644 ;;		___lldiv
  2645 ;; This function is called by:
  2646 ;;		_Configuracion
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _I2C_Master_Init
  2652  050F                     _I2C_Master_Init:	
  2653  050F                     l1216:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2656                           
  2657                           
  2658                           ;I2C.c: 13: void I2C_Master_Init(const unsigned long c);I2C.c: 14: {;I2C.c: 15:     SSPC
      +                          ON = 0b00101000;
  2659  050F  3028               	movlw	40
  2660  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0512  0094               	movwf	20	;volatile
  2663  0513                     l1218:	
  2664                           
  2665                           ;I2C.c: 16:     SSPCON2 = 0;
  2666  0513  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0514  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0515  0191               	clrf	17	;volatile
  2669  0516                     l1220:	
  2670                           
  2671                           ;I2C.c: 17:     SSPADD = (4000000/(4*c))-1;
  2672  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0518  0831               	movf	I2C_Master_Init@c,w
  2675  0519  00B5               	movwf	??_I2C_Master_Init
  2676  051A  0832               	movf	I2C_Master_Init@c+1,w
  2677  051B  00B6               	movwf	??_I2C_Master_Init+1
  2678  051C  0833               	movf	I2C_Master_Init@c+2,w
  2679  051D  00B7               	movwf	??_I2C_Master_Init+2
  2680  051E  0834               	movf	I2C_Master_Init@c+3,w
  2681  051F  00B8               	movwf	??_I2C_Master_Init+3
  2682  0520  3002               	movlw	2
  2683  0521                     u545:	
  2684  0521  1003               	clrc
  2685  0522  0DB5               	rlf	??_I2C_Master_Init,f
  2686  0523  0DB6               	rlf	??_I2C_Master_Init+1,f
  2687  0524  0DB7               	rlf	??_I2C_Master_Init+2,f
  2688  0525  0DB8               	rlf	??_I2C_Master_Init+3,f
  2689  0526                     u540:	
  2690  0526  3EFF               	addlw	-1
  2691  0527  1D03               	skipz
  2692  0528  2D21               	goto	u545
  2693  0529  0838               	movf	??_I2C_Master_Init+3,w
  2694  052A  00F3               	movwf	___lldiv@divisor+3
  2695  052B  0837               	movf	??_I2C_Master_Init+2,w
  2696  052C  00F2               	movwf	___lldiv@divisor+2
  2697  052D  0836               	movf	??_I2C_Master_Init+1,w
  2698  052E  00F1               	movwf	___lldiv@divisor+1
  2699  052F  0835               	movf	??_I2C_Master_Init,w
  2700  0530  00F0               	movwf	___lldiv@divisor
  2701  0531  3000               	movlw	0
  2702  0532  00F7               	movwf	___lldiv@dividend+3
  2703  0533  303D               	movlw	61
  2704  0534  00F6               	movwf	___lldiv@dividend+2
  2705  0535  3009               	movlw	9
  2706  0536  00F5               	movwf	___lldiv@dividend+1
  2707  0537  3000               	movlw	0
  2708  0538  00F4               	movwf	___lldiv@dividend
  2709  0539  120A  118A  262A  120A  118A  	fcall	___lldiv
  2710  053E  0870               	movf	?___lldiv,w
  2711  053F  3EFF               	addlw	255
  2712  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0542  0093               	movwf	19	;volatile
  2715  0543                     l1222:	
  2716                           
  2717                           ;I2C.c: 18:     SSPSTAT = 0;
  2718  0543  0194               	clrf	20	;volatile
  2719  0544                     l1224:	
  2720                           
  2721                           ;I2C.c: 19:     TRISCbits.TRISC3 = 1;
  2722  0544  1587               	bsf	7,3	;volatile
  2723  0545                     l1226:	
  2724                           
  2725                           ;I2C.c: 20:     TRISCbits.TRISC4 = 1;
  2726  0545  1607               	bsf	7,4	;volatile
  2727  0546                     l57:	
  2728  0546  0008               	return
  2729  0547                     __end_of_I2C_Master_Init:	
  2730                           
  2731                           	psect	text17
  2732  062A                     __ptext17:	
  2733 ;; *************** function ___lldiv *****************
  2734 ;; Defined at:
  2735 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\__lldiv.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  divisor         4    0[COMMON] unsigned long 
  2738 ;;  dividend        4    4[COMMON] unsigned long 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  quotient        4    9[COMMON] unsigned long 
  2741 ;;  counter         1   13[COMMON] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  4    0[COMMON] unsigned long 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         8       0       0       0       0
  2752 ;;      Locals:         5       0       0       0       0
  2753 ;;      Temps:          1       0       0       0       0
  2754 ;;      Totals:        14       0       0       0       0
  2755 ;;Total ram usage:       14 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_I2C_Master_Init
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function ___lldiv
  2766  062A                     ___lldiv:	
  2767  062A                     l1162:	
  2768                           ;incstack = 0
  2769                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2770                           
  2771  062A  3000               	movlw	0
  2772  062B  00FC               	movwf	___lldiv@quotient+3
  2773  062C  3000               	movlw	0
  2774  062D  00FB               	movwf	___lldiv@quotient+2
  2775  062E  3000               	movlw	0
  2776  062F  00FA               	movwf	___lldiv@quotient+1
  2777  0630  3000               	movlw	0
  2778  0631  00F9               	movwf	___lldiv@quotient
  2779  0632  0873               	movf	___lldiv@divisor+3,w
  2780  0633  0472               	iorwf	___lldiv@divisor+2,w
  2781  0634  0471               	iorwf	___lldiv@divisor+1,w
  2782  0635  0470               	iorwf	___lldiv@divisor,w
  2783  0636  1903               	skipnz
  2784  0637  2E39               	goto	u461
  2785  0638  2E3A               	goto	u460
  2786  0639                     u461:	
  2787  0639  2E87               	goto	l1182
  2788  063A                     u460:	
  2789  063A                     l1164:	
  2790  063A  01FD               	clrf	___lldiv@counter
  2791  063B  0AFD               	incf	___lldiv@counter,f
  2792  063C  2E4A               	goto	l1168
  2793  063D                     l1166:	
  2794  063D  3001               	movlw	1
  2795  063E  00F8               	movwf	??___lldiv
  2796  063F                     u475:	
  2797  063F  1003               	clrc
  2798  0640  0DF0               	rlf	___lldiv@divisor,f
  2799  0641  0DF1               	rlf	___lldiv@divisor+1,f
  2800  0642  0DF2               	rlf	___lldiv@divisor+2,f
  2801  0643  0DF3               	rlf	___lldiv@divisor+3,f
  2802  0644  0BF8               	decfsz	??___lldiv,f
  2803  0645  2E3F               	goto	u475
  2804  0646  3001               	movlw	1
  2805  0647  00F8               	movwf	??___lldiv
  2806  0648  0878               	movf	??___lldiv,w
  2807  0649  07FD               	addwf	___lldiv@counter,f
  2808  064A                     l1168:	
  2809  064A  1FF3               	btfss	___lldiv@divisor+3,7
  2810  064B  2E4D               	goto	u481
  2811  064C  2E4E               	goto	u480
  2812  064D                     u481:	
  2813  064D  2E3D               	goto	l1166
  2814  064E                     u480:	
  2815  064E                     l1170:	
  2816  064E  3001               	movlw	1
  2817  064F  00F8               	movwf	??___lldiv
  2818  0650                     u495:	
  2819  0650  1003               	clrc
  2820  0651  0DF9               	rlf	___lldiv@quotient,f
  2821  0652  0DFA               	rlf	___lldiv@quotient+1,f
  2822  0653  0DFB               	rlf	___lldiv@quotient+2,f
  2823  0654  0DFC               	rlf	___lldiv@quotient+3,f
  2824  0655  0BF8               	decfsz	??___lldiv,f
  2825  0656  2E50               	goto	u495
  2826  0657                     l1172:	
  2827  0657  0873               	movf	___lldiv@divisor+3,w
  2828  0658  0277               	subwf	___lldiv@dividend+3,w
  2829  0659  1D03               	skipz
  2830  065A  2E65               	goto	u505
  2831  065B  0872               	movf	___lldiv@divisor+2,w
  2832  065C  0276               	subwf	___lldiv@dividend+2,w
  2833  065D  1D03               	skipz
  2834  065E  2E65               	goto	u505
  2835  065F  0871               	movf	___lldiv@divisor+1,w
  2836  0660  0275               	subwf	___lldiv@dividend+1,w
  2837  0661  1D03               	skipz
  2838  0662  2E65               	goto	u505
  2839  0663  0870               	movf	___lldiv@divisor,w
  2840  0664  0274               	subwf	___lldiv@dividend,w
  2841  0665                     u505:	
  2842  0665  1C03               	skipc
  2843  0666  2E68               	goto	u501
  2844  0667  2E69               	goto	u500
  2845  0668                     u501:	
  2846  0668  2E78               	goto	l1178
  2847  0669                     u500:	
  2848  0669                     l1174:	
  2849  0669  0870               	movf	___lldiv@divisor,w
  2850  066A  02F4               	subwf	___lldiv@dividend,f
  2851  066B  0871               	movf	___lldiv@divisor+1,w
  2852  066C  1C03               	skipc
  2853  066D  0F71               	incfsz	___lldiv@divisor+1,w
  2854  066E  02F5               	subwf	___lldiv@dividend+1,f
  2855  066F  0872               	movf	___lldiv@divisor+2,w
  2856  0670  1C03               	skipc
  2857  0671  0F72               	incfsz	___lldiv@divisor+2,w
  2858  0672  02F6               	subwf	___lldiv@dividend+2,f
  2859  0673  0873               	movf	___lldiv@divisor+3,w
  2860  0674  1C03               	skipc
  2861  0675  0F73               	incfsz	___lldiv@divisor+3,w
  2862  0676  02F7               	subwf	___lldiv@dividend+3,f
  2863  0677                     l1176:	
  2864  0677  1479               	bsf	___lldiv@quotient,0
  2865  0678                     l1178:	
  2866  0678  3001               	movlw	1
  2867  0679                     u515:	
  2868  0679  1003               	clrc
  2869  067A  0CF3               	rrf	___lldiv@divisor+3,f
  2870  067B  0CF2               	rrf	___lldiv@divisor+2,f
  2871  067C  0CF1               	rrf	___lldiv@divisor+1,f
  2872  067D  0CF0               	rrf	___lldiv@divisor,f
  2873  067E  3EFF               	addlw	-1
  2874  067F  1D03               	skipz
  2875  0680  2E79               	goto	u515
  2876  0681                     l1180:	
  2877  0681  3001               	movlw	1
  2878  0682  02FD               	subwf	___lldiv@counter,f
  2879  0683  1D03               	btfss	3,2
  2880  0684  2E86               	goto	u521
  2881  0685  2E87               	goto	u520
  2882  0686                     u521:	
  2883  0686  2E4E               	goto	l1170
  2884  0687                     u520:	
  2885  0687                     l1182:	
  2886  0687  087C               	movf	___lldiv@quotient+3,w
  2887  0688  00F3               	movwf	?___lldiv+3
  2888  0689  087B               	movf	___lldiv@quotient+2,w
  2889  068A  00F2               	movwf	?___lldiv+2
  2890  068B  087A               	movf	___lldiv@quotient+1,w
  2891  068C  00F1               	movwf	?___lldiv+1
  2892  068D  0879               	movf	___lldiv@quotient,w
  2893  068E  00F0               	movwf	?___lldiv
  2894  068F                     l285:	
  2895  068F  0008               	return
  2896  0690                     __end_of___lldiv:	
  2897  007E                     btemp	set	126	;btemp
  2898  007E                     wtemp0	set	126


Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), WriteInt_LCD@output1(COMMON[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_DataWrite@dato	PTR unsigned char  size(2) Largest target is 17
		 -> valor(BANK0[16]), STR_2(CODE[17]), WriteInt_LCD@output1(COMMON[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_DataWrite->_DWR_LCD
    _init_LCD->_LCD_CmdWrite
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _Configuracion->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2776
                                             13 BANK0      3     3      0
                      _Configuracion
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                       _LCD_CmdWrite
                      _LCD_DataWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1806
                                              0 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD_DataWrite                                        2     0      2     295
                                              2 COMMON     2     0      2
                            _DWR_LCD
 ---------------------------------------------------------------------------------
 (2) _DWR_LCD                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     434
                    _I2C_Master_Init
                           _init_LCD
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             0     0      0      22
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_CmdWrite                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _I2C_Master_Init
       ___lldiv
     _init_LCD
       _LCD_CmdWrite
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD_CmdWrite
   _LCD_DataWrite
     _DWR_LCD
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      21       5       41.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 20:45:55 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
            ?_LCD_CmdWrite 0070                         l11 04C8                         l12 04D7  
                       l22 0472                         l15 04FF                         l16 050E  
                       l28 044C                         l60 03E1                         l63 03ED  
                       l80 04A0                         l72 03D6                         l57 0546  
                       l66 03CD                         l75 03E0                         l78 0498  
                       l79 049B                         fsr 0004             ?_LCD_DataWrite 0072  
                      l124 042D                        l245 07F2                        l521 05C4  
                      l275 0414                        l531 0580                        l285 068F  
                      l696 03FF                        _GIE 005F                        u500 0669  
                      u501 0668                        u520 0687                        u600 0413  
                      u521 0686                        u505 0665                        u601 0412  
                      u450 04BD                        u530 04F4                        u610 0589  
             __CFG_CPD$OFF 0000                        u515 0679                        u451 04BC  
                      u531 04F3                        u611 0588                        u460 063A  
                      u540 0526                        u700 055F                        u461 0639  
                      u701 055E                        u550 03E7                        u630 059B  
                      u710 0569                        u551 03E6                        u631 059A  
                      u711 0568                        u480 064E                        u560 03ED  
                      u800 0732                        u481 064D                        u545 0521  
                      u561 03EC                        u625 058D                        u801 0731  
                      u650 05AC                        u730 057C                        u570 03F6  
                      u810 0753                        u475 063F                        u651 05AB  
                      u731 057B                        u715 0565                        u571 03F5  
                      u811 0752                        u740 0472                        u580 03FC  
                      u820 075E                        u741 0471                        u645 059C  
                      u725 0570                        u581 03FB                        u821 075D  
                      u590 0406                        u670 05C0                        u830 076E  
                      u750 069E                        u495 0650                        u591 0405  
                      u671 05BF                        u655 05A8                        u831 076D  
                      u815 074F                        u751 069D                        u680 054D  
                      u840 0783                        u760 06B7                        u665 05B4  
                      u681 054C                        u841 0782                        u761 06B6  
                      u850 0791                        u770 06ED                        u907 04E6  
                      u851 0790                        u835 076A                        u771 06EC  
                      u860 07DC                        u780 071E                        u917 04F7  
                      u861 07DB                        u845 077F                        u781 071D  
                      u870 07EE                        u790 072C                        u927 0506  
                      u695 0551                        u871 07ED                        u791 072B  
                      u880 0494                        u937 04AF                        u881 0493  
                      u947 04C0                        u957 04CF                        u897 0600  
                      _val 0020                        fsr0 0004                        indf 0000  
             __CFG_LVP$OFF 0000                       l1200 04F4                       l1210 0503  
                     l1202 04F5                       l1220 0516                       l1140 04AB  
                     l1212 050B                       l1204 04FC                       l1300 0576  
                     l1222 0543                       l1150 04BE                       l1142 04AC  
                     l1134 04A2                       l1214 042E                       l1230 03E7  
                     l1206 0501                       l1310 045C                       l1302 057C  
                     l1224 0544                       l1216 050F                       l1160 04D4  
                     l1152 04C5                       l1144 04AD                       l1136 04A6  
                     l1208 0502                       l1312 0462                       l1240 03FE  
                     l1232 03EF                       l1320 06A5                       l1170 064E  
                     l1162 062A                       l1226 0545                       l1218 0513  
                     l1154 04CA                       l1146 04B4                       l1138 04AA  
                     l1410 03D3                       l1306 044D                       l1250 040A  
                     l1234 03F0                       l1330 06BD                       l1322 06AA  
                     l1314 0693                       l1180 0681                       l1172 0657  
                     l1164 063A                       l1156 04CB                       l1148 04BD  
                     l1228 03E1                       l1420 0480                       l1404 03C5  
                     l1412 03D7                       l1308 044E                       l1252 040C  
                     l1244 0401                       l1260 0583                       l1236 03F6  
                     l1332 06CE                       l1324 06AB                       l1316 0698  
                     l1174 0669                       l1166 063D                       l1182 0687  
                     l1158 04CC                       l1422 0489                       l1406 03CA  
                     l1414 03DC                       l1190 04E1                       l1254 0413  
                     l1246 0402                       l1270 059B                       l1262 0589  
                     l1238 03FC                       l1350 071E                       l1342 06EF  
                     l1334 06D9                       l1326 06B7                       l1318 069E  
                     l1176 0677                       l1168 064A                       l1432 0415  
                     l1424 048E                       l1416 0473                       l1408 03CE  
                     l1192 04E2                       l1248 0406                       l1272 05AC  
                     l1264 058C                       l1280 05C0                       l1360 0736  
                     l1352 0722                       l1344 070E                       l1336 06DD  
                     l1328 06BB                       l1178 0678                       l1434 0419  
                     l1426 0494                       l1418 0478                       l1194 04E3  
                     l1186 04D9                       l1274 05B2                       l1266 0593  
                     l1258 0581                       l1290 0557                       l1370 075E  
                     l1354 0727                       l1346 0716                       l1338 06EE  
                     l1450 05DE                       l1436 0428                       l1428 049C  
                     l1196 04E4                       l1188 04DD                       l1276 05B3  
                     l1268 0597                       l1292 055B                       l1284 0547  
                     l1380 0791                       l1372 076E                       l1364 0738  
                     l1356 072C                       l1348 071A                       l1460 060A  
                     l1452 05E7                       l1444 05C5                       l1198 04EB  
                     l1278 05BA                       l1294 055F                       l1286 054D  
                     l1382 0798                       l1390 07D3                       l1374 076F  
                     l1358 0732                       l1462 061D                       l1454 05F5  
                     l1446 05D0                       l1296 0569                       l1288 0550  
                     l1384 079D                       l1376 0783                       l1368 0754  
                     l1392 07DC                       l1456 05FA                       l1448 05D9  
                     l1298 056F                       l1386 07CB                       l1378 0789  
                     l1394 07EE                       l1458 0604                       l1494 0703  
          __end_of_DWR_LCD 050F                       STR_1 0033                       STR_2 001D  
                     STR_3 002E                       _PEIE 005E               __CFG_WRT$OFF 0000  
                     _main 05C5                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000          ___bmul@multiplier 0073             ??_LCD_CmdWrite 0070  
         ?_I2C_Master_Init 0031           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070              __CFG_WDTE$OFF 0000  
          __end_of___lldiv 0690            __end_of___lwdiv 05C5            __end_of___lwmod 0581  
                    _PORTB 0006                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
          __end_of_dpowers 001D            __end_of_isdigit 0400                      _valor 0021  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F3             __CFG_MCLRE$OFF 0000  
          __initialization 07F3               __end_of_main 062A            ??_LCD_DataWrite 0074  
                   ??_main 003E          ?_I2C_Master_Start 0070                  ??_DWR_LCD 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                   ___bmul 0400                  ??___lldiv 0078                  ??___lwdiv 0074  
         __end_of_init_LCD 044D                  ??___lwmod 007C                  ??_isdigit 0070  
                ??_sprintf 0034       __end_of_LCD_CmdWrite 04D8    __end_of__initialization 07FC  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070                 __pbssBANK0 0020  
    __end_of_Configuracion 042E                 __pmaintext 05C5                    ?___bmul 0070  
                  _DWR_LCD 04D8                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003                  ?_init_LCD 0070            __size_of___bmul 0015  
                  ___lldiv 062A                    ___lwdiv 0581                    ___lwmod 0547  
                  __ptext1 0690                    __ptext2 03EE                    __ptext3 0547  
                  __ptext4 0581                    __ptext5 0400                    __ptext6 044D  
                  __ptext7 04D8                    __ptext8 03D7                    __ptext9 03CE  
                  _dpowers 0013                    _isdigit 03EE      __size_of_LCD_CmdWrite 0037  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0690                    clrloop0 03BE  
     end_of_initialization 07FC                 ??_init_LCD 0072  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0031           I2C_Master_Read@a 0070               _LCD_CmdWrite 04A1  
    __end_of_LCD_DataWrite 0473                  _PORTDbits 0008                  _TRISCbits 0087  
           __end_of___bmul 0415        start_initialization 07F3          ??_I2C_Master_Init 0035  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
               DWR_LCD@dat 0071   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??___bmul 0071  
                 ?_DWR_LCD 0070                  ___latbits 0002              __pcstackBANK0 0031  
              sprintf@flag 0038                sprintf@prec 003C          __size_of_init_LCD 001F  
         _I2C_Master_Start 03C5           _I2C_Master_Write 03D7           ___lwdiv@dividend 0072  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0003     __size_of_Configuracion 0019                   ?_isdigit 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 0031                  clear_ram0 03BD  
          LCD_CmdWrite@cmd 0071                __stringbase 0012           __size_of_DWR_LCD 0037  
      I2C_Master_Read@temp 0074              _Configuracion 0415           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
              _isdigit$663 0070                 sprintf@val 0039            _I2C_Master_Init 050F  
        LCD_DataWrite@dato 0072            _I2C_Master_Read 0473            _I2C_Master_Wait 03E1  
          _I2C_Master_Stop 03CE           __size_of_isdigit 0012            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 03C5                   __ptext11 0473  
                 __ptext12 03E1                   __ptext13 0415                   __ptext14 042E  
                 __ptext15 04A1                   __ptext16 050F                   __ptext17 062A  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 0163             ?_Configuracion 0070  
                 _init_LCD 042E              __size_of_main 0065     __size_of_LCD_DataWrite 0026  
 __end_of_I2C_Master_Start 03CE   __end_of_I2C_Master_Write 03E1                   isdigit@c 0071  
                sprintf@ap 0037                  sprintf@sp 003B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D    __end_of_I2C_Master_Init 0547  
  __end_of_I2C_Master_Read 04A1    __end_of_I2C_Master_Wait 03EE    __end_of_I2C_Master_Stop 03D7  
            _LCD_DataWrite 044D                   sprintf@c 003D                   sprintf@f 0031  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091            ??_Configuracion 007E  
