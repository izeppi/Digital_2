

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 22:33:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0003                     __pstrings:	
   381  0003                     stringtab:	
   382  0003                     __stringtab:	
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385  0003  1BFF               	btfsc	btemp+1,7
   386  0004  280D               	ljmp	stringcode
   387  0005  1383               	bcf	3,7
   388  0006  187F               	btfsc	btemp+1,0
   389  0007  1783               	bsf	3,7
   390  0008  0800               	movf	0,w
   391  0009  0A84               	incf	4,f
   392  000A  1903               	skipnz
   393  000B  0AFF               	incf	btemp+1,f
   394  000C  0008               	return
   395  000D                     stringcode:	
   396  000D                     stringdir:	
   397  000D  3000               	movlw	high stringdir
   398  000E  008A               	movwf	10
   399  000F  0804               	movf	4,w
   400  0010  0A84               	incf	4,f
   401  0011  0782               	addwf	2,f
   402  0012                     __stringbase:	
   403  0012  3400               	retlw	0
   404  0013                     __end_of__stringtab:	
   405  0013                     _dpowers:	
   406  0013  3401               	retlw	1
   407  0014  3400               	retlw	0
   408  0015  340A               	retlw	10
   409  0016  3400               	retlw	0
   410  0017  3464               	retlw	100
   411  0018  3400               	retlw	0
   412  0019  34E8               	retlw	232
   413  001A  3403               	retlw	3
   414  001B  3410               	retlw	16
   415  001C  3427               	retlw	39
   416  001D                     __end_of_dpowers:	
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  0008                     _PORTDbits	set	8
   420  0006                     _PORTB	set	6
   421  0063                     _SSPIF	set	99
   422  005E                     _PEIE	set	94
   423  005F                     _GIE	set	95
   424  0088                     _TRISD	set	136
   425  0086                     _TRISB	set	134
   426  0091                     _SSPCON2bits	set	145
   427  0087                     _TRISCbits	set	135
   428  0094                     _SSPSTAT	set	148
   429  0093                     _SSPADD	set	147
   430  0091                     _SSPCON2	set	145
   431  0463                     _SSPIE	set	1123
   432  043C                     _TRISC4	set	1084
   433  043B                     _TRISC3	set	1083
   434  001D                     STR_3:	
   435  001D  3425               	retlw	37	;'%'
   436  001E  342E               	retlw	46	;'.'
   437  001F  3433               	retlw	51	;'3'
   438  0020  3464               	retlw	100	;'d'
   439  0021  3420               	retlw	32	;' '
   440  0022  3420               	retlw	32	;' '
   441  0023  3420               	retlw	32	;' '
   442  0024  3425               	retlw	37	;'%'
   443  0025  342E               	retlw	46	;'.'
   444  0026  3433               	retlw	51	;'3'
   445  0027  3464               	retlw	100	;'d'
   446  0028  3425               	retlw	37	;'%'
   447  0029  3425               	retlw	37	;'%'
   448  002A  3420               	retlw	32	;' '
   449  002B  3420               	retlw	32	;' '
   450  002C  3425               	retlw	37	;'%'
   451  002D  342E               	retlw	46	;'.'
   452  002E  3433               	retlw	51	;'3'
   453  002F  3464               	retlw	100	;'d'
   454  0030  3400               	retlw	0
   455  0031                     STR_2:	
   456  0031  3420               	retlw	32	;' '
   457  0032  3453               	retlw	83	;'S'
   458  0033  3431               	retlw	49	;'1'
   459  0034  3420               	retlw	32	;' '
   460  0035  3420               	retlw	32	;' '
   461  0036  3420               	retlw	32	;' '
   462  0037  3420               	retlw	32	;' '
   463  0038  3453               	retlw	83	;'S'
   464  0039  3432               	retlw	50	;'2'
   465  003A  3420               	retlw	32	;' '
   466  003B  3420               	retlw	32	;' '
   467  003C  3420               	retlw	32	;' '
   468  003D  3420               	retlw	32	;' '
   469  003E  3453               	retlw	83	;'S'
   470  003F  3433               	retlw	51	;'3'
   471  0040  3420               	retlw	32	;' '
   472  0041  3400               	retlw	0
   473  0042                     STR_1:	
   474  0042  3425               	retlw	37	;'%'
   475  0043  3464               	retlw	100	;'d'
   476  0044  3400               	retlw	0
   477                           
   478                           ; #config settings
   479  0000                     
   480                           	psect	cinit
   481  07F3                     start_initialization:	
   482  07F3                     __initialization:	
   483                           
   484                           ; Clear objects allocated to BANK0
   485  07F3  1383               	bcf	3,7	;select IRP bank0
   486  07F4  303B               	movlw	low __pbssBANK0
   487  07F5  0084               	movwf	4
   488  07F6  3050               	movlw	low (__pbssBANK0+21)
   489  07F7  120A  118A  2261  120A  118A  	fcall	clear_ram0
   490  07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  07FC                     __end_of__initialization:	
   494  07FC  0183               	clrf	3
   495  07FD  120A  118A  2D5D   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bssBANK0
   498  003B                     __pbssBANK0:	
   499  003B                     _Cont:	
   500  003B                     	ds	1
   501  003C                     _S_2:	
   502  003C                     	ds	1
   503  003D                     _S_1:	
   504  003D                     	ds	1
   505  003E                     _Sensor:	
   506  003E                     	ds	1
   507  003F                     _Pot_1:	
   508  003F                     	ds	1
   509  0040                     _valor:	
   510  0040                     	ds	16
   511                           
   512                           	psect	clrtext
   513  0261                     clear_ram0:	
   514                           ;	Called with FSR containing the base address, and
   515                           ;	W with the last address+1
   516                           
   517  0261  0064               	clrwdt	;clear the watchdog before getting into this loop
   518  0262                     clrloop0:	
   519  0262  0180               	clrf	0	;clear RAM location pointed to by FSR
   520  0263  0A84               	incf	4,f	;increment pointer
   521  0264  0604               	xorwf	4,w	;XOR with final address
   522  0265  1903               	btfsc	3,2	;have we reached the end yet?
   523  0266  3400               	retlw	0	;all done for this memory range, return
   524  0267  0604               	xorwf	4,w	;XOR again to restore value
   525  0268  2A62               	goto	clrloop0	;do the next byte
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:	
   529  0070                     ?_isdigit:	
   530  0070                     ?_Configuracion:	
   531                           ; 1 bit 
   532                           
   533  0070                     ??_isdigit:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_LCD_CmdWrite:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_LCD_CmdWrite:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_DWR_LCD:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_DWR_LCD:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_init_LCD:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Wait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Master_Wait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Master_Start:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ??_I2C_Master_Start:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_I2C_Master_Stop:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_I2C_Master_Write:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?___bmul:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_I2C_Master_Read:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?___wmul:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     ?___lwdiv:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ?___lldiv:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ___bmul@multiplicand:	
   591                           ; 4 bytes @ 0x0
   592                           
   593  0070                     _isdigit$667:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     I2C_Master_Write@d:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     I2C_Master_Read@a:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ___wmul@multiplier:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     ___lwdiv@divisor:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ___lldiv@divisor:	
   609                           ; 2 bytes @ 0x0
   610                           
   611                           
   612                           ; 4 bytes @ 0x0
   613  0070                     	ds	1
   614  0071                     ??___bmul:	
   615  0071                     LCD_CmdWrite@cmd:	
   616                           ; 1 bytes @ 0x1
   617                           
   618  0071                     DWR_LCD@dat:	
   619                           ; 1 bytes @ 0x1
   620                           
   621  0071                     isdigit@c:	
   622                           ; 1 bytes @ 0x1
   623                           
   624                           
   625                           ; 1 bytes @ 0x1
   626  0071                     	ds	1
   627  0072                     ?_LCD_DataWrite:	
   628  0072                     ??_init_LCD:	
   629                           ; 1 bytes @ 0x2
   630                           
   631  0072                     ??_I2C_Master_Write:	
   632                           ; 1 bytes @ 0x2
   633                           
   634  0072                     ??_I2C_Master_Read:	
   635                           ; 1 bytes @ 0x2
   636                           
   637  0072                     ___bmul@product:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     LCD_DataWrite@dato:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ___wmul@multiplicand:	
   644                           ; 2 bytes @ 0x2
   645                           
   646  0072                     ___lwdiv@dividend:	
   647                           ; 2 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ___bmul@multiplier:	
   653                           
   654                           ; 1 bytes @ 0x3
   655  0073                     	ds	1
   656  0074                     ??_LCD_DataWrite:	
   657  0074                     ??___wmul:	
   658                           ; 1 bytes @ 0x4
   659                           
   660  0074                     ??___lwdiv:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     I2C_Master_Read@temp:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ___wmul@product:	
   667                           ; 2 bytes @ 0x4
   668                           
   669  0074                     ___lldiv@dividend:	
   670                           ; 2 bytes @ 0x4
   671                           
   672                           
   673                           ; 4 bytes @ 0x4
   674  0074                     	ds	1
   675  0075                     ___lwdiv@quotient:	
   676                           
   677                           ; 2 bytes @ 0x5
   678  0075                     	ds	1
   679  0076                     ?___awdiv:	
   680  0076                     ___awdiv@divisor:	
   681                           ; 2 bytes @ 0x6
   682                           
   683                           
   684                           ; 2 bytes @ 0x6
   685  0076                     	ds	1
   686  0077                     ___lwdiv@counter:	
   687                           
   688                           ; 1 bytes @ 0x7
   689  0077                     	ds	1
   690  0078                     ??___lldiv:	
   691  0078                     ?___lwmod:	
   692                           ; 1 bytes @ 0x8
   693                           
   694  0078                     ___awdiv@dividend:	
   695                           ; 2 bytes @ 0x8
   696                           
   697  0078                     ___lwmod@divisor:	
   698                           ; 2 bytes @ 0x8
   699                           
   700                           
   701                           ; 2 bytes @ 0x8
   702  0078                     	ds	1
   703  0079                     ___lldiv@quotient:	
   704                           
   705                           ; 4 bytes @ 0x9
   706  0079                     	ds	1
   707  007A                     ??___awdiv:	
   708  007A                     ___lwmod@dividend:	
   709                           ; 1 bytes @ 0xA
   710                           
   711                           
   712                           ; 2 bytes @ 0xA
   713  007A                     	ds	2
   714  007C                     ??___lwmod:	
   715                           
   716                           ; 1 bytes @ 0xC
   717  007C                     	ds	1
   718  007D                     ___lldiv@counter:	
   719  007D                     ___lwmod@counter:	
   720                           ; 1 bytes @ 0xD
   721                           
   722                           
   723                           ; 1 bytes @ 0xD
   724  007D                     	ds	1
   725  007E                     ??_Configuracion:	
   726                           
   727                           	psect	cstackBANK0
   728  0020                     __pcstackBANK0:	
   729                           ; 1 bytes @ 0xE
   730                           
   731  0020                     ?_I2C_Master_Init:	
   732  0020                     ?_sprintf:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0020                     sprintf@f:	
   736                           ; 2 bytes @ 0x0
   737                           
   738  0020                     ___awdiv@counter:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     I2C_Master_Init@c:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 4 bytes @ 0x0
   746  0020                     	ds	1
   747  0021                     ___awdiv@sign:	
   748                           
   749                           ; 1 bytes @ 0x1
   750  0021                     	ds	1
   751  0022                     ___awdiv@quotient:	
   752                           
   753                           ; 2 bytes @ 0x2
   754  0022                     	ds	2
   755  0024                     ??_I2C_Master_Init:	
   756                           
   757                           ; 1 bytes @ 0x4
   758  0024                     	ds	3
   759  0027                     ??_sprintf:	
   760                           
   761                           ; 1 bytes @ 0x7
   762  0027                     	ds	3
   763  002A                     sprintf@ap:	
   764                           
   765                           ; 1 bytes @ 0xA
   766  002A                     	ds	1
   767  002B                     sprintf@flag:	
   768                           
   769                           ; 1 bytes @ 0xB
   770  002B                     	ds	1
   771  002C                     sprintf@cp:	
   772                           
   773                           ; 1 bytes @ 0xC
   774  002C                     	ds	1
   775  002D                     sprintf@len:	
   776                           
   777                           ; 2 bytes @ 0xD
   778  002D                     	ds	2
   779  002F                     sprintf@val:	
   780                           
   781                           ; 2 bytes @ 0xF
   782  002F                     	ds	2
   783  0031                     sprintf@sp:	
   784                           
   785                           ; 1 bytes @ 0x11
   786  0031                     	ds	1
   787  0032                     sprintf@prec:	
   788                           
   789                           ; 1 bytes @ 0x12
   790  0032                     	ds	1
   791  0033                     sprintf@c:	
   792                           
   793                           ; 1 bytes @ 0x13
   794  0033                     	ds	1
   795  0034                     ??_main:	
   796                           
   797                           ; 1 bytes @ 0x14
   798  0034                     	ds	7
   799                           
   800                           	psect	maintext
   801  055D                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 37 in file "I2C_Master.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       7       0       0       0
   824 ;;      Totals:         0       7       0       0       0
   825 ;;Total ram usage:        7 bytes
   826 ;; Hardware stack levels required when called:    3
   827 ;; This function calls:
   828 ;;		_Configuracion
   829 ;;		_I2C_Master_Read
   830 ;;		_I2C_Master_Start
   831 ;;		_I2C_Master_Stop
   832 ;;		_I2C_Master_Write
   833 ;;		_LCD_CmdWrite
   834 ;;		_LCD_DataWrite
   835 ;;		___awdiv
   836 ;;		___wmul
   837 ;;		_sprintf
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  055D                     _main:	
   846  055D                     l1613:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850                           
   851                           ;I2C_Master.c: 38:     Configuracion();
   852  055D  120A  118A  22B9  120A  118A  	fcall	_Configuracion
   853  0562                     l126:	
   854                           ;I2C_Master.c: 39:     while(1){
   855                           
   856                           
   857                           ;I2C_Master.c: 40:         I2C_Master_Start();
   858  0562  120A  118A  2269  120A  118A  	fcall	_I2C_Master_Start
   859                           
   860                           ;I2C_Master.c: 41:         I2C_Master_Write(0x51);
   861  0567  3051               	movlw	81
   862  0568  00F0               	movwf	I2C_Master_Write@d
   863  0569  3000               	movlw	0
   864  056A  00F1               	movwf	I2C_Master_Write@d+1
   865  056B  120A  118A  227B  120A  118A  	fcall	_I2C_Master_Write
   866                           
   867                           ;I2C_Master.c: 42:         Pot_1 = I2C_Master_Read(0);
   868  0570  3000               	movlw	0
   869  0571  00F0               	movwf	I2C_Master_Read@a
   870  0572  00F1               	movwf	I2C_Master_Read@a+1
   871  0573  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Read
   872  0578  0870               	movf	?_I2C_Master_Read,w
   873  0579  1283               	bcf	3,5	;RP0=0, select bank0
   874  057A  1303               	bcf	3,6	;RP1=0, select bank0
   875  057B  00B4               	movwf	??_main
   876  057C  0834               	movf	??_main,w
   877  057D  00BF               	movwf	_Pot_1
   878                           
   879                           ;I2C_Master.c: 43:         I2C_Master_Stop();
   880  057E  120A  118A  2272  120A  118A  	fcall	_I2C_Master_Stop
   881  0583                     l1615:	
   882                           
   883                           ;I2C_Master.c: 44:         _delay((unsigned long)((10)*(4000000/4000.0)));
   884  0583  300D               	movlw	13
   885  0584  1283               	bcf	3,5	;RP0=0, select bank0
   886  0585  1303               	bcf	3,6	;RP1=0, select bank0
   887  0586  00B5               	movwf	??_main+1
   888  0587  30FB               	movlw	251
   889  0588  00B4               	movwf	??_main
   890  0589                     u1257:	
   891  0589  0BB4               	decfsz	??_main,f
   892  058A  2D89               	goto	u1257
   893  058B  0BB5               	decfsz	??_main+1,f
   894  058C  2D89               	goto	u1257
   895  058D                     l1617:	
   896                           
   897                           ;I2C_Master.c: 46:         I2C_Master_Start();
   898  058D  120A  118A  2269  120A  118A  	fcall	_I2C_Master_Start
   899  0592                     l1619:	
   900                           
   901                           ;I2C_Master.c: 47:         I2C_Master_Write(0x61);
   902  0592  3061               	movlw	97
   903  0593  00F0               	movwf	I2C_Master_Write@d
   904  0594  3000               	movlw	0
   905  0595  00F1               	movwf	I2C_Master_Write@d+1
   906  0596  120A  118A  227B  120A  118A  	fcall	_I2C_Master_Write
   907  059B                     l1621:	
   908                           
   909                           ;I2C_Master.c: 48:         Sensor = I2C_Master_Read(0);
   910  059B  3000               	movlw	0
   911  059C  00F0               	movwf	I2C_Master_Read@a
   912  059D  00F1               	movwf	I2C_Master_Read@a+1
   913  059E  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Read
   914  05A3  0870               	movf	?_I2C_Master_Read,w
   915  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   916  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   917  05A6  00B4               	movwf	??_main
   918  05A7  0834               	movf	??_main,w
   919  05A8  00BE               	movwf	_Sensor
   920  05A9                     l1623:	
   921                           
   922                           ;I2C_Master.c: 49:         I2C_Master_Stop();
   923  05A9  120A  118A  2272  120A  118A  	fcall	_I2C_Master_Stop
   924  05AE                     l1625:	
   925                           
   926                           ;I2C_Master.c: 50:         _delay((unsigned long)((10)*(4000000/4000.0)));
   927  05AE  300D               	movlw	13
   928  05AF  1283               	bcf	3,5	;RP0=0, select bank0
   929  05B0  1303               	bcf	3,6	;RP1=0, select bank0
   930  05B1  00B5               	movwf	??_main+1
   931  05B2  30FB               	movlw	251
   932  05B3  00B4               	movwf	??_main
   933  05B4                     u1267:	
   934  05B4  0BB4               	decfsz	??_main,f
   935  05B5  2DB4               	goto	u1267
   936  05B6  0BB5               	decfsz	??_main+1,f
   937  05B7  2DB4               	goto	u1267
   938                           
   939                           ;I2C_Master.c: 52:         I2C_Master_Start();
   940  05B8  120A  118A  2269  120A  118A  	fcall	_I2C_Master_Start
   941                           
   942                           ;I2C_Master.c: 53:         I2C_Master_Write(0x71);
   943  05BD  3071               	movlw	113
   944  05BE  00F0               	movwf	I2C_Master_Write@d
   945  05BF  3000               	movlw	0
   946  05C0  00F1               	movwf	I2C_Master_Write@d+1
   947  05C1  120A  118A  227B  120A  118A  	fcall	_I2C_Master_Write
   948                           
   949                           ;I2C_Master.c: 54:         Cont = I2C_Master_Read(0);
   950  05C6  3000               	movlw	0
   951  05C7  00F0               	movwf	I2C_Master_Read@a
   952  05C8  00F1               	movwf	I2C_Master_Read@a+1
   953  05C9  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Read
   954  05CE  0870               	movf	?_I2C_Master_Read,w
   955  05CF  1283               	bcf	3,5	;RP0=0, select bank0
   956  05D0  1303               	bcf	3,6	;RP1=0, select bank0
   957  05D1  00B4               	movwf	??_main
   958  05D2  0834               	movf	??_main,w
   959  05D3  00BB               	movwf	_Cont
   960                           
   961                           ;I2C_Master.c: 55:         I2C_Master_Stop();
   962  05D4  120A  118A  2272  120A  118A  	fcall	_I2C_Master_Stop
   963  05D9                     l1627:	
   964                           
   965                           ;I2C_Master.c: 56:         _delay((unsigned long)((10)*(4000000/4000.0)));
   966  05D9  300D               	movlw	13
   967  05DA  1283               	bcf	3,5	;RP0=0, select bank0
   968  05DB  1303               	bcf	3,6	;RP1=0, select bank0
   969  05DC  00B5               	movwf	??_main+1
   970  05DD  30FB               	movlw	251
   971  05DE  00B4               	movwf	??_main
   972  05DF                     u1277:	
   973  05DF  0BB4               	decfsz	??_main,f
   974  05E0  2DDF               	goto	u1277
   975  05E1  0BB5               	decfsz	??_main+1,f
   976  05E2  2DDF               	goto	u1277
   977  05E3                     l1629:	
   978                           
   979                           ;I2C_Master.c: 59:         S_1 = (Sensor*100)/220;
   980  05E3  30DC               	movlw	220
   981  05E4  00F6               	movwf	___awdiv@divisor
   982  05E5  3000               	movlw	0
   983  05E6  00F7               	movwf	___awdiv@divisor+1
   984  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   985  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   986  05E9  083E               	movf	_Sensor,w
   987  05EA  00B4               	movwf	??_main
   988  05EB  01B5               	clrf	??_main+1
   989  05EC  0834               	movf	??_main,w
   990  05ED  00F0               	movwf	___wmul@multiplier
   991  05EE  0835               	movf	??_main+1,w
   992  05EF  00F1               	movwf	___wmul@multiplier+1
   993  05F0  3064               	movlw	100
   994  05F1  00F2               	movwf	___wmul@multiplicand
   995  05F2  3000               	movlw	0
   996  05F3  00F3               	movwf	___wmul@multiplicand+1
   997  05F4  120A  118A  22F1  120A  118A  	fcall	___wmul
   998  05F9  0871               	movf	?___wmul+1,w
   999  05FA  00F9               	movwf	___awdiv@dividend+1
  1000  05FB  0870               	movf	?___wmul,w
  1001  05FC  00F8               	movwf	___awdiv@dividend
  1002  05FD  120A  118A  24F4  120A  118A  	fcall	___awdiv
  1003  0602  0876               	movf	?___awdiv,w
  1004  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0605  00B6               	movwf	??_main+2
  1007  0606  0836               	movf	??_main+2,w
  1008  0607  00BD               	movwf	_S_1
  1009  0608                     l1631:	
  1010                           
  1011                           ;I2C_Master.c: 64:         LCD_CmdWrite(0xC0);
  1012  0608  30C0               	movlw	192
  1013  0609  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  1014  060E                     l1633:	
  1015                           
  1016                           ;I2C_Master.c: 65:         LCD_DataWrite(" S1    S2    S3 ");
  1017  060E  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1018  060F  00F2               	movwf	LCD_DataWrite@dato
  1019  0610  3080               	movlw	128
  1020  0611  00F3               	movwf	LCD_DataWrite@dato+1
  1021  0612  120A  118A  2316  120A  118A  	fcall	_LCD_DataWrite
  1022  0617                     l1635:	
  1023                           
  1024                           ;I2C_Master.c: 67:         LCD_CmdWrite(0x80);
  1025  0617  3080               	movlw	128
  1026  0618  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  1027  061D                     l1637:	
  1028                           
  1029                           ;I2C_Master.c: 68:         sprintf(valor, "%.3d   %.3d%%  %.3d", Pot_1,S_1,Cont);
  1030  061D  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1031  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1032  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0620  00B4               	movwf	??_main
  1034  0621  0834               	movf	??_main,w
  1035  0622  00A0               	movwf	sprintf@f
  1036  0623  083F               	movf	_Pot_1,w
  1037  0624  00B5               	movwf	??_main+1
  1038  0625  01B6               	clrf	??_main+2
  1039  0626  0835               	movf	??_main+1,w
  1040  0627  00A1               	movwf	?_sprintf+1
  1041  0628  0836               	movf	??_main+2,w
  1042  0629  00A2               	movwf	?_sprintf+2
  1043  062A  083D               	movf	_S_1,w
  1044  062B  00B7               	movwf	??_main+3
  1045  062C  01B8               	clrf	??_main+4
  1046  062D  0837               	movf	??_main+3,w
  1047  062E  00A3               	movwf	?_sprintf+3
  1048  062F  0838               	movf	??_main+4,w
  1049  0630  00A4               	movwf	?_sprintf+4
  1050  0631  083B               	movf	_Cont,w
  1051  0632  00B9               	movwf	??_main+5
  1052  0633  01BA               	clrf	??_main+6
  1053  0634  0839               	movf	??_main+5,w
  1054  0635  00A5               	movwf	?_sprintf+5
  1055  0636  083A               	movf	??_main+6,w
  1056  0637  00A6               	movwf	?_sprintf+6
  1057  0638  3040               	movlw	(low (_valor| 0))& (0+255)
  1058  0639  120A  118A  264B  120A  118A  	fcall	_sprintf
  1059  063E                     l1639:	
  1060                           
  1061                           ;I2C_Master.c: 69:         LCD_DataWrite(valor);
  1062  063E  3040               	movlw	(low (_valor| 0))& (0+255)
  1063  063F  00F2               	movwf	LCD_DataWrite@dato
  1064  0640  3000               	movlw	0
  1065  0641  00F3               	movwf	LCD_DataWrite@dato+1
  1066  0642  120A  118A  2316  120A  118A  	fcall	_LCD_DataWrite
  1067  0647  2D62               	goto	l126
  1068  0648  120A  118A  2800   	ljmp	start
  1069  064B                     __end_of_main:	
  1070                           
  1071                           	psect	text1
  1072  064B                     __ptext1:	
  1073 ;; *************** function _sprintf *****************
  1074 ;; Defined at:
  1075 ;;		line 505 in file "D:\Xc8\pic\sources\c90\common\doprnt.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  sp              1    wreg     PTR unsigned char 
  1078 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
  1079 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1080 ;;		 -> STR_3(20), STR_1(3), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1083 ;;		 -> valor(16), WriteInt_LCD@output1(3), 
  1084 ;;  tmpval          4    0        struct .
  1085 ;;  val             2   15[BANK0 ] unsigned int 
  1086 ;;  len             2   13[BANK0 ] unsigned int 
  1087 ;;  c               1   19[BANK0 ] unsigned char 
  1088 ;;  prec            1   18[BANK0 ] char 
  1089 ;;  cp              1   12[BANK0 ] PTR const unsigned char 
  1090 ;;		 -> sprintf@c(1), 
  1091 ;;  flag            1   11[BANK0 ] unsigned char 
  1092 ;;  ap              1   10[BANK0 ] PTR void [1]
  1093 ;;		 -> ?_sprintf(2), 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  2    0[BANK0 ] int 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       7       0       0       0
  1104 ;;      Locals:         0      10       0       0       0
  1105 ;;      Temps:          0       3       0       0       0
  1106 ;;      Totals:         0      20       0       0       0
  1107 ;;Total ram usage:       20 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    1
  1110 ;; This function calls:
  1111 ;;		___bmul
  1112 ;;		___lwdiv
  1113 ;;		___lwmod
  1114 ;;		_isdigit
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;;		_WriteInt_LCD
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _sprintf
  1123  064B                     _sprintf:	
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1127                           ;sprintf@sp stored from wreg
  1128  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1129  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1130  064D  00B1               	movwf	sprintf@sp
  1131  064E                     l1409:	
  1132                           
  1133                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 505: sprintf(char * sp, const char * f, ...);D:
      +                          \Xc8\pic\sources\c90\common\doprnt.c: 506: {;D:\Xc8\pic\sources\c90\common\doprnt.c: 507
      +                          :  va_list ap;;D:\Xc8\pic\sources\c90\common\doprnt.c: 512:  char c;;D:\Xc8\pic\sources\
      +                          c90\common\doprnt.c: 521:  signed char prec;;D:\Xc8\pic\sources\c90\common\doprnt.c: 525
      +                          :  unsigned char flag;;D:\Xc8\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;D:\Xc8\pi
      +                          c\sources\c90\common\doprnt.c: 545:  unsigned int val;;D:\Xc8\pic\sources\c90\common\dop
      +                          rnt.c: 546:  unsigned len;
  1134  064E  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1135  064F  00A7               	movwf	??_sprintf
  1136  0650  0827               	movf	??_sprintf,w
  1137  0651  00AA               	movwf	sprintf@ap
  1138                           
  1139                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1140  0652  2FDC               	goto	l1503
  1141  0653                     l1411:	
  1142                           
  1143                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 555:   if(c != '%')
  1144  0653  3025               	movlw	37
  1145  0654  0633               	xorwf	sprintf@c,w
  1146  0655  1903               	btfsc	3,2
  1147  0656  2E58               	goto	u931
  1148  0657  2E59               	goto	u930
  1149  0658                     u931:	
  1150  0658  2E65               	goto	l1417
  1151  0659                     u930:	
  1152  0659                     l1413:	
  1153                           
  1154                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 557:   {;D:\Xc8\pic\sources\c90\common\doprnt.c
      +                          : 558:    ((*sp++ = (c)));
  1155  0659  0833               	movf	sprintf@c,w
  1156  065A  00A7               	movwf	??_sprintf
  1157  065B  0831               	movf	sprintf@sp,w
  1158  065C  0084               	movwf	4
  1159  065D  0827               	movf	??_sprintf,w
  1160  065E  1383               	bcf	3,7	;select IRP bank0
  1161  065F  0080               	movwf	0
  1162  0660                     l1415:	
  1163  0660  3001               	movlw	1
  1164  0661  00A7               	movwf	??_sprintf
  1165  0662  0827               	movf	??_sprintf,w
  1166  0663  07B1               	addwf	sprintf@sp,f
  1167                           
  1168                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 559:    continue;
  1169  0664  2FDC               	goto	l1503
  1170  0665                     l1417:	
  1171                           
  1172                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1173  0665  01AB               	clrf	sprintf@flag
  1174  0666                     l1419:	
  1175                           
  1176                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 628:   if(*f == '.') {
  1177  0666  0820               	movf	sprintf@f,w
  1178  0667  0084               	movwf	4
  1179  0668  120A  118A  200D  120A  118A  	fcall	stringdir
  1180  066D  3A2E               	xorlw	46
  1181  066E  1D03               	skipz
  1182  066F  2E71               	goto	u941
  1183  0670  2E72               	goto	u940
  1184  0671                     u941:	
  1185  0671  2EA9               	goto	l1433
  1186  0672                     u940:	
  1187  0672                     l1421:	
  1188                           
  1189                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 630:    f++;
  1190  0672  3001               	movlw	1
  1191  0673  00A7               	movwf	??_sprintf
  1192  0674  0827               	movf	??_sprintf,w
  1193  0675  07A0               	addwf	sprintf@f,f
  1194  0676                     l1423:	
  1195                           
  1196                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 644:    {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 645:     prec = 0;
  1197  0676  01B2               	clrf	sprintf@prec
  1198                           
  1199                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
  1200  0677  2E98               	goto	l1431
  1201  0678                     l1425:	
  1202                           
  1203                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 647:      prec *= 10;
  1204  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1206  067A  0832               	movf	sprintf@prec,w
  1207  067B  00A7               	movwf	??_sprintf
  1208  067C  0827               	movf	??_sprintf,w
  1209  067D  00F0               	movwf	___bmul@multiplicand
  1210  067E  300A               	movlw	10
  1211  067F  120A  118A  22A4  120A  118A  	fcall	___bmul
  1212  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0686  00A8               	movwf	??_sprintf+1
  1215  0687  0828               	movf	??_sprintf+1,w
  1216  0688  00B2               	movwf	sprintf@prec
  1217  0689                     l1427:	
  1218                           
  1219                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 648:         prec += *f++ - '0';
  1220  0689  0820               	movf	sprintf@f,w
  1221  068A  0084               	movwf	4
  1222  068B  120A  118A  200D  120A  118A  	fcall	stringdir
  1223  0690  3ED0               	addlw	-48
  1224  0691  00A7               	movwf	??_sprintf
  1225  0692  0827               	movf	??_sprintf,w
  1226  0693  07B2               	addwf	sprintf@prec,f
  1227  0694                     l1429:	
  1228  0694  3001               	movlw	1
  1229  0695  00A7               	movwf	??_sprintf
  1230  0696  0827               	movf	??_sprintf,w
  1231  0697  07A0               	addwf	sprintf@f,f
  1232  0698                     l1431:	
  1233                           
  1234                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 646:     while(isdigit((unsigned)*f)) {
  1235  0698  0820               	movf	sprintf@f,w
  1236  0699  0084               	movwf	4
  1237  069A  120A  118A  200D  120A  118A  	fcall	stringdir
  1238  069F  120A  118A  2292  120A  118A  	fcall	_isdigit
  1239  06A4  1803               	btfsc	3,0
  1240  06A5  2EA7               	goto	u951
  1241  06A6  2EA8               	goto	u950
  1242  06A7                     u951:	
  1243  06A7  2E78               	goto	l1425
  1244  06A8                     u950:	
  1245  06A8  2EE8               	goto	l1453
  1246  06A9                     l1433:	
  1247                           
  1248                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1249  06A9  01B2               	clrf	sprintf@prec
  1250  06AA  2EE8               	goto	l1453
  1251  06AB                     l1435:	
  1252                           
  1253                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 779:    if(prec && (prec < ((int)len)))
  1254  06AB  0832               	movf	sprintf@prec,w
  1255  06AC  1903               	btfsc	3,2
  1256  06AD  2EAF               	goto	u961
  1257  06AE  2EB0               	goto	u960
  1258  06AF                     u961:	
  1259  06AF  2ED0               	goto	l1447
  1260  06B0                     u960:	
  1261  06B0                     l1437:	
  1262  06B0  0832               	movf	sprintf@prec,w
  1263  06B1  3A80               	xorlw	128
  1264  06B2  3E7F               	addlw	-129
  1265  06B3  1803               	skipnc
  1266  06B4  2EB6               	goto	u971
  1267  06B5  2EB7               	goto	u970
  1268  06B6                     u971:	
  1269  06B6  2ED0               	goto	l1447
  1270  06B7                     u970:	
  1271  06B7                     l1439:	
  1272                           
  1273                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 780:     len = (unsigned char)prec;
  1274  06B7  0832               	movf	sprintf@prec,w
  1275  06B8  00A7               	movwf	??_sprintf
  1276  06B9  01A8               	clrf	??_sprintf+1
  1277  06BA  0827               	movf	??_sprintf,w
  1278  06BB  00AD               	movwf	sprintf@len
  1279  06BC  0828               	movf	??_sprintf+1,w
  1280  06BD  00AE               	movwf	sprintf@len+1
  1281  06BE  2ED0               	goto	l1447
  1282  06BF                     l1441:	
  1283                           
  1284                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ = (*cp++)));
  1285  06BF  082C               	movf	sprintf@cp,w
  1286  06C0  0084               	movwf	4
  1287  06C1  1383               	bcf	3,7	;select IRP bank0
  1288  06C2  0800               	movf	0,w
  1289  06C3  00A7               	movwf	??_sprintf
  1290  06C4  0831               	movf	sprintf@sp,w
  1291  06C5  0084               	movwf	4
  1292  06C6  0827               	movf	??_sprintf,w
  1293  06C7  0080               	movwf	0
  1294  06C8                     l1443:	
  1295  06C8  3001               	movlw	1
  1296  06C9  00A7               	movwf	??_sprintf
  1297  06CA  0827               	movf	??_sprintf,w
  1298  06CB  07AC               	addwf	sprintf@cp,f
  1299  06CC                     l1445:	
  1300  06CC  3001               	movlw	1
  1301  06CD  00A7               	movwf	??_sprintf
  1302  06CE  0827               	movf	??_sprintf,w
  1303  06CF  07B1               	addwf	sprintf@sp,f
  1304  06D0                     l1447:	
  1305                           
  1306                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 793:    while(len--)
  1307  06D0  3001               	movlw	1
  1308  06D1  02AD               	subwf	sprintf@len,f
  1309  06D2  3000               	movlw	0
  1310  06D3  1C03               	skipc
  1311  06D4  03AE               	decf	sprintf@len+1,f
  1312  06D5  02AE               	subwf	sprintf@len+1,f
  1313  06D6  0A2D               	incf	sprintf@len,w
  1314  06D7  1D03               	skipz
  1315  06D8  2EDD               	goto	u981
  1316  06D9  0A2E               	incf	sprintf@len+1,w
  1317  06DA  1D03               	btfss	3,2
  1318  06DB  2EDD               	goto	u981
  1319  06DC  2EDE               	goto	u980
  1320  06DD                     u981:	
  1321  06DD  2EBF               	goto	l1441
  1322  06DE                     u980:	
  1323  06DE  2FDC               	goto	l1503
  1324  06DF                     l1449:	
  1325                           
  1326                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 831:    cp = (char *)&c;
  1327  06DF  3033               	movlw	(low (sprintf@c| 0))& (0+255)
  1328  06E0  00A7               	movwf	??_sprintf
  1329  06E1  0827               	movf	??_sprintf,w
  1330  06E2  00AC               	movwf	sprintf@cp
  1331                           
  1332                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 832:    len = 1;
  1333  06E3  3001               	movlw	1
  1334  06E4  00AD               	movwf	sprintf@len
  1335  06E5  3000               	movlw	0
  1336  06E6  00AE               	movwf	sprintf@len+1
  1337                           
  1338                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 833:    goto dostring;
  1339  06E7  2EAB               	goto	l1435
  1340  06E8                     l1453:	
  1341  06E8  3001               	movlw	1
  1342  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1343  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1344  06EB  07A0               	addwf	sprintf@f,f
  1345  06EC  30FF               	movlw	-1
  1346  06ED  0720               	addwf	sprintf@f,w
  1347  06EE  0084               	movwf	4
  1348  06EF  120A  118A  200D  120A  118A  	fcall	stringdir
  1349  06F4  00B3               	movwf	sprintf@c
  1350  06F5  00A7               	movwf	??_sprintf
  1351  06F6  01A8               	clrf	??_sprintf+1
  1352                           
  1353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1354                           ; Switch size 1, requested type "simple"
  1355                           ; Number of cases is 1, Range of values is 0 to 0
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte            4     3 (average)
  1359                           ; direct_byte           11     8 (fixed)
  1360                           ; jumptable            260     6 (fixed)
  1361                           ;	Chosen strategy is simple_byte
  1362  06F7  0828               	movf	??_sprintf+1,w
  1363  06F8  3A00               	xorlw	0	; case 0
  1364  06F9  1903               	skipnz
  1365  06FA  2EFC               	goto	l1671
  1366  06FB  2EDF               	goto	l1449
  1367  06FC                     l1671:	
  1368                           
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 3, Range of values is 0 to 105
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte           10     6 (average)
  1374                           ; jumptable            260     6 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  06FC  0827               	movf	??_sprintf,w
  1377  06FD  3A00               	xorlw	0	; case 0
  1378  06FE  1903               	skipnz
  1379  06FF  2FEE               	goto	l1505
  1380  0700  3A64               	xorlw	100	; case 100
  1381  0701  1903               	skipnz
  1382  0702  2F07               	goto	l1455
  1383  0703  3A0D               	xorlw	13	; case 105
  1384  0704  1903               	skipnz
  1385  0705  2F07               	goto	l1455
  1386  0706  2EDF               	goto	l1449
  1387  0707                     l1455:	
  1388                           
  1389                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1285:     val = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1390  0707  082A               	movf	sprintf@ap,w
  1391  0708  0084               	movwf	4
  1392  0709  1383               	bcf	3,7	;select IRP bank0
  1393  070A  0800               	movf	0,w
  1394  070B  00AF               	movwf	sprintf@val
  1395  070C  0A84               	incf	4,f
  1396  070D  0800               	movf	0,w
  1397  070E  00B0               	movwf	sprintf@val+1
  1398  070F                     l1457:	
  1399  070F  3002               	movlw	2
  1400  0710  00A7               	movwf	??_sprintf
  1401  0711  0827               	movf	??_sprintf,w
  1402  0712  07AA               	addwf	sprintf@ap,f
  1403  0713                     l1459:	
  1404                           
  1405                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1287:    if((int)val < 0) {
  1406  0713  1FB0               	btfss	sprintf@val+1,7
  1407  0714  2F16               	goto	u991
  1408  0715  2F17               	goto	u990
  1409  0716                     u991:	
  1410  0716  2F20               	goto	l1465
  1411  0717                     u990:	
  1412  0717                     l1461:	
  1413                           
  1414                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1288:     flag |= 0x03;
  1415  0717  3003               	movlw	3
  1416  0718  00A7               	movwf	??_sprintf
  1417  0719  0827               	movf	??_sprintf,w
  1418  071A  04AB               	iorwf	sprintf@flag,f
  1419  071B                     l1463:	
  1420                           
  1421                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1289:     val = -val;
  1422  071B  09AF               	comf	sprintf@val,f
  1423  071C  09B0               	comf	sprintf@val+1,f
  1424  071D  0AAF               	incf	sprintf@val,f
  1425  071E  1903               	skipnz
  1426  071F  0AB0               	incf	sprintf@val+1,f
  1427  0720                     l1465:	
  1428                           
  1429                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1292:   };D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1316:   if(prec == 0 && val == 0)
  1430  0720  0832               	movf	sprintf@prec,w
  1431  0721  1D03               	btfss	3,2
  1432  0722  2F24               	goto	u1001
  1433  0723  2F25               	goto	u1000
  1434  0724                     u1001:	
  1435  0724  2F2F               	goto	l1471
  1436  0725                     u1000:	
  1437  0725                     l1467:	
  1438  0725  082F               	movf	sprintf@val,w
  1439  0726  0430               	iorwf	sprintf@val+1,w
  1440  0727  1D03               	btfss	3,2
  1441  0728  2F2A               	goto	u1011
  1442  0729  2F2B               	goto	u1010
  1443  072A                     u1011:	
  1444  072A  2F2F               	goto	l1471
  1445  072B                     u1010:	
  1446  072B                     l1469:	
  1447                           
  1448                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1449  072B  3001               	movlw	1
  1450  072C  00A7               	movwf	??_sprintf
  1451  072D  0827               	movf	??_sprintf,w
  1452  072E  07B2               	addwf	sprintf@prec,f
  1453  072F                     l1471:	
  1454                           
  1455                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof
      +                           dpowers[0] ; c++)
  1456  072F  01B3               	clrf	sprintf@c
  1457  0730  0AB3               	incf	sprintf@c,f
  1458  0731  3005               	movlw	5
  1459  0732  0633               	xorwf	sprintf@c,w
  1460  0733  1D03               	btfss	3,2
  1461  0734  2F36               	goto	u1021
  1462  0735  2F37               	goto	u1020
  1463  0736                     u1021:	
  1464  0736  2F38               	goto	l1475
  1465  0737                     u1020:	
  1466  0737  2F5E               	goto	l1481
  1467  0738                     l1475:	
  1468                           
  1469                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1332:     if(val < dpowers[c])
  1470  0738  0833               	movf	sprintf@c,w
  1471  0739  00A7               	movwf	??_sprintf
  1472  073A  0727               	addwf	??_sprintf,w
  1473  073B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1474  073C  0084               	movwf	4
  1475  073D  120A  118A  200D  120A  118A  	fcall	stringdir
  1476  0742  00A8               	movwf	??_sprintf+1
  1477  0743  120A  118A  200D  120A  118A  	fcall	stringdir
  1478  0748  00A9               	movwf	??_sprintf+2
  1479  0749  0829               	movf	??_sprintf+2,w
  1480  074A  0230               	subwf	sprintf@val+1,w
  1481  074B  1D03               	skipz
  1482  074C  2F4F               	goto	u1035
  1483  074D  0828               	movf	??_sprintf+1,w
  1484  074E  022F               	subwf	sprintf@val,w
  1485  074F                     u1035:	
  1486  074F  1803               	skipnc
  1487  0750  2F52               	goto	u1031
  1488  0751  2F53               	goto	u1030
  1489  0752                     u1031:	
  1490  0752  2F54               	goto	l1479
  1491  0753                     u1030:	
  1492  0753  2F5E               	goto	l1481
  1493  0754                     l1479:	
  1494  0754  3001               	movlw	1
  1495  0755  00A7               	movwf	??_sprintf
  1496  0756  0827               	movf	??_sprintf,w
  1497  0757  07B3               	addwf	sprintf@c,f
  1498  0758  3005               	movlw	5
  1499  0759  0633               	xorwf	sprintf@c,w
  1500  075A  1D03               	btfss	3,2
  1501  075B  2F5D               	goto	u1041
  1502  075C  2F5E               	goto	u1040
  1503  075D                     u1041:	
  1504  075D  2F38               	goto	l1475
  1505  075E                     u1040:	
  1506  075E                     l1481:	
  1507                           
  1508                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1365:   if(c < prec)
  1509  075E  0832               	movf	sprintf@prec,w
  1510  075F  00A7               	movwf	??_sprintf
  1511  0760  01A8               	clrf	??_sprintf+1
  1512  0761  1BA7               	btfsc	??_sprintf,7
  1513  0762  03A8               	decf	??_sprintf+1,f
  1514  0763  0828               	movf	??_sprintf+1,w
  1515  0764  3A80               	xorlw	128
  1516  0765  3C80               	sublw	128
  1517  0766  1D03               	skipz
  1518  0767  2F6A               	goto	u1055
  1519  0768  0827               	movf	??_sprintf,w
  1520  0769  0233               	subwf	sprintf@c,w
  1521  076A                     u1055:	
  1522  076A  1803               	skipnc
  1523  076B  2F6D               	goto	u1051
  1524  076C  2F6E               	goto	u1050
  1525  076D                     u1051:	
  1526  076D  2F6F               	goto	l1485
  1527  076E                     u1050:	
  1528  076E                     l1483:	
  1529  076E  2F89               	goto	l1489
  1530  076F                     l1485:	
  1531  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0771  0832               	movf	sprintf@prec,w
  1534  0772  00A7               	movwf	??_sprintf
  1535  0773  01A8               	clrf	??_sprintf+1
  1536  0774  1BA7               	btfsc	??_sprintf,7
  1537  0775  03A8               	decf	??_sprintf+1,f
  1538  0776  0828               	movf	??_sprintf+1,w
  1539  0777  3A80               	xorlw	128
  1540  0778  00A9               	movwf	??_sprintf+2
  1541  0779  3080               	movlw	128
  1542  077A  0229               	subwf	??_sprintf+2,w
  1543  077B  1D03               	skipz
  1544  077C  2F7F               	goto	u1065
  1545  077D  0833               	movf	sprintf@c,w
  1546  077E  0227               	subwf	??_sprintf,w
  1547  077F                     u1065:	
  1548  077F  1803               	skipnc
  1549  0780  2F82               	goto	u1061
  1550  0781  2F83               	goto	u1060
  1551  0782                     u1061:	
  1552  0782  2F89               	goto	l1489
  1553  0783                     u1060:	
  1554  0783                     l1487:	
  1555                           
  1556                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1368:    prec = c;
  1557  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0785  0833               	movf	sprintf@c,w
  1560  0786  00A7               	movwf	??_sprintf
  1561  0787  0827               	movf	??_sprintf,w
  1562  0788  00B2               	movwf	sprintf@prec
  1563  0789                     l1489:	
  1564                           
  1565                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Xc8\pic\sources\c90\common\doprnt.
      +                          c: 1464:    if(flag & 0x03)
  1566  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1567  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1568  078B  082B               	movf	sprintf@flag,w
  1569  078C  3903               	andlw	3
  1570  078D  1903               	btfsc	3,2
  1571  078E  2F90               	goto	u1071
  1572  078F  2F91               	goto	u1070
  1573  0790                     u1071:	
  1574  0790  2FD3               	goto	l1501
  1575  0791                     u1070:	
  1576  0791                     l1491:	
  1577                           
  1578                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++ = ('-')));
  1579  0791  302D               	movlw	45
  1580  0792  00A7               	movwf	??_sprintf
  1581  0793  0831               	movf	sprintf@sp,w
  1582  0794  0084               	movwf	4
  1583  0795  0827               	movf	??_sprintf,w
  1584  0796  1383               	bcf	3,7	;select IRP bank0
  1585  0797  0080               	movwf	0
  1586  0798                     l1493:	
  1587  0798  3001               	movlw	1
  1588  0799  00A7               	movwf	??_sprintf
  1589  079A  0827               	movf	??_sprintf,w
  1590  079B  07B1               	addwf	sprintf@sp,f
  1591  079C  2FD3               	goto	l1501
  1592  079D                     l1495:	
  1593                           
  1594                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1515:     c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1595  079D  300A               	movlw	10
  1596  079E  00F8               	movwf	___lwmod@divisor
  1597  079F  3000               	movlw	0
  1598  07A0  00F9               	movwf	___lwmod@divisor+1
  1599  07A1  0832               	movf	sprintf@prec,w
  1600  07A2  00A7               	movwf	??_sprintf
  1601  07A3  0727               	addwf	??_sprintf,w
  1602  07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1603  07A5  0084               	movwf	4
  1604  07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1605  07AB  00F0               	movwf	___lwdiv@divisor
  1606  07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1607  07B1  00F1               	movwf	___lwdiv@divisor+1
  1608  07B2  0830               	movf	sprintf@val+1,w
  1609  07B3  00F3               	movwf	___lwdiv@dividend+1
  1610  07B4  082F               	movf	sprintf@val,w
  1611  07B5  00F2               	movwf	___lwdiv@dividend
  1612  07B6  120A  118A  244A  120A  118A  	fcall	___lwdiv
  1613  07BB  0871               	movf	?___lwdiv+1,w
  1614  07BC  00FB               	movwf	___lwmod@dividend+1
  1615  07BD  0870               	movf	?___lwdiv,w
  1616  07BE  00FA               	movwf	___lwmod@dividend
  1617  07BF  120A  118A  2410  120A  118A  	fcall	___lwmod
  1618  07C4  0878               	movf	?___lwmod,w
  1619  07C5  3E30               	addlw	48
  1620  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1621  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1622  07C8  00A8               	movwf	??_sprintf+1
  1623  07C9  0828               	movf	??_sprintf+1,w
  1624  07CA  00B3               	movwf	sprintf@c
  1625  07CB                     l1497:	
  1626                           
  1627                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1549:    };D:\Xc8\pic\sources\c90\common\doprnt
      +                          .c: 1550:    ((*sp++ = (c)));
  1628  07CB  0833               	movf	sprintf@c,w
  1629  07CC  00A7               	movwf	??_sprintf
  1630  07CD  0831               	movf	sprintf@sp,w
  1631  07CE  0084               	movwf	4
  1632  07CF  0827               	movf	??_sprintf,w
  1633  07D0  1383               	bcf	3,7	;select IRP bank0
  1634  07D1  0080               	movwf	0
  1635  07D2  2F98               	goto	l1493
  1636  07D3                     l1501:	
  1637                           
  1638                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1500:   while(prec--) {
  1639  07D3  30FF               	movlw	255
  1640  07D4  00A7               	movwf	??_sprintf
  1641  07D5  0827               	movf	??_sprintf,w
  1642  07D6  07B2               	addwf	sprintf@prec,f
  1643  07D7  0A32               	incf	sprintf@prec,w
  1644  07D8  1D03               	btfss	3,2
  1645  07D9  2FDB               	goto	u1081
  1646  07DA  2FDC               	goto	u1080
  1647  07DB                     u1081:	
  1648  07DB  2F9D               	goto	l1495
  1649  07DC                     u1080:	
  1650  07DC                     l1503:	
  1651                           
  1652                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 553:  while((c = *f++)) {
  1653  07DC  3001               	movlw	1
  1654  07DD  07A0               	addwf	sprintf@f,f
  1655  07DE  30FF               	movlw	-1
  1656  07DF  0720               	addwf	sprintf@f,w
  1657  07E0  0084               	movwf	4
  1658  07E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1659  07E6  00A7               	movwf	??_sprintf
  1660  07E7  0827               	movf	??_sprintf,w
  1661  07E8  00B3               	movwf	sprintf@c
  1662  07E9  0833               	movf	sprintf@c,w
  1663  07EA  1D03               	btfss	3,2
  1664  07EB  2FED               	goto	u1091
  1665  07EC  2FEE               	goto	u1090
  1666  07ED                     u1091:	
  1667  07ED  2E53               	goto	l1411
  1668  07EE                     u1090:	
  1669  07EE                     l1505:	
  1670                           
  1671                           ;D:\Xc8\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1672  07EE  0831               	movf	sprintf@sp,w
  1673  07EF  0084               	movwf	4
  1674  07F0  1383               	bcf	3,7	;select IRP bank0
  1675  07F1  0180               	clrf	0
  1676  07F2                     l258:	
  1677  07F2  0008               	return
  1678  07F3                     __end_of_sprintf:	
  1679                           
  1680                           	psect	text2
  1681  0292                     __ptext2:	
  1682 ;; *************** function _isdigit *****************
  1683 ;; Defined at:
  1684 ;;		line 8 in file "D:\Xc8\pic\sources\c90\common\isdigit.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  c               1    wreg     unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  c               1    1[COMMON] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;		None               void
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         2       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         2       0       0       0       0
  1702 ;;Total ram usage:        2 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_sprintf
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _isdigit
  1713  0292                     _isdigit:	
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1717                           ;isdigit@c stored from wreg
  1718  0292  00F1               	movwf	isdigit@c
  1719  0293                     l1327:	
  1720  0293  01F0               	clrf	_isdigit$667
  1721  0294                     l1329:	
  1722  0294  303A               	movlw	58
  1723  0295  0271               	subwf	isdigit@c,w
  1724  0296  1803               	skipnc
  1725  0297  2A99               	goto	u751
  1726  0298  2A9A               	goto	u750
  1727  0299                     u751:	
  1728  0299  2AA2               	goto	l1335
  1729  029A                     u750:	
  1730  029A                     l1331:	
  1731  029A  3030               	movlw	48
  1732  029B  0271               	subwf	isdigit@c,w
  1733  029C  1C03               	skipc
  1734  029D  2A9F               	goto	u761
  1735  029E  2AA0               	goto	u760
  1736  029F                     u761:	
  1737  029F  2AA2               	goto	l1335
  1738  02A0                     u760:	
  1739  02A0                     l1333:	
  1740  02A0  01F0               	clrf	_isdigit$667
  1741  02A1  0AF0               	incf	_isdigit$667,f
  1742  02A2                     l1335:	
  1743  02A2  0C70               	rrf	_isdigit$667,w
  1744  02A3                     l709:	
  1745  02A3  0008               	return
  1746  02A4                     __end_of_isdigit:	
  1747                           
  1748                           	psect	text3
  1749  0410                     __ptext3:	
  1750 ;; *************** function ___lwmod *****************
  1751 ;; Defined at:
  1752 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwmod.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  divisor         2    8[COMMON] unsigned int 
  1755 ;;  dividend        2   10[COMMON] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  counter         1   13[COMMON] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    8[COMMON] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         4       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0
  1769 ;;      Temps:          1       0       0       0       0
  1770 ;;      Totals:         6       0       0       0       0
  1771 ;;Total ram usage:        6 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_sprintf
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function ___lwmod
  1782  0410                     ___lwmod:	
  1783  0410                     l1379:	
  1784                           ;incstack = 0
  1785                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1786                           
  1787  0410  0878               	movf	___lwmod@divisor,w
  1788  0411  0479               	iorwf	___lwmod@divisor+1,w
  1789  0412  1903               	btfsc	3,2
  1790  0413  2C15               	goto	u861
  1791  0414  2C16               	goto	u860
  1792  0415                     u861:	
  1793  0415  2C45               	goto	l1397
  1794  0416                     u860:	
  1795  0416                     l1381:	
  1796  0416  01FD               	clrf	___lwmod@counter
  1797  0417  0AFD               	incf	___lwmod@counter,f
  1798  0418  2C24               	goto	l1387
  1799  0419                     l1383:	
  1800  0419  3001               	movlw	1
  1801  041A                     u875:	
  1802  041A  1003               	clrc
  1803  041B  0DF8               	rlf	___lwmod@divisor,f
  1804  041C  0DF9               	rlf	___lwmod@divisor+1,f
  1805  041D  3EFF               	addlw	-1
  1806  041E  1D03               	skipz
  1807  041F  2C1A               	goto	u875
  1808  0420                     l1385:	
  1809  0420  3001               	movlw	1
  1810  0421  00FC               	movwf	??___lwmod
  1811  0422  087C               	movf	??___lwmod,w
  1812  0423  07FD               	addwf	___lwmod@counter,f
  1813  0424                     l1387:	
  1814  0424  1FF9               	btfss	___lwmod@divisor+1,7
  1815  0425  2C27               	goto	u881
  1816  0426  2C28               	goto	u880
  1817  0427                     u881:	
  1818  0427  2C19               	goto	l1383
  1819  0428                     u880:	
  1820  0428                     l1389:	
  1821  0428  0879               	movf	___lwmod@divisor+1,w
  1822  0429  027B               	subwf	___lwmod@dividend+1,w
  1823  042A  1D03               	skipz
  1824  042B  2C2E               	goto	u895
  1825  042C  0878               	movf	___lwmod@divisor,w
  1826  042D  027A               	subwf	___lwmod@dividend,w
  1827  042E                     u895:	
  1828  042E  1C03               	skipc
  1829  042F  2C31               	goto	u891
  1830  0430  2C32               	goto	u890
  1831  0431                     u891:	
  1832  0431  2C38               	goto	l1393
  1833  0432                     u890:	
  1834  0432                     l1391:	
  1835  0432  0878               	movf	___lwmod@divisor,w
  1836  0433  02FA               	subwf	___lwmod@dividend,f
  1837  0434  0879               	movf	___lwmod@divisor+1,w
  1838  0435  1C03               	skipc
  1839  0436  03FB               	decf	___lwmod@dividend+1,f
  1840  0437  02FB               	subwf	___lwmod@dividend+1,f
  1841  0438                     l1393:	
  1842  0438  3001               	movlw	1
  1843  0439                     u905:	
  1844  0439  1003               	clrc
  1845  043A  0CF9               	rrf	___lwmod@divisor+1,f
  1846  043B  0CF8               	rrf	___lwmod@divisor,f
  1847  043C  3EFF               	addlw	-1
  1848  043D  1D03               	skipz
  1849  043E  2C39               	goto	u905
  1850  043F                     l1395:	
  1851  043F  3001               	movlw	1
  1852  0440  02FD               	subwf	___lwmod@counter,f
  1853  0441  1D03               	btfss	3,2
  1854  0442  2C44               	goto	u911
  1855  0443  2C45               	goto	u910
  1856  0444                     u911:	
  1857  0444  2C28               	goto	l1389
  1858  0445                     u910:	
  1859  0445                     l1397:	
  1860  0445  087B               	movf	___lwmod@dividend+1,w
  1861  0446  00F9               	movwf	?___lwmod+1
  1862  0447  087A               	movf	___lwmod@dividend,w
  1863  0448  00F8               	movwf	?___lwmod
  1864  0449                     l544:	
  1865  0449  0008               	return
  1866  044A                     __end_of___lwmod:	
  1867                           
  1868                           	psect	text4
  1869  044A                     __ptext4:	
  1870 ;; *************** function ___lwdiv *****************
  1871 ;; Defined at:
  1872 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\lwdiv.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  divisor         2    0[COMMON] unsigned int 
  1875 ;;  dividend        2    2[COMMON] unsigned int 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  quotient        2    5[COMMON] unsigned int 
  1878 ;;  counter         1    7[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    0[COMMON] unsigned int 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         4       0       0       0       0
  1889 ;;      Locals:         3       0       0       0       0
  1890 ;;      Temps:          1       0       0       0       0
  1891 ;;      Totals:         8       0       0       0       0
  1892 ;;Total ram usage:        8 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_sprintf
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function ___lwdiv
  1903  044A                     ___lwdiv:	
  1904  044A                     l1353:	
  1905                           ;incstack = 0
  1906                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1907                           
  1908  044A  01F5               	clrf	___lwdiv@quotient
  1909  044B  01F6               	clrf	___lwdiv@quotient+1
  1910  044C                     l1355:	
  1911  044C  0870               	movf	___lwdiv@divisor,w
  1912  044D  0471               	iorwf	___lwdiv@divisor+1,w
  1913  044E  1903               	btfsc	3,2
  1914  044F  2C51               	goto	u791
  1915  0450  2C52               	goto	u790
  1916  0451                     u791:	
  1917  0451  2C89               	goto	l1375
  1918  0452                     u790:	
  1919  0452                     l1357:	
  1920  0452  01F7               	clrf	___lwdiv@counter
  1921  0453  0AF7               	incf	___lwdiv@counter,f
  1922  0454  2C60               	goto	l1363
  1923  0455                     l1359:	
  1924  0455  3001               	movlw	1
  1925  0456                     u805:	
  1926  0456  1003               	clrc
  1927  0457  0DF0               	rlf	___lwdiv@divisor,f
  1928  0458  0DF1               	rlf	___lwdiv@divisor+1,f
  1929  0459  3EFF               	addlw	-1
  1930  045A  1D03               	skipz
  1931  045B  2C56               	goto	u805
  1932  045C                     l1361:	
  1933  045C  3001               	movlw	1
  1934  045D  00F4               	movwf	??___lwdiv
  1935  045E  0874               	movf	??___lwdiv,w
  1936  045F  07F7               	addwf	___lwdiv@counter,f
  1937  0460                     l1363:	
  1938  0460  1FF1               	btfss	___lwdiv@divisor+1,7
  1939  0461  2C63               	goto	u811
  1940  0462  2C64               	goto	u810
  1941  0463                     u811:	
  1942  0463  2C55               	goto	l1359
  1943  0464                     u810:	
  1944  0464                     l1365:	
  1945  0464  3001               	movlw	1
  1946  0465                     u825:	
  1947  0465  1003               	clrc
  1948  0466  0DF5               	rlf	___lwdiv@quotient,f
  1949  0467  0DF6               	rlf	___lwdiv@quotient+1,f
  1950  0468  3EFF               	addlw	-1
  1951  0469  1D03               	skipz
  1952  046A  2C65               	goto	u825
  1953  046B  0871               	movf	___lwdiv@divisor+1,w
  1954  046C  0273               	subwf	___lwdiv@dividend+1,w
  1955  046D  1D03               	skipz
  1956  046E  2C71               	goto	u835
  1957  046F  0870               	movf	___lwdiv@divisor,w
  1958  0470  0272               	subwf	___lwdiv@dividend,w
  1959  0471                     u835:	
  1960  0471  1C03               	skipc
  1961  0472  2C74               	goto	u831
  1962  0473  2C75               	goto	u830
  1963  0474                     u831:	
  1964  0474  2C7C               	goto	l1371
  1965  0475                     u830:	
  1966  0475                     l1367:	
  1967  0475  0870               	movf	___lwdiv@divisor,w
  1968  0476  02F2               	subwf	___lwdiv@dividend,f
  1969  0477  0871               	movf	___lwdiv@divisor+1,w
  1970  0478  1C03               	skipc
  1971  0479  03F3               	decf	___lwdiv@dividend+1,f
  1972  047A  02F3               	subwf	___lwdiv@dividend+1,f
  1973  047B                     l1369:	
  1974  047B  1475               	bsf	___lwdiv@quotient,0
  1975  047C                     l1371:	
  1976  047C  3001               	movlw	1
  1977  047D                     u845:	
  1978  047D  1003               	clrc
  1979  047E  0CF1               	rrf	___lwdiv@divisor+1,f
  1980  047F  0CF0               	rrf	___lwdiv@divisor,f
  1981  0480  3EFF               	addlw	-1
  1982  0481  1D03               	skipz
  1983  0482  2C7D               	goto	u845
  1984  0483                     l1373:	
  1985  0483  3001               	movlw	1
  1986  0484  02F7               	subwf	___lwdiv@counter,f
  1987  0485  1D03               	btfss	3,2
  1988  0486  2C88               	goto	u851
  1989  0487  2C89               	goto	u850
  1990  0488                     u851:	
  1991  0488  2C64               	goto	l1365
  1992  0489                     u850:	
  1993  0489                     l1375:	
  1994  0489  0876               	movf	___lwdiv@quotient+1,w
  1995  048A  00F1               	movwf	?___lwdiv+1
  1996  048B  0875               	movf	___lwdiv@quotient,w
  1997  048C  00F0               	movwf	?___lwdiv
  1998  048D                     l534:	
  1999  048D  0008               	return
  2000  048E                     __end_of___lwdiv:	
  2001                           
  2002                           	psect	text5
  2003  02A4                     __ptext5:	
  2004 ;; *************** function ___bmul *****************
  2005 ;; Defined at:
  2006 ;;		line 4 in file "D:\Xc8\pic\sources\c90\common\Umul8.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  multiplier      1    wreg     unsigned char 
  2009 ;;  multiplicand    1    0[COMMON] unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  multiplier      1    3[COMMON] unsigned char 
  2012 ;;  product         1    2[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      unsigned char 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         1       0       0       0       0
  2023 ;;      Locals:         2       0       0       0       0
  2024 ;;      Temps:          1       0       0       0       0
  2025 ;;      Totals:         4       0       0       0       0
  2026 ;;Total ram usage:        4 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_sprintf
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___bmul
  2037  02A4                     ___bmul:	
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2041                           ;___bmul@multiplier stored from wreg
  2042  02A4  00F3               	movwf	___bmul@multiplier
  2043  02A5                     l1339:	
  2044  02A5  01F2               	clrf	___bmul@product
  2045  02A6                     l1341:	
  2046  02A6  1C73               	btfss	___bmul@multiplier,0
  2047  02A7  2AA9               	goto	u771
  2048  02A8  2AAA               	goto	u770
  2049  02A9                     u771:	
  2050  02A9  2AAE               	goto	l1345
  2051  02AA                     u770:	
  2052  02AA                     l1343:	
  2053  02AA  0870               	movf	___bmul@multiplicand,w
  2054  02AB  00F1               	movwf	??___bmul
  2055  02AC  0871               	movf	??___bmul,w
  2056  02AD  07F2               	addwf	___bmul@product,f
  2057  02AE                     l1345:	
  2058  02AE  1003               	clrc
  2059  02AF  0DF0               	rlf	___bmul@multiplicand,f
  2060  02B0                     l1347:	
  2061  02B0  1003               	clrc
  2062  02B1  0CF3               	rrf	___bmul@multiplier,f
  2063  02B2  0873               	movf	___bmul@multiplier,w
  2064  02B3  1D03               	btfss	3,2
  2065  02B4  2AB6               	goto	u781
  2066  02B5  2AB7               	goto	u780
  2067  02B6                     u781:	
  2068  02B6  2AA6               	goto	l1341
  2069  02B7                     u780:	
  2070  02B7                     l1349:	
  2071  02B7  0872               	movf	___bmul@product,w
  2072  02B8                     l288:	
  2073  02B8  0008               	return
  2074  02B9                     __end_of___bmul:	
  2075                           
  2076                           	psect	text6
  2077  02F1                     __ptext6:	
  2078 ;; *************** function ___wmul *****************
  2079 ;; Defined at:
  2080 ;;		line 15 in file "D:\Xc8\pic\sources\c90\common\Umul16.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  multiplier      2    0[COMMON] unsigned int 
  2083 ;;  multiplicand    2    2[COMMON] unsigned int 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  product         2    4[COMMON] unsigned int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    0[COMMON] unsigned int 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         4       0       0       0       0
  2096 ;;      Locals:         2       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0
  2098 ;;      Totals:         6       0       0       0       0
  2099 ;;Total ram usage:        6 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function ___wmul
  2110  02F1                     ___wmul:	
  2111  02F1                     l1549:	
  2112                           ;incstack = 0
  2113                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2114                           
  2115  02F1  01F4               	clrf	___wmul@product
  2116  02F2  01F5               	clrf	___wmul@product+1
  2117  02F3                     l1551:	
  2118  02F3  1C70               	btfss	___wmul@multiplier,0
  2119  02F4  2AF6               	goto	u1111
  2120  02F5  2AF7               	goto	u1110
  2121  02F6                     u1111:	
  2122  02F6  2AFD               	goto	l262
  2123  02F7                     u1110:	
  2124  02F7                     l1553:	
  2125  02F7  0872               	movf	___wmul@multiplicand,w
  2126  02F8  07F4               	addwf	___wmul@product,f
  2127  02F9  1803               	skipnc
  2128  02FA  0AF5               	incf	___wmul@product+1,f
  2129  02FB  0873               	movf	___wmul@multiplicand+1,w
  2130  02FC  07F5               	addwf	___wmul@product+1,f
  2131  02FD                     l262:	
  2132  02FD  3001               	movlw	1
  2133  02FE                     u1125:	
  2134  02FE  1003               	clrc
  2135  02FF  0DF2               	rlf	___wmul@multiplicand,f
  2136  0300  0DF3               	rlf	___wmul@multiplicand+1,f
  2137  0301  3EFF               	addlw	-1
  2138  0302  1D03               	skipz
  2139  0303  2AFE               	goto	u1125
  2140  0304                     l1555:	
  2141  0304  3001               	movlw	1
  2142  0305                     u1135:	
  2143  0305  1003               	clrc
  2144  0306  0CF1               	rrf	___wmul@multiplier+1,f
  2145  0307  0CF0               	rrf	___wmul@multiplier,f
  2146  0308  3EFF               	addlw	-1
  2147  0309  1D03               	skipz
  2148  030A  2B05               	goto	u1135
  2149  030B                     l1557:	
  2150  030B  0870               	movf	___wmul@multiplier,w
  2151  030C  0471               	iorwf	___wmul@multiplier+1,w
  2152  030D  1D03               	btfss	3,2
  2153  030E  2B10               	goto	u1141
  2154  030F  2B11               	goto	u1140
  2155  0310                     u1141:	
  2156  0310  2AF3               	goto	l1551
  2157  0311                     u1140:	
  2158  0311                     l1559:	
  2159  0311  0875               	movf	___wmul@product+1,w
  2160  0312  00F1               	movwf	?___wmul+1
  2161  0313  0874               	movf	___wmul@product,w
  2162  0314  00F0               	movwf	?___wmul
  2163  0315                     l264:	
  2164  0315  0008               	return
  2165  0316                     __end_of___wmul:	
  2166                           
  2167                           	psect	text7
  2168  04F4                     __ptext7:	
  2169 ;; *************** function ___awdiv *****************
  2170 ;; Defined at:
  2171 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\awdiv.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  divisor         2    6[COMMON] int 
  2174 ;;  dividend        2    8[COMMON] int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  quotient        2    2[BANK0 ] int 
  2177 ;;  sign            1    1[BANK0 ] unsigned char 
  2178 ;;  counter         1    0[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2    6[COMMON] int 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         4       0       0       0       0
  2189 ;;      Locals:         0       4       0       0       0
  2190 ;;      Temps:          1       0       0       0       0
  2191 ;;      Totals:         5       4       0       0       0
  2192 ;;Total ram usage:        9 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function ___awdiv
  2203  04F4                     ___awdiv:	
  2204  04F4                     l1563:	
  2205                           ;incstack = 0
  2206                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2207                           
  2208  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2209  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2210  04F6  01A1               	clrf	___awdiv@sign
  2211  04F7                     l1565:	
  2212  04F7  1FF7               	btfss	___awdiv@divisor+1,7
  2213  04F8  2CFA               	goto	u1151
  2214  04F9  2CFB               	goto	u1150
  2215  04FA                     u1151:	
  2216  04FA  2D02               	goto	l1571
  2217  04FB                     u1150:	
  2218  04FB                     l1567:	
  2219  04FB  09F6               	comf	___awdiv@divisor,f
  2220  04FC  09F7               	comf	___awdiv@divisor+1,f
  2221  04FD  0AF6               	incf	___awdiv@divisor,f
  2222  04FE  1903               	skipnz
  2223  04FF  0AF7               	incf	___awdiv@divisor+1,f
  2224  0500                     l1569:	
  2225  0500  01A1               	clrf	___awdiv@sign
  2226  0501  0AA1               	incf	___awdiv@sign,f
  2227  0502                     l1571:	
  2228  0502  1FF9               	btfss	___awdiv@dividend+1,7
  2229  0503  2D05               	goto	u1161
  2230  0504  2D06               	goto	u1160
  2231  0505                     u1161:	
  2232  0505  2D0F               	goto	l1577
  2233  0506                     u1160:	
  2234  0506                     l1573:	
  2235  0506  09F8               	comf	___awdiv@dividend,f
  2236  0507  09F9               	comf	___awdiv@dividend+1,f
  2237  0508  0AF8               	incf	___awdiv@dividend,f
  2238  0509  1903               	skipnz
  2239  050A  0AF9               	incf	___awdiv@dividend+1,f
  2240  050B                     l1575:	
  2241  050B  3001               	movlw	1
  2242  050C  00FA               	movwf	??___awdiv
  2243  050D  087A               	movf	??___awdiv,w
  2244  050E  06A1               	xorwf	___awdiv@sign,f
  2245  050F                     l1577:	
  2246  050F  01A2               	clrf	___awdiv@quotient
  2247  0510  01A3               	clrf	___awdiv@quotient+1
  2248  0511                     l1579:	
  2249  0511  0876               	movf	___awdiv@divisor,w
  2250  0512  0477               	iorwf	___awdiv@divisor+1,w
  2251  0513  1903               	btfsc	3,2
  2252  0514  2D16               	goto	u1171
  2253  0515  2D17               	goto	u1170
  2254  0516                     u1171:	
  2255  0516  2D4E               	goto	l1599
  2256  0517                     u1170:	
  2257  0517                     l1581:	
  2258  0517  01A0               	clrf	___awdiv@counter
  2259  0518  0AA0               	incf	___awdiv@counter,f
  2260  0519  2D25               	goto	l1587
  2261  051A                     l1583:	
  2262  051A  3001               	movlw	1
  2263  051B                     u1185:	
  2264  051B  1003               	clrc
  2265  051C  0DF6               	rlf	___awdiv@divisor,f
  2266  051D  0DF7               	rlf	___awdiv@divisor+1,f
  2267  051E  3EFF               	addlw	-1
  2268  051F  1D03               	skipz
  2269  0520  2D1B               	goto	u1185
  2270  0521                     l1585:	
  2271  0521  3001               	movlw	1
  2272  0522  00FA               	movwf	??___awdiv
  2273  0523  087A               	movf	??___awdiv,w
  2274  0524  07A0               	addwf	___awdiv@counter,f
  2275  0525                     l1587:	
  2276  0525  1FF7               	btfss	___awdiv@divisor+1,7
  2277  0526  2D28               	goto	u1191
  2278  0527  2D29               	goto	u1190
  2279  0528                     u1191:	
  2280  0528  2D1A               	goto	l1583
  2281  0529                     u1190:	
  2282  0529                     l1589:	
  2283  0529  3001               	movlw	1
  2284  052A                     u1205:	
  2285  052A  1003               	clrc
  2286  052B  0DA2               	rlf	___awdiv@quotient,f
  2287  052C  0DA3               	rlf	___awdiv@quotient+1,f
  2288  052D  3EFF               	addlw	-1
  2289  052E  1D03               	skipz
  2290  052F  2D2A               	goto	u1205
  2291  0530  0877               	movf	___awdiv@divisor+1,w
  2292  0531  0279               	subwf	___awdiv@dividend+1,w
  2293  0532  1D03               	skipz
  2294  0533  2D36               	goto	u1215
  2295  0534  0876               	movf	___awdiv@divisor,w
  2296  0535  0278               	subwf	___awdiv@dividend,w
  2297  0536                     u1215:	
  2298  0536  1C03               	skipc
  2299  0537  2D39               	goto	u1211
  2300  0538  2D3A               	goto	u1210
  2301  0539                     u1211:	
  2302  0539  2D41               	goto	l1595
  2303  053A                     u1210:	
  2304  053A                     l1591:	
  2305  053A  0876               	movf	___awdiv@divisor,w
  2306  053B  02F8               	subwf	___awdiv@dividend,f
  2307  053C  0877               	movf	___awdiv@divisor+1,w
  2308  053D  1C03               	skipc
  2309  053E  03F9               	decf	___awdiv@dividend+1,f
  2310  053F  02F9               	subwf	___awdiv@dividend+1,f
  2311  0540                     l1593:	
  2312  0540  1422               	bsf	___awdiv@quotient,0
  2313  0541                     l1595:	
  2314  0541  3001               	movlw	1
  2315  0542                     u1225:	
  2316  0542  1003               	clrc
  2317  0543  0CF7               	rrf	___awdiv@divisor+1,f
  2318  0544  0CF6               	rrf	___awdiv@divisor,f
  2319  0545  3EFF               	addlw	-1
  2320  0546  1D03               	skipz
  2321  0547  2D42               	goto	u1225
  2322  0548                     l1597:	
  2323  0548  3001               	movlw	1
  2324  0549  02A0               	subwf	___awdiv@counter,f
  2325  054A  1D03               	btfss	3,2
  2326  054B  2D4D               	goto	u1231
  2327  054C  2D4E               	goto	u1230
  2328  054D                     u1231:	
  2329  054D  2D29               	goto	l1589
  2330  054E                     u1230:	
  2331  054E                     l1599:	
  2332  054E  0821               	movf	___awdiv@sign,w
  2333  054F  1903               	btfsc	3,2
  2334  0550  2D52               	goto	u1241
  2335  0551  2D53               	goto	u1240
  2336  0552                     u1241:	
  2337  0552  2D58               	goto	l1603
  2338  0553                     u1240:	
  2339  0553                     l1601:	
  2340  0553  09A2               	comf	___awdiv@quotient,f
  2341  0554  09A3               	comf	___awdiv@quotient+1,f
  2342  0555  0AA2               	incf	___awdiv@quotient,f
  2343  0556  1903               	skipnz
  2344  0557  0AA3               	incf	___awdiv@quotient+1,f
  2345  0558                     l1603:	
  2346  0558  0823               	movf	___awdiv@quotient+1,w
  2347  0559  00F7               	movwf	?___awdiv+1
  2348  055A  0822               	movf	___awdiv@quotient,w
  2349  055B  00F6               	movwf	?___awdiv
  2350  055C                     l415:	
  2351  055C  0008               	return
  2352  055D                     __end_of___awdiv:	
  2353                           
  2354                           	psect	text8
  2355  0316                     __ptext8:	
  2356 ;; *************** function _LCD_DataWrite *****************
  2357 ;; Defined at:
  2358 ;;		line 82 in file "LCD.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  dato            2    2[COMMON] PTR unsigned char 
  2361 ;;		 -> valor(16), STR_2(17), WriteInt_LCD@output1(3), 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         2       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0
  2376 ;;      Totals:         2       0       0       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    1
  2380 ;; This function calls:
  2381 ;;		_DWR_LCD
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;;		_WriteInt_LCD
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _LCD_DataWrite
  2390  0316                     _LCD_DataWrite:	
  2391  0316                     l1401:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _LCD_DataWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2394                           
  2395                           
  2396                           ;LCD.c: 82: void LCD_DataWrite(unsigned char *dato);LCD.c: 83: {;LCD.c: 84:     while(*d
      +                          ato != 0)
  2397  0316  2B2B               	goto	l1407
  2398  0317                     l1403:	
  2399                           
  2400                           ;LCD.c: 85:         DWR_LCD(*dato++);
  2401  0317  0873               	movf	LCD_DataWrite@dato+1,w
  2402  0318  00FF               	movwf	btemp+1
  2403  0319  0872               	movf	LCD_DataWrite@dato,w
  2404  031A  0084               	movwf	4
  2405  031B  120A  118A  2003  120A  118A  	fcall	stringtab
  2406  0320  120A  118A  23A1  120A  118A  	fcall	_DWR_LCD
  2407  0325                     l1405:	
  2408  0325  3001               	movlw	1
  2409  0326  07F2               	addwf	LCD_DataWrite@dato,f
  2410  0327  1803               	skipnc
  2411  0328  0AF3               	incf	LCD_DataWrite@dato+1,f
  2412  0329  3000               	movlw	0
  2413  032A  07F3               	addwf	LCD_DataWrite@dato+1,f
  2414  032B                     l1407:	
  2415                           
  2416                           ;LCD.c: 84:     while(*dato != 0)
  2417  032B  0873               	movf	LCD_DataWrite@dato+1,w
  2418  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2419  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2420  032E  00FF               	movwf	btemp+1
  2421  032F  0872               	movf	LCD_DataWrite@dato,w
  2422  0330  0084               	movwf	4
  2423  0331  120A  118A  2003  120A  118A  	fcall	stringtab
  2424  0336  3A00               	xorlw	0
  2425  0337  1D03               	skipz
  2426  0338  2B3A               	goto	u921
  2427  0339  2B3B               	goto	u920
  2428  033A                     u921:	
  2429  033A  2B17               	goto	l1403
  2430  033B                     u920:	
  2431  033B                     l22:	
  2432  033B  0008               	return
  2433  033C                     __end_of_LCD_DataWrite:	
  2434                           
  2435                           	psect	text9
  2436  03A1                     __ptext9:	
  2437 ;; *************** function _DWR_LCD *****************
  2438 ;; Defined at:
  2439 ;;		line 59 in file "LCD.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  dat             1    wreg     unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  dat             1    1[COMMON] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         2       0       0       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_LCD_DataWrite
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _DWR_LCD
  2468  03A1                     _DWR_LCD:	
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _DWR_LCD: [wreg+status,2+status,0]
  2472                           ;DWR_LCD@dat stored from wreg
  2473  03A1  00F1               	movwf	DWR_LCD@dat
  2474  03A2                     l1281:	
  2475                           
  2476                           ;LCD.c: 59: void DWR_LCD(unsigned char dat);LCD.c: 60: {;LCD.c: 61:     PORTB = 0xFF;
  2477  03A2  30FF               	movlw	255
  2478  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2479  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2480  03A5  0086               	movwf	6	;volatile
  2481  03A6                     l1283:	
  2482                           
  2483                           ;LCD.c: 62:     PORTB &= 0x80;
  2484  03A6  3080               	movlw	128
  2485  03A7  00F0               	movwf	??_DWR_LCD
  2486  03A8  0870               	movf	??_DWR_LCD,w
  2487  03A9  0586               	andwf	6,f	;volatile
  2488  03AA                     l1285:	
  2489                           
  2490                           ;LCD.c: 63:     PORTDbits.RD5 = 0;
  2491  03AA  1288               	bcf	8,5	;volatile
  2492  03AB                     l1287:	
  2493                           
  2494                           ;LCD.c: 64:     PORTDbits.RD6 = 1;
  2495  03AB  1708               	bsf	8,6	;volatile
  2496  03AC                     l1289:	
  2497                           
  2498                           ;LCD.c: 65:     PORTDbits.RD7 = 0;
  2499  03AC  1388               	bcf	8,7	;volatile
  2500  03AD                     l1291:	
  2501                           
  2502                           ;LCD.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2503  03AD  30C7               	movlw	199
  2504  03AE  00F0               	movwf	??_DWR_LCD
  2505  03AF                     u1287:	
  2506  03AF  2BB0               	nop2
  2507  03B0  0BF0               	decfsz	??_DWR_LCD,f
  2508  03B1  2BAF               	goto	u1287
  2509  03B2  2BB3               	nop2
  2510  03B3  2BB4               	nop2
  2511  03B4                     l1293:	
  2512                           
  2513                           ;LCD.c: 67:     PORTDbits.RD7 = 1;
  2514  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2515  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2516  03B6  1788               	bsf	8,7	;volatile
  2517                           
  2518                           ;LCD.c: 68:     if(PORTB == 0x80)
  2519  03B7  3080               	movlw	128
  2520  03B8  0606               	xorwf	6,w	;volatile
  2521  03B9  1D03               	btfss	3,2
  2522  03BA  2BBC               	goto	u711
  2523  03BB  2BBD               	goto	u710
  2524  03BC                     u711:	
  2525  03BC  2BC8               	goto	l15
  2526  03BD                     u710:	
  2527  03BD                     l1295:	
  2528                           
  2529                           ;LCD.c: 69:     {;LCD.c: 70:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  2530  03BD  1388               	bcf	8,7	;volatile
  2531  03BE                     l1297:	
  2532  03BE  30C7               	movlw	199
  2533  03BF  00F0               	movwf	??_DWR_LCD
  2534  03C0                     u1297:	
  2535  03C0  2BC1               	nop2
  2536  03C1  0BF0               	decfsz	??_DWR_LCD,f
  2537  03C2  2BC0               	goto	u1297
  2538  03C3  2BC4               	nop2
  2539  03C4  2BC5               	nop2
  2540  03C5                     l1299:	
  2541  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2542  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2543  03C7  1788               	bsf	8,7	;volatile
  2544  03C8                     l15:	
  2545                           ;LCD.c: 71:     }
  2546                           
  2547                           
  2548                           ;LCD.c: 73:     PORTB = dat;
  2549  03C8  0871               	movf	DWR_LCD@dat,w
  2550  03C9  0086               	movwf	6	;volatile
  2551  03CA                     l1301:	
  2552                           
  2553                           ;LCD.c: 74:     PORTDbits.RD5 = 1;
  2554  03CA  1688               	bsf	8,5	;volatile
  2555  03CB                     l1303:	
  2556                           
  2557                           ;LCD.c: 75:     PORTDbits.RD6 = 0;
  2558  03CB  1308               	bcf	8,6	;volatile
  2559  03CC                     l1305:	
  2560                           
  2561                           ;LCD.c: 77:     PORTDbits.RD7 = 1;
  2562  03CC  1788               	bsf	8,7	;volatile
  2563                           
  2564                           ;LCD.c: 78:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2565  03CD  30C7               	movlw	199
  2566  03CE  00F0               	movwf	??_DWR_LCD
  2567  03CF                     u1307:	
  2568  03CF  2BD0               	nop2
  2569  03D0  0BF0               	decfsz	??_DWR_LCD,f
  2570  03D1  2BCF               	goto	u1307
  2571  03D2  2BD3               	nop2
  2572  03D3  2BD4               	nop2
  2573  03D4                     l1307:	
  2574                           
  2575                           ;LCD.c: 79:     PORTDbits.RD7 = 0;
  2576  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2577  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2578  03D6  1388               	bcf	8,7	;volatile
  2579  03D7                     l16:	
  2580  03D7  0008               	return
  2581  03D8                     __end_of_DWR_LCD:	
  2582                           
  2583                           	psect	text10
  2584  027B                     __ptext10:	
  2585 ;; *************** function _I2C_Master_Write *****************
  2586 ;; Defined at:
  2587 ;;		line 62 in file "I2C.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  d               2    0[COMMON] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         2       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    1
  2608 ;; This function calls:
  2609 ;;		_I2C_Master_Wait
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _I2C_Master_Write
  2617  027B                     _I2C_Master_Write:	
  2618  027B                     l1523:	
  2619                           ;incstack = 0
  2620                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2621                           
  2622                           
  2623                           ;I2C.c: 62: void I2C_Master_Write(unsigned d);I2C.c: 63: {;I2C.c: 64:     I2C_Master_Wai
      +                          t();
  2624  027B  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2625  0280                     l1525:	
  2626                           
  2627                           ;I2C.c: 65:     SSPBUF = d;
  2628  0280  0870               	movf	I2C_Master_Write@d,w
  2629  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0283  0093               	movwf	19	;volatile
  2632  0284                     l75:	
  2633  0284  0008               	return
  2634  0285                     __end_of_I2C_Master_Write:	
  2635                           
  2636                           	psect	text11
  2637  0272                     __ptext11:	
  2638 ;; *************** function _I2C_Master_Stop *****************
  2639 ;; Defined at:
  2640 ;;		line 52 in file "I2C.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    1
  2661 ;; This function calls:
  2662 ;;		_I2C_Master_Wait
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _I2C_Master_Stop
  2670  0272                     _I2C_Master_Stop:	
  2671  0272                     l1519:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2674                           
  2675                           
  2676                           ;I2C.c: 54:     I2C_Master_Wait();
  2677  0272  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2678  0277                     l1521:	
  2679                           
  2680                           ;I2C.c: 55:     SSPCON2bits.PEN = 1;
  2681  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0278  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0279  1511               	bsf	17,2	;volatile
  2684  027A                     l72:	
  2685  027A  0008               	return
  2686  027B                     __end_of_I2C_Master_Stop:	
  2687                           
  2688                           	psect	text12
  2689  0269                     __ptext12:	
  2690 ;; *************** function _I2C_Master_Start *****************
  2691 ;; Defined at:
  2692 ;;		line 36 in file "I2C.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    1
  2713 ;; This function calls:
  2714 ;;		_I2C_Master_Wait
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _I2C_Master_Start
  2722  0269                     _I2C_Master_Start:	
  2723  0269                     l1515:	
  2724                           ;incstack = 0
  2725                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2726                           
  2727                           
  2728                           ;I2C.c: 38:     I2C_Master_Wait();
  2729  0269  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2730  026E                     l1517:	
  2731                           
  2732                           ;I2C.c: 39:     SSPCON2bits.SEN = 1;
  2733  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2734  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0270  1411               	bsf	17,0	;volatile
  2736  0271                     l66:	
  2737  0271  0008               	return
  2738  0272                     __end_of_I2C_Master_Start:	
  2739                           
  2740                           	psect	text13
  2741  033C                     __ptext13:	
  2742 ;; *************** function _I2C_Master_Read *****************
  2743 ;; Defined at:
  2744 ;;		line 71 in file "I2C.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  a               2    0[COMMON] unsigned short 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  temp            2    4[COMMON] unsigned short 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    0[COMMON] unsigned short 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         2       0       0       0       0
  2759 ;;      Locals:         2       0       0       0       0
  2760 ;;      Temps:          2       0       0       0       0
  2761 ;;      Totals:         6       0       0       0       0
  2762 ;;Total ram usage:        6 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		_I2C_Master_Wait
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _I2C_Master_Read
  2774  033C                     _I2C_Master_Read:	
  2775  033C                     l1527:	
  2776                           ;incstack = 0
  2777                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2778                           
  2779                           
  2780                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:    
      +                           unsigned short temp;;I2C.c: 74:     I2C_Master_Wait();
  2781  033C  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2782  0341                     l1529:	
  2783                           
  2784                           ;I2C.c: 75:     SSPCON2bits.RCEN = 1;
  2785  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0342  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0343  1591               	bsf	17,3	;volatile
  2788                           
  2789                           ;I2C.c: 76:     I2C_Master_Wait();
  2790  0344  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2791  0349                     l1531:	
  2792                           
  2793                           ;I2C.c: 77:     temp = SSPBUF;
  2794  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2795  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2796  034B  0813               	movf	19,w	;volatile
  2797  034C  00F2               	movwf	??_I2C_Master_Read
  2798  034D  01F3               	clrf	??_I2C_Master_Read+1
  2799  034E  0872               	movf	??_I2C_Master_Read,w
  2800  034F  00F4               	movwf	I2C_Master_Read@temp
  2801  0350  0873               	movf	??_I2C_Master_Read+1,w
  2802  0351  00F5               	movwf	I2C_Master_Read@temp+1
  2803  0352                     l1533:	
  2804                           
  2805                           ;I2C.c: 78:     I2C_Master_Wait();
  2806  0352  120A  118A  2285  120A  118A  	fcall	_I2C_Master_Wait
  2807  0357                     l1535:	
  2808                           
  2809                           ;I2C.c: 79:     if(a == 1){
  2810  0357  0370               	decf	I2C_Master_Read@a,w
  2811  0358  0471               	iorwf	I2C_Master_Read@a+1,w
  2812  0359  1D03               	btfss	3,2
  2813  035A  2B5C               	goto	u1101
  2814  035B  2B5D               	goto	u1100
  2815  035C                     u1101:	
  2816  035C  2B61               	goto	l78
  2817  035D                     u1100:	
  2818  035D                     l1537:	
  2819                           
  2820                           ;I2C.c: 80:         SSPCON2bits.ACKDT = 0;
  2821  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2822  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2823  035F  1291               	bcf	17,5	;volatile
  2824                           
  2825                           ;I2C.c: 81:     }else{
  2826  0360  2B64               	goto	l79
  2827  0361                     l78:	
  2828                           
  2829                           ;I2C.c: 82:         SSPCON2bits.ACKDT = 1;
  2830  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0363  1691               	bsf	17,5	;volatile
  2833  0364                     l79:	
  2834                           ;I2C.c: 83:     }
  2835                           
  2836                           
  2837                           ;I2C.c: 84:     SSPCON2bits.ACKEN = 1;
  2838  0364  1611               	bsf	17,4	;volatile
  2839  0365                     l1539:	
  2840                           
  2841                           ;I2C.c: 85:     return temp;
  2842  0365  0875               	movf	I2C_Master_Read@temp+1,w
  2843  0366  00F1               	movwf	?_I2C_Master_Read+1
  2844  0367  0874               	movf	I2C_Master_Read@temp,w
  2845  0368  00F0               	movwf	?_I2C_Master_Read
  2846  0369                     l80:	
  2847  0369  0008               	return
  2848  036A                     __end_of_I2C_Master_Read:	
  2849                           
  2850                           	psect	text14
  2851  0285                     __ptext14:	
  2852 ;; *************** function _I2C_Master_Wait *****************
  2853 ;; Defined at:
  2854 ;;		line 29 in file "I2C.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_I2C_Master_Start
  2878 ;;		_I2C_Master_Stop
  2879 ;;		_I2C_Master_Write
  2880 ;;		_I2C_Master_Read
  2881 ;;		_I2C_Master_RepeatedStart
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _I2C_Master_Wait
  2887  0285                     _I2C_Master_Wait:	
  2888  0285                     l1323:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2891                           
  2892  0285                     l60:	
  2893                           ;I2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2894                           
  2895  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2896  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2897  0287  1914               	btfsc	20,2	;volatile
  2898  0288  2A8A               	goto	u731
  2899  0289  2A8B               	goto	u730
  2900  028A                     u731:	
  2901  028A  2A85               	goto	l60
  2902  028B                     u730:	
  2903  028B                     l1325:	
  2904  028B  0811               	movf	17,w	;volatile
  2905  028C  391F               	andlw	31
  2906  028D  1D03               	btfss	3,2
  2907  028E  2A90               	goto	u741
  2908  028F  2A91               	goto	u740
  2909  0290                     u741:	
  2910  0290  2A85               	goto	l60
  2911  0291                     u740:	
  2912  0291                     l63:	
  2913  0291  0008               	return
  2914  0292                     __end_of_I2C_Master_Wait:	
  2915                           
  2916                           	psect	text15
  2917  02B9                     __ptext15:	
  2918 ;; *************** function _Configuracion *****************
  2919 ;; Defined at:
  2920 ;;		line 74 in file "I2C_Master.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    2
  2941 ;; This function calls:
  2942 ;;		_I2C_Master_Init
  2943 ;;		_init_LCD
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _Configuracion
  2951  02B9                     _Configuracion:	
  2952  02B9                     l1543:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _Configuracion: [wreg+status,2+status,0+pclath+cstack]
  2955                           
  2956                           
  2957                           ;I2C_Master.c: 75:     TRISB = 0;
  2958  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2959  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2960  02BB  0186               	clrf	6	;volatile
  2961                           
  2962                           ;I2C_Master.c: 76:     TRISD = 0;
  2963  02BC  0188               	clrf	8	;volatile
  2964  02BD                     l1545:	
  2965                           
  2966                           ;I2C_Master.c: 77:     I2C_Master_Init(100000);
  2967  02BD  3000               	movlw	0
  2968  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2969  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2970  02C0  00A3               	movwf	I2C_Master_Init@c+3
  2971  02C1  3001               	movlw	1
  2972  02C2  00A2               	movwf	I2C_Master_Init@c+2
  2973  02C3  3086               	movlw	134
  2974  02C4  00A1               	movwf	I2C_Master_Init@c+1
  2975  02C5  30A0               	movlw	160
  2976  02C6  00A0               	movwf	I2C_Master_Init@c
  2977  02C7  120A  118A  23D8  120A  118A  	fcall	_I2C_Master_Init
  2978  02CC                     l1547:	
  2979                           
  2980                           ;I2C_Master.c: 78:     init_LCD();
  2981  02CC  120A  118A  22D2  120A  118A  	fcall	_init_LCD
  2982  02D1                     l132:	
  2983  02D1  0008               	return
  2984  02D2                     __end_of_Configuracion:	
  2985                           
  2986                           	psect	text16
  2987  02D2                     __ptext16:	
  2988 ;; *************** function _init_LCD *****************
  2989 ;; Defined at:
  2990 ;;		line 95 in file "LCD.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    1
  3011 ;; This function calls:
  3012 ;;		_LCD_CmdWrite
  3013 ;; This function is called by:
  3014 ;;		_Configuracion
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _init_LCD
  3020  02D2                     _init_LCD:	
  3021  02D2                     l1309:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;LCD.c: 97:     LCD_CmdWrite(0x38);
  3027  02D2  3038               	movlw	56
  3028  02D3  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  3029                           
  3030                           ;LCD.c: 98:     LCD_CmdWrite(0x0E);
  3031  02D8  300E               	movlw	14
  3032  02D9  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  3033                           
  3034                           ;LCD.c: 99:     LCD_CmdWrite(0x01);
  3035  02DE  3001               	movlw	1
  3036  02DF  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  3037                           
  3038                           ;LCD.c: 100:     LCD_CmdWrite(0x06);
  3039  02E4  3006               	movlw	6
  3040  02E5  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  3041                           
  3042                           ;LCD.c: 101:     LCD_CmdWrite(0x80);
  3043  02EA  3080               	movlw	128
  3044  02EB  120A  118A  236A  120A  118A  	fcall	_LCD_CmdWrite
  3045  02F0                     l28:	
  3046  02F0  0008               	return
  3047  02F1                     __end_of_init_LCD:	
  3048                           
  3049                           	psect	text17
  3050  036A                     __ptext17:	
  3051 ;; *************** function _LCD_CmdWrite *****************
  3052 ;; Defined at:
  3053 ;;		line 36 in file "LCD.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  cmd             1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  cmd             1    1[COMMON] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0
  3069 ;;      Temps:          1       0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_init_LCD
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _LCD_CmdWrite
  3083  036A                     _LCD_CmdWrite:	
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0]
  3087                           ;LCD_CmdWrite@cmd stored from wreg
  3088  036A  00F1               	movwf	LCD_CmdWrite@cmd
  3089  036B                     l1229:	
  3090                           
  3091                           ;LCD.c: 36: void LCD_CmdWrite(unsigned char cmd);LCD.c: 37: {;LCD.c: 38:     PORTB = 0xF
      +                          F;
  3092  036B  30FF               	movlw	255
  3093  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3094  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3095  036E  0086               	movwf	6	;volatile
  3096  036F                     l1231:	
  3097                           
  3098                           ;LCD.c: 39:     PORTB &= 0x80;
  3099  036F  3080               	movlw	128
  3100  0370  00F0               	movwf	??_LCD_CmdWrite
  3101  0371  0870               	movf	??_LCD_CmdWrite,w
  3102  0372  0586               	andwf	6,f	;volatile
  3103  0373                     l1233:	
  3104                           
  3105                           ;LCD.c: 40:     PORTDbits.RD5 = 0;
  3106  0373  1288               	bcf	8,5	;volatile
  3107  0374                     l1235:	
  3108                           
  3109                           ;LCD.c: 41:     PORTDbits.RD6 = 1;
  3110  0374  1708               	bsf	8,6	;volatile
  3111  0375                     l1237:	
  3112                           
  3113                           ;LCD.c: 42:     PORTDbits.RD7 = 0;
  3114  0375  1388               	bcf	8,7	;volatile
  3115  0376                     l1239:	
  3116                           
  3117                           ;LCD.c: 43:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3118  0376  30C7               	movlw	199
  3119  0377  00F0               	movwf	??_LCD_CmdWrite
  3120  0378                     u1317:	
  3121  0378  2B79               	nop2
  3122  0379  0BF0               	decfsz	??_LCD_CmdWrite,f
  3123  037A  2B78               	goto	u1317
  3124  037B  2B7C               	nop2
  3125  037C  2B7D               	nop2
  3126  037D                     l1241:	
  3127                           
  3128                           ;LCD.c: 44:     PORTDbits.RD7 = 1;
  3129  037D  1283               	bcf	3,5	;RP0=0, select bank0
  3130  037E  1303               	bcf	3,6	;RP1=0, select bank0
  3131  037F  1788               	bsf	8,7	;volatile
  3132                           
  3133                           ;LCD.c: 45:     if(PORTB == 0x80)
  3134  0380  3080               	movlw	128
  3135  0381  0606               	xorwf	6,w	;volatile
  3136  0382  1D03               	btfss	3,2
  3137  0383  2B85               	goto	u631
  3138  0384  2B86               	goto	u630
  3139  0385                     u631:	
  3140  0385  2B91               	goto	l11
  3141  0386                     u630:	
  3142  0386                     l1243:	
  3143                           
  3144                           ;LCD.c: 46:     {;LCD.c: 47:         PORTDbits.RD7 = 0; _delay((unsigned long)((1)*(4000
      +                          000/4000.0))); PORTDbits.RD7 = 1;
  3145  0386  1388               	bcf	8,7	;volatile
  3146  0387                     l1245:	
  3147  0387  30C7               	movlw	199
  3148  0388  00F0               	movwf	??_LCD_CmdWrite
  3149  0389                     u1327:	
  3150  0389  2B8A               	nop2
  3151  038A  0BF0               	decfsz	??_LCD_CmdWrite,f
  3152  038B  2B89               	goto	u1327
  3153  038C  2B8D               	nop2
  3154  038D  2B8E               	nop2
  3155  038E                     l1247:	
  3156  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3157  038F  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0390  1788               	bsf	8,7	;volatile
  3159  0391                     l11:	
  3160                           ;LCD.c: 48:     }
  3161                           
  3162                           
  3163                           ;LCD.c: 50:     PORTB = cmd;
  3164  0391  0871               	movf	LCD_CmdWrite@cmd,w
  3165  0392  0086               	movwf	6	;volatile
  3166  0393                     l1249:	
  3167                           
  3168                           ;LCD.c: 51:     PORTDbits.RD5 = 0;
  3169  0393  1288               	bcf	8,5	;volatile
  3170  0394                     l1251:	
  3171                           
  3172                           ;LCD.c: 52:     PORTDbits.RD6 = 0;
  3173  0394  1308               	bcf	8,6	;volatile
  3174  0395                     l1253:	
  3175                           
  3176                           ;LCD.c: 54:     PORTDbits.RD7 = 1;
  3177  0395  1788               	bsf	8,7	;volatile
  3178                           
  3179                           ;LCD.c: 55:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3180  0396  30C7               	movlw	199
  3181  0397  00F0               	movwf	??_LCD_CmdWrite
  3182  0398                     u1337:	
  3183  0398  2B99               	nop2
  3184  0399  0BF0               	decfsz	??_LCD_CmdWrite,f
  3185  039A  2B98               	goto	u1337
  3186  039B  2B9C               	nop2
  3187  039C  2B9D               	nop2
  3188  039D                     l1255:	
  3189                           
  3190                           ;LCD.c: 56:     PORTDbits.RD7 = 0;
  3191  039D  1283               	bcf	3,5	;RP0=0, select bank0
  3192  039E  1303               	bcf	3,6	;RP1=0, select bank0
  3193  039F  1388               	bcf	8,7	;volatile
  3194  03A0                     l12:	
  3195  03A0  0008               	return
  3196  03A1                     __end_of_LCD_CmdWrite:	
  3197                           
  3198                           	psect	text18
  3199  03D8                     __ptext18:	
  3200 ;; *************** function _I2C_Master_Init *****************
  3201 ;; Defined at:
  3202 ;;		line 13 in file "I2C.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  c               4    0[BANK0 ] const unsigned long 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       4       0       0       0
  3217 ;;      Locals:         0       0       0       0       0
  3218 ;;      Temps:          0       4       0       0       0
  3219 ;;      Totals:         0       8       0       0       0
  3220 ;;Total ram usage:        8 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    1
  3223 ;; This function calls:
  3224 ;;		___lldiv
  3225 ;; This function is called by:
  3226 ;;		_Configuracion
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _I2C_Master_Init
  3232  03D8                     _I2C_Master_Init:	
  3233  03D8                     l1311:	
  3234                           ;incstack = 0
  3235                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3236                           
  3237                           
  3238                           ;I2C.c: 13: void I2C_Master_Init(const unsigned long c);I2C.c: 14: {;I2C.c: 15:     SSPC
      +                          ON = 0b00101000;
  3239  03D8  3028               	movlw	40
  3240  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3241  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3242  03DB  0094               	movwf	20	;volatile
  3243  03DC                     l1313:	
  3244                           
  3245                           ;I2C.c: 16:     SSPCON2 = 0;
  3246  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  3247  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  3248  03DE  0191               	clrf	17	;volatile
  3249  03DF                     l1315:	
  3250                           
  3251                           ;I2C.c: 17:     SSPADD = (4000000/(4*c))-1;
  3252  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3253  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3254  03E1  0820               	movf	I2C_Master_Init@c,w
  3255  03E2  00A4               	movwf	??_I2C_Master_Init
  3256  03E3  0821               	movf	I2C_Master_Init@c+1,w
  3257  03E4  00A5               	movwf	??_I2C_Master_Init+1
  3258  03E5  0822               	movf	I2C_Master_Init@c+2,w
  3259  03E6  00A6               	movwf	??_I2C_Master_Init+2
  3260  03E7  0823               	movf	I2C_Master_Init@c+3,w
  3261  03E8  00A7               	movwf	??_I2C_Master_Init+3
  3262  03E9  3002               	movlw	2
  3263  03EA                     u725:	
  3264  03EA  1003               	clrc
  3265  03EB  0DA4               	rlf	??_I2C_Master_Init,f
  3266  03EC  0DA5               	rlf	??_I2C_Master_Init+1,f
  3267  03ED  0DA6               	rlf	??_I2C_Master_Init+2,f
  3268  03EE  0DA7               	rlf	??_I2C_Master_Init+3,f
  3269  03EF                     u720:	
  3270  03EF  3EFF               	addlw	-1
  3271  03F0  1D03               	skipz
  3272  03F1  2BEA               	goto	u725
  3273  03F2  0827               	movf	??_I2C_Master_Init+3,w
  3274  03F3  00F3               	movwf	___lldiv@divisor+3
  3275  03F4  0826               	movf	??_I2C_Master_Init+2,w
  3276  03F5  00F2               	movwf	___lldiv@divisor+2
  3277  03F6  0825               	movf	??_I2C_Master_Init+1,w
  3278  03F7  00F1               	movwf	___lldiv@divisor+1
  3279  03F8  0824               	movf	??_I2C_Master_Init,w
  3280  03F9  00F0               	movwf	___lldiv@divisor
  3281  03FA  3000               	movlw	0
  3282  03FB  00F7               	movwf	___lldiv@dividend+3
  3283  03FC  303D               	movlw	61
  3284  03FD  00F6               	movwf	___lldiv@dividend+2
  3285  03FE  3009               	movlw	9
  3286  03FF  00F5               	movwf	___lldiv@dividend+1
  3287  0400  3000               	movlw	0
  3288  0401  00F4               	movwf	___lldiv@dividend
  3289  0402  120A  118A  248E  120A  118A  	fcall	___lldiv
  3290  0407  0870               	movf	?___lldiv,w
  3291  0408  3EFF               	addlw	255
  3292  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3293  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3294  040B  0093               	movwf	19	;volatile
  3295  040C                     l1317:	
  3296                           
  3297                           ;I2C.c: 18:     SSPSTAT = 0;
  3298  040C  0194               	clrf	20	;volatile
  3299  040D                     l1319:	
  3300                           
  3301                           ;I2C.c: 19:     TRISCbits.TRISC3 = 1;
  3302  040D  1587               	bsf	7,3	;volatile
  3303  040E                     l1321:	
  3304                           
  3305                           ;I2C.c: 20:     TRISCbits.TRISC4 = 1;
  3306  040E  1607               	bsf	7,4	;volatile
  3307  040F                     l57:	
  3308  040F  0008               	return
  3309  0410                     __end_of_I2C_Master_Init:	
  3310                           
  3311                           	psect	text19
  3312  048E                     __ptext19:	
  3313 ;; *************** function ___lldiv *****************
  3314 ;; Defined at:
  3315 ;;		line 5 in file "D:\Xc8\pic\sources\c90\common\__lldiv.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  divisor         4    0[COMMON] unsigned long 
  3318 ;;  dividend        4    4[COMMON] unsigned long 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  quotient        4    9[COMMON] unsigned long 
  3321 ;;  counter         1   13[COMMON] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4    0[COMMON] unsigned long 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3331 ;;      Params:         8       0       0       0       0
  3332 ;;      Locals:         5       0       0       0       0
  3333 ;;      Temps:          1       0       0       0       0
  3334 ;;      Totals:        14       0       0       0       0
  3335 ;;Total ram usage:       14 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_I2C_Master_Init
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function ___lldiv
  3346  048E                     ___lldiv:	
  3347  048E                     l1257:	
  3348                           ;incstack = 0
  3349                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3350                           
  3351  048E  3000               	movlw	0
  3352  048F  00FC               	movwf	___lldiv@quotient+3
  3353  0490  3000               	movlw	0
  3354  0491  00FB               	movwf	___lldiv@quotient+2
  3355  0492  3000               	movlw	0
  3356  0493  00FA               	movwf	___lldiv@quotient+1
  3357  0494  3000               	movlw	0
  3358  0495  00F9               	movwf	___lldiv@quotient
  3359  0496  0873               	movf	___lldiv@divisor+3,w
  3360  0497  0472               	iorwf	___lldiv@divisor+2,w
  3361  0498  0471               	iorwf	___lldiv@divisor+1,w
  3362  0499  0470               	iorwf	___lldiv@divisor,w
  3363  049A  1903               	skipnz
  3364  049B  2C9D               	goto	u641
  3365  049C  2C9E               	goto	u640
  3366  049D                     u641:	
  3367  049D  2CEB               	goto	l1277
  3368  049E                     u640:	
  3369  049E                     l1259:	
  3370  049E  01FD               	clrf	___lldiv@counter
  3371  049F  0AFD               	incf	___lldiv@counter,f
  3372  04A0  2CAE               	goto	l1263
  3373  04A1                     l1261:	
  3374  04A1  3001               	movlw	1
  3375  04A2  00F8               	movwf	??___lldiv
  3376  04A3                     u655:	
  3377  04A3  1003               	clrc
  3378  04A4  0DF0               	rlf	___lldiv@divisor,f
  3379  04A5  0DF1               	rlf	___lldiv@divisor+1,f
  3380  04A6  0DF2               	rlf	___lldiv@divisor+2,f
  3381  04A7  0DF3               	rlf	___lldiv@divisor+3,f
  3382  04A8  0BF8               	decfsz	??___lldiv,f
  3383  04A9  2CA3               	goto	u655
  3384  04AA  3001               	movlw	1
  3385  04AB  00F8               	movwf	??___lldiv
  3386  04AC  0878               	movf	??___lldiv,w
  3387  04AD  07FD               	addwf	___lldiv@counter,f
  3388  04AE                     l1263:	
  3389  04AE  1FF3               	btfss	___lldiv@divisor+3,7
  3390  04AF  2CB1               	goto	u661
  3391  04B0  2CB2               	goto	u660
  3392  04B1                     u661:	
  3393  04B1  2CA1               	goto	l1261
  3394  04B2                     u660:	
  3395  04B2                     l1265:	
  3396  04B2  3001               	movlw	1
  3397  04B3  00F8               	movwf	??___lldiv
  3398  04B4                     u675:	
  3399  04B4  1003               	clrc
  3400  04B5  0DF9               	rlf	___lldiv@quotient,f
  3401  04B6  0DFA               	rlf	___lldiv@quotient+1,f
  3402  04B7  0DFB               	rlf	___lldiv@quotient+2,f
  3403  04B8  0DFC               	rlf	___lldiv@quotient+3,f
  3404  04B9  0BF8               	decfsz	??___lldiv,f
  3405  04BA  2CB4               	goto	u675
  3406  04BB                     l1267:	
  3407  04BB  0873               	movf	___lldiv@divisor+3,w
  3408  04BC  0277               	subwf	___lldiv@dividend+3,w
  3409  04BD  1D03               	skipz
  3410  04BE  2CC9               	goto	u685
  3411  04BF  0872               	movf	___lldiv@divisor+2,w
  3412  04C0  0276               	subwf	___lldiv@dividend+2,w
  3413  04C1  1D03               	skipz
  3414  04C2  2CC9               	goto	u685
  3415  04C3  0871               	movf	___lldiv@divisor+1,w
  3416  04C4  0275               	subwf	___lldiv@dividend+1,w
  3417  04C5  1D03               	skipz
  3418  04C6  2CC9               	goto	u685
  3419  04C7  0870               	movf	___lldiv@divisor,w
  3420  04C8  0274               	subwf	___lldiv@dividend,w
  3421  04C9                     u685:	
  3422  04C9  1C03               	skipc
  3423  04CA  2CCC               	goto	u681
  3424  04CB  2CCD               	goto	u680
  3425  04CC                     u681:	
  3426  04CC  2CDC               	goto	l1273
  3427  04CD                     u680:	
  3428  04CD                     l1269:	
  3429  04CD  0870               	movf	___lldiv@divisor,w
  3430  04CE  02F4               	subwf	___lldiv@dividend,f
  3431  04CF  0871               	movf	___lldiv@divisor+1,w
  3432  04D0  1C03               	skipc
  3433  04D1  0F71               	incfsz	___lldiv@divisor+1,w
  3434  04D2  02F5               	subwf	___lldiv@dividend+1,f
  3435  04D3  0872               	movf	___lldiv@divisor+2,w
  3436  04D4  1C03               	skipc
  3437  04D5  0F72               	incfsz	___lldiv@divisor+2,w
  3438  04D6  02F6               	subwf	___lldiv@dividend+2,f
  3439  04D7  0873               	movf	___lldiv@divisor+3,w
  3440  04D8  1C03               	skipc
  3441  04D9  0F73               	incfsz	___lldiv@divisor+3,w
  3442  04DA  02F7               	subwf	___lldiv@dividend+3,f
  3443  04DB                     l1271:	
  3444  04DB  1479               	bsf	___lldiv@quotient,0
  3445  04DC                     l1273:	
  3446  04DC  3001               	movlw	1
  3447  04DD                     u695:	
  3448  04DD  1003               	clrc
  3449  04DE  0CF3               	rrf	___lldiv@divisor+3,f
  3450  04DF  0CF2               	rrf	___lldiv@divisor+2,f
  3451  04E0  0CF1               	rrf	___lldiv@divisor+1,f
  3452  04E1  0CF0               	rrf	___lldiv@divisor,f
  3453  04E2  3EFF               	addlw	-1
  3454  04E3  1D03               	skipz
  3455  04E4  2CDD               	goto	u695
  3456  04E5                     l1275:	
  3457  04E5  3001               	movlw	1
  3458  04E6  02FD               	subwf	___lldiv@counter,f
  3459  04E7  1D03               	btfss	3,2
  3460  04E8  2CEA               	goto	u701
  3461  04E9  2CEB               	goto	u700
  3462  04EA                     u701:	
  3463  04EA  2CB2               	goto	l1265
  3464  04EB                     u700:	
  3465  04EB                     l1277:	
  3466  04EB  087C               	movf	___lldiv@quotient+3,w
  3467  04EC  00F3               	movwf	?___lldiv+3
  3468  04ED  087B               	movf	___lldiv@quotient+2,w
  3469  04EE  00F2               	movwf	?___lldiv+2
  3470  04EF  087A               	movf	___lldiv@quotient+1,w
  3471  04F0  00F1               	movwf	?___lldiv+1
  3472  04F1  0879               	movf	___lldiv@quotient,w
  3473  04F2  00F0               	movwf	?___lldiv
  3474  04F3                     l298:	
  3475  04F3  0008               	return
  3476  04F4                     __end_of___lldiv:	
  3477  007E                     btemp	set	126	;btemp
  3478  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[20]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), WriteInt_LCD@output1(COMMON[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_DataWrite@dato	PTR unsigned char  size(2) Largest target is 17
		 -> valor(BANK0[16]), STR_2(CODE[17]), WriteInt_LCD@output1(COMMON[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _LCD_DataWrite->_DWR_LCD
    _init_LCD->_LCD_CmdWrite
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _Configuracion->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    3958
                                             20 BANK0      7     7      0
                      _Configuracion
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                       _LCD_CmdWrite
                      _LCD_DataWrite
                            ___awdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    17      7    1988
                                              0 BANK0     20    13      7
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_DataWrite                                        2     0      2     295
                                              2 COMMON     2     0      2
                            _DWR_LCD
 ---------------------------------------------------------------------------------
 (2) _DWR_LCD                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0     434
                    _I2C_Master_Init
                           _init_LCD
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             0     0      0      22
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_CmdWrite                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
     _I2C_Master_Init
       ___lldiv
     _init_LCD
       _LCD_CmdWrite
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD_CmdWrite
   _LCD_DataWrite
     _DWR_LCD
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      30       5       60.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 22:33:38 2020

                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
            ?_LCD_CmdWrite 0070                         l11 0391                         l12 03A0  
                       l22 033B                         l15 03C8                         l16 03D7  
                       l28 02F0                         l60 0285                         l63 0291  
                       l80 0369                         l72 027A                         l57 040F  
                       l66 0271                         l75 0284                         l78 0361  
                       l79 0364               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072             ?_LCD_DataWrite 0072                        l132 02D1  
                      l126 0562                        l262 02FD                        l415 055C  
                      l264 0315                        l258 07F2                        l534 048D  
                      l288 02B8                        l544 0449                        l298 04F3  
                      l709 02A3                        _GIE 005F               __CFG_CPD$OFF 0000  
                      u700 04EB                        u701 04EA                        u630 0386  
                      u710 03BD                        u631 0385                        u711 03BC  
                      u640 049E                        u720 03EF                        u641 049D  
                      u730 028B                        u810 0464                        u731 028A  
                      u811 0463                        u660 04B2                        u740 0291  
                      u661 04B1                        u725 03EA                        u741 0290  
                      u805 0456                        u830 0475                        u910 0445  
                      u750 029A                        u655 04A3                        u831 0474  
                      u911 0444                        u751 0299                        u680 04CD  
                      u920 033B                        u760 02A0                        u681 04CC  
                      u921 033A                        u825 0465                        u905 0439  
                      u761 029F                        u770 02AA                        u850 0489  
                      u930 0659                        u675 04B4                        u771 02A9  
                      u851 0488                        u835 0471                        u931 0658  
                      u780 02B7                        u860 0416                        u940 0672  
                      u685 04C9                        u781 02B6                        u845 047D  
                      u861 0415                        u941 0671                        u790 0452  
                      u950 06A8                        u695 04DD                        u791 0451  
                      u951 06A7                        u880 0428                        u960 06B0  
                      u881 0427                        u961 06AF                        u890 0432  
                      u970 06B7                        u891 0431                        u875 041A  
                      u971 06B6                        u980 06DE                        u981 06DD  
                      u990 0717                        u895 042E                        u991 0716  
                      _S_1 003D                        _S_2 003C                        fsr0 0004  
                      indf 0000               __CFG_LVP$OFF 0000                       l1301 03CA  
                     l1311 03D8                       l1231 036F                       l1303 03CB  
                     l1321 040E                       l1313 03DC                       l1241 037D  
                     l1233 0373                       l1305 03CC                       l1401 0316  
                     l1315 03DF                       l1251 0394                       l1243 0386  
                     l1235 0374                       l1323 0285                       l1307 03D4  
                     l1403 0317                       l1331 029A                       l1411 0653  
                     l1261 04A1                       l1317 040C                       l1253 0395  
                     l1245 0387                       l1237 0375                       l1229 036B  
                     l1309 02D2                       l1325 028B                       l1405 0325  
                     l1341 02A6                       l1333 02A0                       l1501 07D3  
                     l1421 0672                       l1413 0659                       l1271 04DB  
                     l1263 04AE                       l1319 040D                       l1255 039D  
                     l1247 038E                       l1239 0376                       l1407 032B  
                     l1343 02AA                       l1335 02A2                       l1327 0293  
                     l1431 0698                       l1423 0676                       l1415 0660  
                     l1503 07DC                       l1273 04DC                       l1265 04B2  
                     l1257 048E                       l1249 0393                       l1521 0277  
                     l1281 03A2                       l1601 0553                       l1345 02AE  
                     l1361 045C                       l1353 044A                       l1329 0294  
                     l1505 07EE                       l1441 06BF                       l1425 0678  
                     l1433 06A9                       l1417 0665                       l1409 064E  
                     l1275 04E5                       l1267 04BB                       l1259 049E  
                     l1531 0349                       l1515 0269                       l1523 027B  
                     l1291 03AD                       l1283 03A6                       l1603 0558  
                     l1347 02B0                       l1339 02A5                       l1371 047C  
                     l1363 0460                       l1355 044C                       l1443 06C8  
                     l1435 06AB                       l1427 0689                       l1419 0666  
                     l1269 04CD                       l1277 04EB                       l1533 0352  
                     l1517 026E                       l1525 0280                       l1293 03B4  
                     l1285 03AA                       l1349 02B7                       l1373 0483  
                     l1365 0464                       l1357 0452                       l1381 0416  
                     l1461 0717                       l1445 06CC                       l1437 06B0  
                     l1453 06E8                       l1429 0694                       l1621 059B  
                     l1613 055D                       l1543 02B9                       l1535 0357  
                     l1527 033C                       l1519 0272                       l1295 03BD  
                     l1287 03AB                       l1551 02F3                       l1367 0475  
                     l1359 0455                       l1375 0489                       l1391 0432  
                     l1383 0419                       l1471 072F                       l1463 071B  
                     l1455 0707                       l1439 06B7                       l1447 06D0  
                     l1631 0608                       l1623 05A9                       l1615 0583  
                     l1545 02BD                       l1537 035D                       l1529 0341  
                     l1297 03BE                       l1289 03AC                       l1553 02F7  
                     l1369 047B                       l1393 0438                       l1385 0420  
                     l1481 075E                       l1465 0720                       l1457 070F  
                     l1449 06DF                       l1633 060E                       l1625 05AE  
                     l1617 058D                       l1547 02CC                       l1539 0365  
                     l1299 03C5                       l1571 0502                       l1563 04F4  
                     l1555 0304                       l1395 043F                       l1387 0424  
                     l1379 0410                       l1491 0791                       l1483 076E  
                     l1475 0738                       l1467 0725                       l1459 0713  
                     l1635 0617                       l1627 05D9                       l1619 0592  
                     l1581 0517                       l1573 0506                       l1565 04F7  
                     l1557 030B                       l1549 02F1                       l1389 0428  
                     l1397 0445                       l1493 0798                       l1485 076F  
                     l1469 072B                       l1637 061D                       l1629 05E3  
                     l1591 053A                       l1583 051A                       l1575 050B  
                     l1567 04FB                       l1559 0311                       l1495 079D  
                     l1487 0783                       l1479 0754                       l1671 06FC  
                     l1639 063E                       l1593 0540                       l1585 0521  
                     l1577 050F                       l1569 0500                       l1497 07CB  
                     l1489 0789                       l1595 0541                       l1587 0525  
                     l1579 0511                       l1597 0548                       l1589 0529  
                     l1599 054E            __end_of_DWR_LCD 03D8                       STR_1 0042  
                     STR_2 0031                       STR_3 001D                       u1000 0725  
                     u1001 0724                       u1010 072B                       u1011 072A  
                     u1100 035D                       u1020 0737                       u1101 035C  
                     u1021 0736                       u1110 02F7                       u1030 0753  
                     u1111 02F6                       u1031 0752                       u1040 075E  
                     u1041 075D                       u1210 053A                       u1050 076E  
                     u1211 0539                       u1051 076D                       u1035 074F  
                     u1140 0311                       u1060 0783                       u1205 052A  
                     u1141 0310                       u1125 02FE                       u1061 0782  
                     u1230 054E                       u1150 04FB                       u1070 0791  
                     u1231 054D                       u1215 0536                       u1151 04FA  
                     u1135 0305                       u1071 0790                       u1055 076A  
                     u1240 0553                       u1160 0506                       u1080 07DC  
                     u1241 0552                       u1225 0542                       u1161 0505  
                     u1081 07DB                       u1065 077F                       u1170 0517  
                     u1090 07EE                       u1307 03CF                       u1171 0516  
                     u1091 07ED                       u1317 0378                       u1190 0529  
                     u1327 0389                       u1191 0528                       u1337 0398  
                     u1185 051B                       u1257 0589                       u1267 05B4  
                     u1277 05DF                       u1287 03AF                       u1297 03C0  
                     _PEIE 005E                       _Cont 003B               __CFG_WRT$OFF 0000  
                     _main 055D                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000          ___bmul@multiplier 0073             ??_LCD_CmdWrite 0070  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 055D  
            __CFG_WDTE$OFF 0000            __end_of___lldiv 04F4            ___awdiv@divisor 0076  
          __end_of___lwdiv 048E            __end_of___lwmod 044A            ___awdiv@counter 0020  
                    _PORTB 0006                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
                    _Pot_1 003F            __end_of_dpowers 001D            __end_of_isdigit 02A4  
                    _valor 0040             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07F3  
           __CFG_MCLRE$OFF 0000            __initialization 07F3               __end_of_main 064B  
          ??_LCD_DataWrite 0074                     ??_main 0034          ?_I2C_Master_Start 0070  
                ??_DWR_LCD 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0078                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                     _Sensor 003E  
                   ___bmul 02A4                     ___wmul 02F1                  ??___awdiv 007A  
                ??___lldiv 0078                  ??___lwdiv 0074           __end_of_init_LCD 02F1  
                ??___lwmod 007C           ___awdiv@quotient 0022                  ??_isdigit 0070  
                ??_sprintf 0027       __end_of_LCD_CmdWrite 03A1    __end_of__initialization 07FC  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070                 __pbssBANK0 003B  
    __end_of_Configuracion 02D2                 __pmaintext 055D                    ?___bmul 0070  
                  ?___wmul 0070                    _DWR_LCD 03A1                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                  ?_init_LCD 0070  
          __size_of___bmul 0015                    ___awdiv 04F4                    ___lldiv 048E  
          __size_of___wmul 0025                    ___lwdiv 044A                    ___lwmod 0410  
                  __ptext1 064B                    __ptext2 0292                    __ptext3 0410  
                  __ptext4 044A                    __ptext5 02A4                    __ptext6 02F1  
                  __ptext7 04F4                    __ptext8 0316                    __ptext9 03A1  
                  _dpowers 0013                    _isdigit 0292      __size_of_LCD_CmdWrite 0037  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 064B                    clrloop0 0262  
     end_of_initialization 07FC                 ??_init_LCD 0072  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070               _LCD_CmdWrite 036A  
    __end_of_LCD_DataWrite 033C                  _PORTDbits 0008                  _TRISCbits 0087  
           __end_of___bmul 02B9             __end_of___wmul 0316        start_initialization 07F3  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                 DWR_LCD@dat 0071   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 ??___bmul 0071                   ??___wmul 0074                   ?_DWR_LCD 0070  
                ___latbits 0002              __pcstackBANK0 0020                sprintf@flag 002B  
              sprintf@prec 0032          __size_of_init_LCD 001F           _I2C_Master_Start 0269  
         _I2C_Master_Write 027B           ___lwdiv@dividend 0072                   ?___awdiv 0076  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0003     __size_of_Configuracion 0019                   ?_isdigit 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 0020             ___wmul@product 0074  
                clear_ram0 0261            LCD_CmdWrite@cmd 0071                __stringbase 0012  
        ___wmul@multiplier 0070           __size_of_DWR_LCD 0037        I2C_Master_Read@temp 0074  
            _Configuracion 02B9           __size_of___awdiv 0069           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
              _isdigit$667 0070                 sprintf@len 002D                 sprintf@val 002F  
          _I2C_Master_Init 03D8          LCD_DataWrite@dato 0072            _I2C_Master_Read 033C  
          _I2C_Master_Wait 0285            _I2C_Master_Stop 0272           __size_of_isdigit 0012  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 027B  
                 __ptext11 0272                   __ptext12 0269                   __ptext13 033C  
                 __ptext14 0285                   __ptext15 02B9                   __ptext16 02D2  
                 __ptext17 036A                   __ptext18 03D8                   __ptext19 048E  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 01A8             ?_Configuracion 0070  
                 _init_LCD 02D2              __size_of_main 00EE     __size_of_LCD_DataWrite 0026  
 __end_of_I2C_Master_Start 0272   __end_of_I2C_Master_Write 0285                   isdigit@c 0071  
                sprintf@ap 002A                  sprintf@cp 002C                  sprintf@sp 0031  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Init 0410    __end_of_I2C_Master_Read 036A    __end_of_I2C_Master_Wait 0292  
  __end_of_I2C_Master_Stop 027B              _LCD_DataWrite 0316                   sprintf@c 0033  
                 sprintf@f 0020           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091            ??_Configuracion 007E  
